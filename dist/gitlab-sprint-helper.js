// ==UserScript==
// @name         GitLab Sprint Helper
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Display a summary of assignees' time estimates on GitLab boards with API integration and comment shortcuts
// @author       Daniel Samer | Linkster
// @match        https://gitlab.com/*/boards/*
// @grant        GM_setValue
// @grant        GM_getValue
// @run-at       document-idle
// @updateURL    https://gitlab.com/daniel_linkster/gitlab-helper/-/raw/main/dist/gitlab-sprint-helper.js
// @downloadURL  https://gitlab.com/daniel_linkster/gitlab-helper/-/raw/main/dist/gitlab-sprint-helper.js
// ==/UserScript==

!function(e){e.formatHours=function formatHours(e){return e/3600},e.generateColorFromString=function generateColorFromString(e){let t=0;for(let s=0;s<e.length;s++)t=(t<<5)-t+e.charCodeAt(s),t|=0;return`hsl(${Math.abs(t)%360}, 70%, 75%)`},e.getContrastColor=function getContrastColor(t){if(t.startsWith("hsl")){const e=t.match(/hsl\(\s*\d+\s*,\s*\d+%\s*,\s*(\d+)%\s*\)/);if(e&&e[1]){return parseInt(e[1],10)>60?"black":"white"}}let s=0,n=0,i=0;try{const o=document.createElement("div");o.style.backgroundColor=t,document.body.appendChild(o);const a=e.getComputedStyle(o).backgroundColor;document.body.removeChild(o);const r=a.match(/rgb\((\d+),\s*(\d+),\s*(\d+)\)/);r&&(s=parseInt(r[1],10),n=parseInt(r[2],10),i=parseInt(r[3],10))}catch(e){return t.startsWith("hsl")&&t.match(/hsl\(\s*\d+\s*,\s*\d+%\s*,\s*(\d+)%/)?parseInt(t.match(/hsl\(\s*\d+\s*,\s*\d+%\s*,\s*(\d+)%/)[1],10)>60?"black":"white":"black"}return(.299*s+.587*n+.114*i)/255>.5?"black":"white"},e.isActiveInputElement=function isActiveInputElement(e){if("INPUT"===e.tagName){const t=e.getAttribute("type");return["text","password","email","search","tel","url",null,""].includes(t)}return"TEXTAREA"===e.tagName||!(!e.hasAttribute("contenteditable")||"false"===e.getAttribute("contenteditable"))},e.getPathFromUrl=function getPathFromUrl(){try{const t=e.location.pathname;if(t.includes("/groups/")&&t.includes("/-/boards")){const e=/\/groups\/([^\/]+(?:\/[^\/]+)*)\/?-?\/?boards/,s=t.match(e);if(!s||!s[1])return console.warn("Could not extract group path from URL:",t),null;const n=s[1].replace(/\/-$/,""),i=encodeURIComponent(n);return{path:n,encodedPath:i,type:"group",apiUrl:`groups/${i}/labels`}}if(t.includes("/-/boards")){const e=/^\/([^\/]+(?:\/[^\/]+)*)\/-\/boards/,s=t.match(e);if(!s||!s[1])return console.warn("Could not extract project path from URL pattern:",t),null;const n=s[1],i=encodeURIComponent(n);return{path:n,encodedPath:i,type:"project",apiUrl:`projects/${i}/labels`}}return console.warn("Not on a GitLab boards page:",t),null}catch(e){return console.error("Error extracting path from URL:",e),null}},e.getCurrentUrlKey=function getCurrentUrlKey(){return e.location.href.split("#")[0]},e.getHistoryKey=function getHistoryKey(){return`timeEstimateHistory_${getCurrentUrlKey()}`},e.fetchAllBoards=async function(){try{if(this.gitlabApi||(this.gitlabApi=e.gitlabApi),!this.gitlabApi)throw new Error("GitLab API not available");const s=getPathFromUrl();if(!s)throw new Error("Could not determine project/group path");let n;if("project"===s.type)n=`projects/${s.encodedPath}/boards`;else{if("group"!==s.type)throw new Error("Unsupported path type: "+s.type);n=`groups/${s.encodedPath}/boards`}let i=[],o=1,a=!0;for(;a;){const e=await this.gitlabApi.callGitLabApi(n,{params:{per_page:100,page:o}});e&&e.length>0?(i=[...i,...e],o++):a=!1}var t=i[0].lists.map((e=>e.label.name));return t.push("Closed"),t.unshift("Open"),t}catch(e){return console.error("Error fetching boards:",e),[]}},e.GitLabAPI=class GitLabAPI{constructor(){this.csrfToken=document.querySelector('meta[name="csrf-token"]')?.getAttribute("content"),this.baseUrl="/api/v4"}callGitLabApi(e,t={}){const{method:s="GET",data:n=null,params:i=null}=t;let o=`${this.baseUrl}/${e}`;if(i){const e=new URLSearchParams;Object.entries(i).forEach((([t,s])=>{null!=s&&e.append(t,s)}));const t=e.toString();t&&(o+=`?${t}`)}const a={method:s,headers:{"Content-Type":"application/json"},credentials:"same-origin"};return"GET"!==s&&this.csrfToken&&(a.headers["X-CSRF-Token"]=this.csrfToken),n&&["POST","PUT","PATCH"].includes(s)&&(a.body=JSON.stringify(n)),fetch(o,a).then((e=>{if(!e.ok)throw new Error(`API request failed: ${e.status} ${e.statusText}`);return e.json()}))}addComment(e,t){const s=e.referencePath.split("#")[0],n=e.iid,i=encodeURIComponent(s);return this.callGitLabApi(`projects/${i}/issues/${n}/notes`,{method:"POST",data:{body:t}})}getCurrentUser(){return this.callGitLabApi("user")}callGitLabApiWithCache(e,t={},s=6e4){const n=`gitlab_api_cache_${e}_${JSON.stringify(t)}`,i=localStorage.getItem(n);if(i)try{const{data:e,timestamp:t}=JSON.parse(i);if(Date.now()-t<s)return Promise.resolve(e)}catch(e){console.warn("Error parsing cached data:",e)}return this.callGitLabApi(e,t).then((e=>(localStorage.setItem(n,JSON.stringify({data:e,timestamp:Date.now()})),e)))}},e.gitlabApi=e.gitlabApi||new GitLabAPI,e.processBoards=function processBoards(){const t={},s={},n={};let i=0,o=0,a=0,r=null,l=0;const c={},d={};document.querySelectorAll(".board-list").forEach(((e,h)=>{let u="U"+h.toString();try{if(e.__vue__&&e.__vue__.$children&&e.__vue__.$children.length>0){const t=e.__vue__.$children.find((e=>e.$props&&e.$props.list&&e.$props.list.title));t&&t.$props.list.title&&(u=t.$props.list.title)}if("Unknown"===u){const t=e.querySelector(".board-title-text");t&&(u=t.textContent.trim())}}catch(t){console.error("Error getting board title:",t);const s=e.querySelector(".board-title-text");s&&(u=s.textContent.trim())}if("Unknown"===u)return;{s[u]||(s[u]={tickets:0,timeEstimate:0}),n[u]||(n[u]={});const e=u.toLowerCase();e.includes("done")||e.includes("closed")||e.includes("complete")||e.includes("finished")}const p=e.querySelectorAll(".board-card"),m=u.toLowerCase();(m.includes("done")||m.includes("closed")||m.includes("complete")||m.includes("finished"))&&(l+=p.length),p.forEach((e=>{try{if(o++,s[u].tickets++,e.__vue__&&e.__vue__.$children){const o=e.__vue__.$children.find((e=>e.$props&&e.$props.item&&void 0!==e.$props.item.timeEstimate));if(o&&o.$props){const e=o.$props;if(!r&&e.item&&e.item.milestone&&(r=e.item.milestone.title),e.item&&e.item.timeEstimate){a++;const o=e.item.timeEstimate;i+=o,s[u].timeEstimate+=o;let r=[];e.item.assignees&&e.item.assignees.nodes&&e.item.assignees.nodes.length?r=e.item.assignees.nodes:e.item.assignees&&e.item.assignees.length>0&&(r=e.item.assignees),r.length>0?r.forEach((e=>{const i=o/r.length,a=e.name,l=e.username||"";d[a]||(d[a]={name:a,username:l,avatar_url:e.avatarUrl||"",timeEstimate:0}),d[a].timeEstimate+=i,c[a]||(c[a]={},Object.keys(s).forEach((e=>{c[a][e]=0}))),c[a][u]=(c[a][u]||0)+i,t[a]||(t[a]=0),t[a]+=i,n[u][a]||(n[u][a]={tickets:0,timeEstimate:0}),n[u][a].tickets++,n[u][a].timeEstimate+=i})):(c.Unassigned||(c.Unassigned={},Object.keys(s).forEach((e=>{c.Unassigned[e]=0}))),c.Unassigned[u]=(c.Unassigned[u]||0)+o,t.Unassigned||(t.Unassigned=0),t.Unassigned+=o,n[u].Unassigned||(n[u].Unassigned={tickets:0,timeEstimate:0}),n[u].Unassigned.tickets++,n[u].Unassigned.timeEstimate+=o)}}}}catch(e){console.error("Error processing card:",e)}})),uiManager.issueSelector.applyOverflowFixes()}));const h={};Object.keys(c).forEach((e=>{const t=Object.keys(c[e]).sort(((e,t)=>{const s=e.toLowerCase().includes("done")||e.toLowerCase().includes("closed")||e.toLowerCase().includes("complete")||e.toLowerCase().includes("finished"),n=t.toLowerCase().includes("done")||t.toLowerCase().includes("closed")||t.toLowerCase().includes("complete")||t.toLowerCase().includes("finished");return s&&!n?1:!s&&n?-1:e.localeCompare(t)}));h[e]={distribution:t.map((t=>{const s=c[e][t]||0;return Math.round(formatHours(s))})),username:d[e]?.username||"",avatar_url:d[e]?.avatar_url||""}}));try{e.historyManager&&e.historyManager.saveHistoryEntry({assigneeTimeMap:t,boardData:s,boardAssigneeData:n,totalEstimate:i,cardsProcessed:o,cardsWithTime:a,currentMilestone:r,closedBoardCards:l,userDistributions:h,userData:d})}catch(e){console.error("Error saving history data:",e)}return{assigneeTimeMap:t,boardData:s,boardAssigneeData:n,totalEstimate:i,cardsProcessed:o,cardsWithTime:a,currentMilestone:r,closedBoardCards:l,userDistributions:h,userData:d}},e.HistoryManager=class HistoryManager{constructor(){this.historyData={}}getBoardKey(){try{const t=e.location.href.split("/boards/");return t.length<2?"unknown-board":t[1]}catch(e){return console.error("Error generating board key:",e),"unknown-board"}}saveHistoryEntry(e){try{const t=this.getBoardKey(),s=(new Date).toISOString().split("T")[0],n=this.loadHistory();n[t]||(n[t]={});const i=e.userPerformance||{},o=e.userDistributions||{},a=e.userData||{},r=e.boardAssigneeData||{};return Object.keys(i).length>0&&Object.keys(o).length>0&&Object.entries(i).forEach((([e,t])=>{o[e]&&(i[e].distribution=o[e].distribution,o[e].username&&(i[e].username=o[e].username),o[e].avatar_url&&(i[e].avatar_url=o[e].avatar_url)),a[e]&&(!i[e].username&&a[e].username&&(i[e].username=a[e].username),!i[e].avatar_url&&a[e].avatar_url&&(i[e].avatar_url=a[e].avatar_url))})),n[t][s]={...e,userDistributions:o,userData:a,timestamp:(new Date).toISOString(),boardAssigneeData:r},localStorage.setItem("gitLabHelperHistory",JSON.stringify(n)),!0}catch(e){return console.error("Error saving history entry:",e),!1}}loadHistory(){try{const e=localStorage.getItem("gitLabHelperHistory");return e?JSON.parse(e):{}}catch(e){return console.error("Error loading history data:",e),{}}}getCurrentBoardHistory(){const e=this.getBoardKey();return this.loadHistory()[e]||{}}clearAllHistory(){try{return localStorage.removeItem("gitLabHelperHistory"),!0}catch(e){return console.error("Error clearing history:",e),!1}}clearCurrentBoardHistory(){try{const e=this.getBoardKey(),t=this.loadHistory();return t[e]&&(delete t[e],localStorage.setItem("gitLabHelperHistory",JSON.stringify(t))),!0}catch(e){return console.error("Error clearing board history:",e),!1}}},e.saveToStorage=function saveToStorage(e,t){try{return"object"==typeof t?localStorage.setItem(e,JSON.stringify(t)):localStorage.setItem(e,t),!0}catch(t){return console.error(`Error saving to localStorage (${e}):`,t),!1}},e.loadFromStorage=function loadFromStorage(e,t=null){try{const s=localStorage.getItem(e);if(null===s)return t;if(s.trim().startsWith("{")||s.trim().startsWith("["))try{return JSON.parse(s)}catch(t){return console.warn(`Failed to parse value for ${e} as JSON, returning as string instead`),s}return s}catch(s){return console.error(`Error loading from localStorage (${e}):`,s),t}};const t={LABEL_WHITELIST:"gitLabHelperLabelWhitelist",ASSIGNEE_WHITELIST:"gitLabHelperAssigneeWhitelist",LAST_ACTIVE_TAB:"gitLabHelperLastActiveTab",UI_COLLAPSED:"gitlabTimeSummaryCollapsed"},s={labelWhitelist:["bug","feature","documentation","enhancement","security","priority","high","medium","low","critical","frontend","backend","ui","ux","api","wontfix","duplicate","invalid","question","ready","in progress","review","blocked"],assigneeWhitelist:[],lastActiveTab:"summary",uiCollapsed:!1,toggleShortcut:"c"};function createUIManager(){return e.uiManager=e.uiManager||new UIManager,uiManager.settingsBtn&&(uiManager.settingsBtn.onclick=t=>{if(t.stopPropagation(),uiManager.bulkCommentsView&&uiManager.bulkCommentsView.settingsManager)uiManager.bulkCommentsView.settingsManager.openSettingsModal();else if(e.settingsManager)e.settingsManager.openSettingsModal();else{const t=new SettingsManager({labelManager:uiManager.labelManager,assigneeManager:uiManager.assigneeManager,gitlabApi:e.gitlabApi||uiManager.gitlabApi,onSettingsChanged:e=>{"all"!==e&&"labels"!==e||uiManager.bulkCommentsView&&uiManager.bulkCommentsView.addLabelShortcut(),"all"!==e&&"assignees"!==e||uiManager.bulkCommentsView&&uiManager.bulkCommentsView.addAssignShortcut()}});uiManager.bulkCommentsView&&(uiManager.bulkCommentsView.settingsManager=t),e.settingsManager=t,t.openSettingsModal()}}),uiManager}e.getLabelWhitelist=function getLabelWhitelist(){try{const e=loadFromStorage(t.LABEL_WHITELIST,null);if(null===e)return[...s.labelWhitelist];if(!Array.isArray(e))return console.warn("Label whitelist is not an array, using default"),[...s.labelWhitelist];const n=e.filter((e=>"string"==typeof e));return 0===n.length&&e.length>0?(console.warn("Label whitelist contained no valid strings, using default"),[...s.labelWhitelist]):n}catch(e){return console.error("Error getting label whitelist:",e),[...s.labelWhitelist]}},e.saveLabelWhitelist=function saveLabelWhitelist(e){try{Array.isArray(e)||(console.warn("Attempting to save invalid whitelist (not an array), using empty array instead"),e=[]);const s=e.filter((e=>"string"==typeof e));return saveToStorage(t.LABEL_WHITELIST,s)}catch(e){return console.error("Error saving label whitelist:",e),!1}},e.resetLabelWhitelist=function resetLabelWhitelist(){try{const e=[...s.labelWhitelist];return saveToStorage(t.LABEL_WHITELIST,e),e}catch(e){return console.error("Error resetting label whitelist:",e),[...s.labelWhitelist]}},e.getAssigneeWhitelist=function getAssigneeWhitelist(){try{const e=loadFromStorage(t.ASSIGNEE_WHITELIST,null);return null===e?[]:Array.isArray(e)?e.filter((e=>e&&"object"==typeof e&&"string"==typeof e.username)):(console.warn("Assignee whitelist is not an array, using empty array"),[])}catch(e){return console.error("Error getting assignee whitelist:",e),[]}},e.saveAssigneeWhitelist=function saveAssigneeWhitelist(e){try{Array.isArray(e)||(console.warn("Attempting to save invalid assignee whitelist (not an array), using empty array instead"),e=[]);const s=e.filter((e=>e&&"object"==typeof e&&"string"==typeof e.username));return saveToStorage(t.ASSIGNEE_WHITELIST,s)}catch(e){return console.error("Error saving assignee whitelist:",e),!1}},e.getLastActiveTab=function getLastActiveTab(){try{const e=loadFromStorage(t.LAST_ACTIVE_TAB,null);if(null===e)return s.lastActiveTab;if("string"!=typeof e){const t=String(e);return t&&["summary","boards","bulkcomments","sprintmanagement"].includes(t)?t:(console.warn("Invalid tab ID format, using default"),s.lastActiveTab)}return"history"===e?"summary":["summary","boards","bulkcomments","sprintmanagement"].includes(e)?e:(console.warn(`Unknown tab ID: ${e}, using default`),s.lastActiveTab)}catch(e){return console.error("Error getting last active tab:",e),s.lastActiveTab}},e.saveLastActiveTab=function saveLastActiveTab(e){try{const n=String(e);return["summary","boards","bulkcomments","sprintmanagement"].includes(n)?saveToStorage(t.LAST_ACTIVE_TAB,n):(console.warn(`Attempting to save invalid tab ID: ${n}, using default`),saveToStorage(t.LAST_ACTIVE_TAB,s.lastActiveTab))}catch(e){return console.error("Error saving last active tab:",e),!1}},e.getToggleShortcut=function getToggleShortcut(){try{const e=loadFromStorage(t.TOGGLE_SHORTCUT,null);return null===e?s.toggleShortcut:"string"==typeof e&&1===e.length?e:(console.warn("Invalid toggle shortcut format, using default"),s.toggleShortcut)}catch(e){return console.error("Error getting toggle shortcut:",e),s.toggleShortcut}},e.saveToggleShortcut=function saveToggleShortcut(e){try{return"string"==typeof e&&1===e.length||(console.warn("Attempting to save invalid shortcut, using default"),e=s.toggleShortcut),saveToStorage(t.TOGGLE_SHORTCUT,e)}catch(e){return console.error("Error saving toggle shortcut:",e),!1}},e.Notification=class Notification{constructor(e={}){this.position="top-right",this.duration=e.duration||3e3,this.animationDuration=e.animationDuration||"0.3s",this.container=null,this.createContainer()}createContainer(){if(document.getElementById("gitlab-helper-notifications"))this.container=document.getElementById("gitlab-helper-notifications");else{switch(this.container=document.createElement("div"),this.container.id="gitlab-helper-notifications",this.container.style.position="fixed",this.container.style.zIndex="100",this.position){case"top-right":this.container.style.top="120px",this.container.style.right="20px";break;case"top-left":this.container.style.top="20px",this.container.style.left="20px";break;case"top-center":this.container.style.top="20px",this.container.style.left="50%",this.container.style.transform="translateX(-50%)";break;case"bottom-left":this.container.style.bottom="20px",this.container.style.left="20px";break;case"bottom-center":this.container.style.bottom="20px",this.container.style.left="50%",this.container.style.transform="translateX(-50%)";break;default:this.container.style.bottom="20px",this.container.style.right="20px"}document.body.appendChild(this.container)}}show(e){const t=e.message||"",s=e.type||"info",n=e.duration||this.duration,i=e.onClose||null,o=document.createElement("div");switch(o.className=`notification notification-${s}`,o.style.padding="12px 16px",o.style.marginBottom="10px",o.style.borderRadius="4px",o.style.boxShadow="0 2px 10px rgba(0, 0, 0, 0.2)",o.style.display="flex",o.style.alignItems="center",o.style.justifyContent="space-between",o.style.minWidth="200px",o.style.maxWidth="350px",o.style.opacity="0",o.style.transform=this.getInitialTransform(),o.style.transition=`opacity ${this.animationDuration} ease, transform ${this.animationDuration} ease`,s){case"success":o.style.backgroundColor="#28a745",o.style.color="white";break;case"error":o.style.backgroundColor="#dc3545",o.style.color="white";break;case"warning":o.style.backgroundColor="#ffc107",o.style.color="black";break;default:o.style.backgroundColor="#17a2b8",o.style.color="white"}const a=document.createElement("div");a.style.flex="1",a.textContent=t;const r=document.createElement("button");return r.innerHTML="&times;",r.style.backgroundColor="transparent",r.style.border="none",r.style.color=o.style.color,r.style.fontSize="18px",r.style.marginLeft="10px",r.style.cursor="pointer",r.style.padding="0 5px",r.style.opacity="0.7",r.style.transition="opacity 0.2s ease",r.style.outline="none",r.addEventListener("mouseenter",(()=>{r.style.opacity="1"})),r.addEventListener("mouseleave",(()=>{r.style.opacity="0.7"})),r.addEventListener("click",(()=>{this.close(o,i)})),o.appendChild(a),o.appendChild(r),this.container.appendChild(o),setTimeout((()=>{o.style.opacity="1",o.style.transform="translateY(0)"}),10),n>0&&setTimeout((()=>{this.close(o,i)}),n),o}close(e,t=null){"true"!==e.dataset.closing&&(e.dataset.closing="true",e.style.opacity="0",e.style.transform=this.getInitialTransform(),setTimeout((()=>{e.parentNode===this.container&&this.container.removeChild(e),t&&"function"==typeof t&&t()}),1e3*parseFloat(this.animationDuration)))}getInitialTransform(){return this.position.startsWith("top")?"translateY(-20px)":"translateY(20px)"}success(e,t={}){return this.show({message:e,type:"success",...t})}error(e,t={}){return this.show({message:e,type:"error",...t})}warning(e,t={}){return this.show({message:e,type:"warning",...t})}info(e,t={}){return this.show({message:e,type:"info",...t})}},e.CommandShortcut=class CommandShortcut{constructor(e){this.targetElement=e.targetElement,this.onShortcutInsert=e.onShortcutInsert||null,this.shortcutsContainer=null,this.shortcuts={}}initialize(e){this.shortcutsContainer&&this.shortcutsContainer.parentNode&&this.shortcutsContainer.parentNode.removeChild(this.shortcutsContainer),this.shortcutsContainer=document.createElement("div"),this.shortcutsContainer.className="command-shortcuts-container",this.shortcutsContainer.style.marginBottom="10px",this.shortcutsContainer.style.display="flex",this.shortcutsContainer.style.flexDirection="column",this.shortcutsContainer.style.gap="8px",this.shortcutsContainer.style.alignItems="stretch",e.appendChild(this.shortcutsContainer),this.initializeEstimateShortcut()}initializeEstimateShortcut(){this.shortcuts.estimate&&this.removeShortcut("estimate"),this.addCustomShortcut({type:"estimate",label:"/estimate",items:[{value:"",label:"Estimate Hours"},{value:"1",label:"1h"},{value:"2",label:"2h"},{value:"4",label:"4h"},{value:"8",label:"8h"},{value:"16",label:"16h"},{value:"32",label:"32h"},{value:"custom",label:"Custom..."}],onSelect:e=>{"custom"===e?this.handleCustomEstimate():e&&this.insertEstimateText(e)}})}removeShortcut(e){if(this.shortcuts[e]&&this.shortcuts[e].element){const t=this.shortcuts[e].element;t.parentNode&&t.parentNode.removeChild(t),delete this.shortcuts[e]}}handleCustomEstimate(){const e=prompt("Enter custom estimate hours (whole numbers only):","");if(null===e||""===e)return;const t=parseInt(e,10);isNaN(t)||t<=0||t!==parseFloat(e)?alert("Please enter a valid positive whole number."):this.insertEstimateText(t.toString())}insertEstimateText(e){if(!this.targetElement)return;const t=`/estimate ${e}h`,s=this.targetElement.value,n=/\/estimate\s+\d+h/g;if(n.test(s))this.targetElement.value=s.replace(n,t);else{const e=this.targetElement.selectionStart,n=this.targetElement.selectionEnd;let i=t;e>0&&"\n"!==s.charAt(e-1)&&s.length>0&&(i="\n"+i),this.targetElement.value=s.substring(0,e)+i+s.substring(n);const o=e+i.length;this.targetElement.setSelectionRange(o,o)}this.targetElement.focus(),"function"==typeof this.onShortcutInsert&&this.onShortcutInsert("estimate",e)}addCustomShortcut(e){if(!this.shortcutsContainer)return console.error("Shortcuts container not initialized"),null;this.shortcuts&&this.shortcuts[e.type]&&this.removeShortcut(e.type);const t=document.createElement("div");t.className=`shortcut-item ${e.type}-shortcut`,t.style.display="flex",t.style.alignItems="center",t.style.width="100%",t.style.marginBottom="8px",t.style.justifyContent="space-between",t.style.border="1px solid #ddd",t.style.borderRadius="4px",t.style.padding="6px 10px",t.style.backgroundColor="#f8f9fa",t.style.height="36px",t.style.boxSizing="border-box",t.dataset.shortcutType=e.type;const s=document.createElement("div");s.style.display="flex",s.style.alignItems="center",s.style.minWidth="100px",s.style.flexShrink="0";const n=document.createElement("div");n.textContent=e.label,n.style.fontSize="13px",n.style.fontWeight="bold",n.style.color="#555",n.style.whiteSpace="nowrap",s.appendChild(n);let i=null,o=!0;e.items;e.toggleMode&&(i=document.createElement("button"),i.type="button",i.innerHTML="+",i.title="Toggle between Add and Remove mode",i.style.marginLeft="6px",i.style.width="20px",i.style.height="20px",i.style.display="flex",i.style.alignItems="center",i.style.justifyContent="center",i.style.border="1px solid #ccc",i.style.borderRadius="50%",i.style.backgroundColor="#28a745",i.style.color="white",i.style.fontSize="14px",i.style.fontWeight="bold",i.style.cursor="pointer",i.style.padding="0",i.style.lineHeight="1",i.addEventListener("click",(()=>{o=!o,o?(i.innerHTML="+",i.style.backgroundColor="#28a745",i.title="Switch to Remove mode"):(i.innerHTML="−",i.style.backgroundColor="#dc3545",i.title="Switch to Add mode"),r.options.length>0&&("label"===e.type?r.options[0].text=o?"Add Label":"Remove Label":"assign"===e.type&&(r.options[0].text=o?"Assign to...":"Unassign from...")),r.dataset.mode=o?"add":"remove"})),s.appendChild(i));const a=document.createElement("div");a.style.flex="1",a.style.position="relative",a.style.height="24px",a.style.marginLeft="10px";const r=document.createElement("select");r.className=`${e.type}-dropdown`,r.style.width="100%",r.style.height="100%",r.style.appearance="auto",r.style.padding="0 25px 0 8px",r.style.fontSize="13px",r.style.border="1px solid #ccc",r.style.borderRadius="4px",r.style.backgroundColor="#fff",r.style.boxSizing="border-box",r.dataset.mode="add";const l=document.createElement("option");l.value="",l.textContent=e.items[0]?.label||"Select...",l.selected=!0,r.appendChild(l),e.items&&e.items.length>0&&e.items.forEach(((e,t)=>{if(0===t)return;const s=document.createElement("option");s.value=e.value,s.textContent=e.label,r.appendChild(s)})),r.addEventListener("change",(t=>{const s=t.target.value;if(s&&e.onSelect){const n=r.dataset.mode||"add";e.onSelect(s,n),t.target.value=""}})),a.appendChild(r),t.appendChild(s),t.appendChild(a);const c=["estimate","label","milestone","assign"],d=c.indexOf(e.type);if(-1===d)this.shortcutsContainer.appendChild(t);else{let e=!1;const s=this.shortcutsContainer.querySelectorAll(".shortcut-item");for(let n=0;n<s.length;n++){const i=s[n].dataset.shortcutType;if(c.indexOf(i)>d){this.shortcutsContainer.insertBefore(t,s[n]),e=!0;break}}e||this.shortcutsContainer.appendChild(t)}return this.shortcuts[e.type]={element:t,dropdown:r,toggleButton:i,options:e},t}},e.SelectionDisplay=class SelectionDisplay{constructor(e={}){this.selectedIssues=e.selectedIssues||[],this.onRemoveIssue=e.onRemoveIssue||null,this.container=null,this.issuesList=null}createSelectionContainer(e){this.container=e;const t=document.createElement("div");t.style.marginBottom="12px",t.style.padding="8px",t.style.borderRadius="4px",t.style.border="1px dashed #ccc",t.style.backgroundColor="#f9f9f9",t.style.maxHeight="150px",t.style.overflowY="auto";const s=document.createElement("div");s.style.fontSize="12px",s.style.color="#666",s.style.marginBottom="5px",s.textContent="Selected Issues:",t.appendChild(s);const n=document.createElement("div");n.id="selected-issues-list",n.style.fontSize="14px",this.issuesList=n,this.displayNoIssuesMessage(),t.appendChild(n),e.appendChild(t),this.updateDisplay()}displayNoIssuesMessage(){if(!this.issuesList)return;if(this.issuesList.querySelector("#no-issues-selected"))return;const e=document.createElement("div");e.id="no-issues-selected",e.textContent="No issues selected",e.style.color="#666",e.style.fontStyle="italic",this.issuesList.appendChild(e)}updateDisplay(){if(!this.issuesList)return void console.error("Issues list not initialized");if(this.issuesList.innerHTML="",!this.selectedIssues||0===this.selectedIssues.length){this.displayNoIssuesMessage();const e=this.issuesList.parentElement;return void(e&&(e.style.borderColor="#ccc",e.style.backgroundColor="#f9f9f9"))}const e=this.issuesList.parentElement;e&&(e.style.borderColor="#1f75cb",e.style.backgroundColor="rgba(31, 117, 203, 0.05)"),this.selectedIssues.forEach(((e,t)=>{if(!e)return;const s=document.createElement("div");s.className="selected-issue-item",s.style.padding="5px",s.style.marginBottom="3px",s.style.borderRadius="3px",s.style.backgroundColor="rgba(31, 117, 203, 0.1)",s.style.display="flex",s.style.justifyContent="space-between",s.style.alignItems="center";const n=document.createElement("div"),i=e.iid||"Unknown",o=e.title||"Untitled Issue";n.innerHTML=`<strong>#${i}</strong> - ${o}`,n.style.overflow="hidden",n.style.textOverflow="ellipsis",n.style.whiteSpace="nowrap",n.style.marginRight="5px",s.appendChild(n);const a=document.createElement("button");a.textContent="×",a.style.backgroundColor="transparent",a.style.border="none",a.style.color="#dc3545",a.style.fontSize="16px",a.style.fontWeight="bold",a.style.cursor="pointer",a.style.padding="0 5px",a.title="Remove this issue",a.setAttribute("data-index",t),a.addEventListener("mouseenter",(()=>{a.style.color="#c82333"})),a.addEventListener("mouseleave",(()=>{a.style.color="#dc3545"})),a.addEventListener("click",(e=>{e.stopPropagation();const t=parseInt(e.currentTarget.getAttribute("data-index"),10);isNaN(t)||this.removeIssue(t)})),s.appendChild(a),this.issuesList.appendChild(s)}))}removeIssue(t){if(this.selectedIssues.length>t){this.selectedIssues[t];this.selectedIssues.splice(t,1),this.uiManager&&this.uiManager.issueSelector?this.uiManager.issueSelector.setSelectedIssues([...this.selectedIssues]):e.uiManager&&e.uiManager.issueSelector&&e.uiManager.issueSelector.setSelectedIssues([...this.selectedIssues]),this.updateDisplay();const s=document.getElementById("comment-status");if(s){const e=this.selectedIssues.length;e>0?(s.textContent=`${e} issue${1!==e?"s":""} selected.`,s.style.color="green"):(s.textContent='No issues selected. Click "Select Issues" to choose issues.',s.style.color="#666")}}}onRemoveIssue(t){if(this.selectedIssues.length>t){this.selectedIssues[t];this.selectedIssues.splice(t,1),this.uiManager&&this.uiManager.issueSelector?this.uiManager.issueSelector.setSelectedIssues([...this.selectedIssues]):e.uiManager&&e.uiManager.issueSelector&&e.uiManager.issueSelector.setSelectedIssues([...this.selectedIssues])}}setSelectedIssues(e){this.selectedIssues=Array.isArray(e)?[...e]:[],this.updateDisplay()}},e.IssueSelector=class IssueSelector{constructor(e={}){this.uiManager=e.uiManager,this.onSelectionChange=e.onSelectionChange||null,this.onSelectionComplete=e.onSelectionComplete||null,this.isSelectingIssue=!1,this.selectionOverlays=[],this.selectedOverlays=[],this.selectedIssues=e.initialSelection||[],this.pageOverlay=null,this.selectionCounter=null,this.helpText=null,document.addEventListener("keydown",(e=>{"Escape"===e.key&&this.isSelectingIssue&&this.exitSelectionMode()}))}startSelection(){if(this.isSelectingIssue)return;this.isSelectingIssue=!0;const t=[...this.selectedIssues];this.applyOverflowFixes(),this.createCardOverlays(t),this.createFixedControls();const s=document.getElementById("select-issues-button");s&&(s.dataset.active="true",s.style.backgroundColor="#28a745",s.textContent="✓ Done"),e.addEventListener("scroll",this.handleScroll),e.addEventListener("resize",this.handleResize),this.setupMutationObserver()}applyOverflowFixes(){this.originalStyles=[];document.querySelectorAll("ul.board-list").forEach((e=>{this.originalStyles=[{element:e,property:"overflow-x",value:e.style.overflowX}],e.style.setProperty("overflow-x","unset","important"),e.style.setProperty("overflow-y","unset","important")}));const e=document.querySelectorAll('[data-testid="board-list-cards-area"]');return e.forEach((e=>{this.originalStyles.push({element:e,property:"overflow",value:e.style.overflow}),this.originalStyles.push({element:e,property:"position",value:e.style.position}),e.style.overflow="auto",e.style.position="relative"})),e}createCardOverlays(e=[]){this.selectionOverlays.forEach((e=>{e&&e.parentNode&&e.parentNode.removeChild(e)})),this.selectionOverlays=[],this.selectedIssues=e||[],this.selectedOverlays=[];document.querySelectorAll('[data-testid="board-list-cards-area"]').forEach((t=>{try{t.querySelectorAll(".board-card").forEach(((s,n)=>{try{const i=this.getIssueItemFromCard(s);if(!i)return;const o=document.createElement("div");if(o.className="card-selection-overlay",o.style.position="absolute",o.style.zIndex="99",o.style.backgroundColor="rgba(31, 117, 203, 0.2)",o.style.border="2px solid rgba(31, 117, 203, 0.6)",o.style.borderRadius="4px",o.style.cursor="pointer",o.style.transition="background-color 0.2s ease",o.style.boxSizing="border-box",o.dataset.cardId=s.id||`card-${Date.now()}-${n}`,o.dataset.selected="false",o.originalCard=s,o.dataset.issueId=`${i.iid}-${i.referencePath}`,this.positionOverlay(o,s,t),e.some((e=>e.iid===i.iid&&e.referencePath===i.referencePath))){o.dataset.selected="true",o.style.backgroundColor="rgba(0, 177, 106, 0.3)",o.style.borderColor="rgba(0, 177, 106, 0.8)",o.style.boxShadow="0 0 12px rgba(0, 177, 106, 0.3)";const e=this.selectedOverlays.length+1,t=document.createElement("div");t.className="selection-badge",t.textContent=e,t.style.position="absolute",t.style.top="-10px",t.style.right="-10px",t.style.width="20px",t.style.height="20px",t.style.borderRadius="50%",t.style.backgroundColor="rgba(0, 177, 106, 1)",t.style.color="white",t.style.display="flex",t.style.alignItems="center",t.style.justifyContent="center",t.style.fontWeight="bold",t.style.fontSize="12px",t.style.boxShadow="0 2px 5px rgba(0, 0, 0, 0.2)",o.appendChild(t),this.selectedOverlays.push(o)}o.addEventListener("mouseenter",(function(){"true"!==this.dataset.selected&&(this.style.backgroundColor="rgba(31, 117, 203, 0.3)",this.style.boxShadow="0 0 8px rgba(31, 117, 203, 0.5)")})),o.addEventListener("mouseleave",(function(){"true"!==this.dataset.selected&&(this.style.backgroundColor="rgba(31, 117, 203, 0.2)",this.style.boxShadow="none")})),o.addEventListener("click",(e=>{e.stopPropagation(),this.toggleCardSelection(s,o)})),t.appendChild(o),this.selectionOverlays.push(o)}catch(e){console.error("Error creating overlay for card:",e)}}))}catch(e){console.error("Error processing card area:",e)}}))}updateSelectionCounter(){if(this.selectionCounter){const e=this.selectedIssues.length;this.selectionCounter.textContent=`${e} issue${1!==e?"s":""} selected`,this.selectionCounter.style.backgroundColor=e>0?"rgba(40, 167, 69, 0.8)":"rgba(0, 0, 0, 0.7)"}"function"==typeof this.onSelectionChange&&this.onSelectionChange(this.selectedIssues),this.syncSelectionWithBulkCommentsView()}getIssueItemFromCard(t){try{if(t.__vue__){if(t.__vue__.$children&&t.__vue__.$children.length>0){const e=t.__vue__.$children.find((e=>e.$props&&e.$props.item));if(e&&e.$props&&e.$props.item)return e.$props.item}if(t.__vue__.$options&&t.__vue__.$options.children&&t.__vue__.$options.children.length>0){const e=t.__vue__.$options.children.find((e=>e.$props&&e.$props.item));if(e&&e.$props&&e.$props.item)return e.$props.item}if(t.__vue__.$props&&t.__vue__.$props.item)return t.__vue__.$props.item}const s=t.querySelector("[data-issue-id]")?.dataset?.issueId,n=t.querySelector(".board-card-title");if(s&&n)return{iid:s,title:n.textContent.trim(),referencePath:e.location.pathname.split("/boards")[0]}}catch(e){console.error("Error getting issue item from card:",e)}return null}renumberBadges(){this.selectedOverlays.forEach(((e,t)=>{const s=e.querySelector(".selection-badge");s&&(s.textContent=t+1)}))}exitSelectionMode(){if(!this.isSelectingIssue)return;this.isSelectingIssue=!1,this.updateTimeout&&(clearTimeout(this.updateTimeout),this.updateTimeout=null),this.overflowFixTimeout&&(clearTimeout(this.overflowFixTimeout),this.overflowFixTimeout=null),this.boardObserver&&(this.boardObserver.disconnect(),this.boardObserver=null),this.selectionOverlays.forEach((e=>{e&&e.parentNode&&e.parentNode.removeChild(e)})),this.selectionCounter&&this.selectionCounter.parentNode&&(this.selectionCounter.parentNode.removeChild(this.selectionCounter),this.selectionCounter=null),this.helpText&&this.helpText.parentNode&&(this.helpText.parentNode.removeChild(this.helpText),this.helpText=null),this.selectionOverlays=[],this.selectedOverlays=[];const t=document.getElementById("select-issues-button");t&&(t.dataset.active="false",t.style.backgroundColor="#6c757d",t.textContent="📎 Select Issues"),this.syncSelectionWithBulkCommentsView(),"function"==typeof this.onSelectionComplete&&this.onSelectionComplete(this.selectedIssues),e.removeEventListener("scroll",this.handleScroll),e.removeEventListener("resize",this.handleResize)}toggleCardSelection(e,t){if(!this.isSelectingIssue)return;const s=this.getIssueItemFromCard(e);if(s){if("true"===t.dataset.selected)t.dataset.selected="false",t.style.backgroundColor="rgba(31, 117, 203, 0.2)",t.style.borderColor="rgba(31, 117, 203, 0.6)",t.style.boxShadow="none",this.selectedIssues=this.selectedIssues.filter((e=>!(e.iid===s.iid&&e.referencePath===s.referencePath))),this.selectedOverlays=this.selectedOverlays.filter((e=>e!==t)),t.querySelectorAll(".selection-badge").forEach((e=>e.remove())),this.renumberBadges();else{t.dataset.selected="true",t.style.backgroundColor="rgba(0, 177, 106, 0.3)",t.style.borderColor="rgba(0, 177, 106, 0.8)",t.style.boxShadow="0 0 12px rgba(0, 177, 106, 0.3)";const e=this.selectedIssues.length+1,n=document.createElement("div");n.className="selection-badge",n.textContent=e,n.style.position="absolute",n.style.top="-10px",n.style.right="-10px",n.style.width="20px",n.style.height="20px",n.style.borderRadius="50%",n.style.backgroundColor="rgba(0, 177, 106, 1)",n.style.color="white",n.style.display="flex",n.style.alignItems="center",n.style.justifyContent="center",n.style.fontWeight="bold",n.style.fontSize="12px",n.style.boxShadow="0 2px 5px rgba(0, 0, 0, 0.2)",t.querySelectorAll(".selection-badge").forEach((e=>e.remove())),t.appendChild(n),this.selectedIssues.push(s),this.selectedOverlays.push(t)}this.updateSelectionCounter(),this.syncSelectionWithBulkCommentsView()}else{console.error("Failed to get issue item from card"),t.style.backgroundColor="rgba(220, 53, 69, 0.4)",t.style.borderColor="rgba(220, 53, 69, 0.8)",setTimeout((()=>{t.style.backgroundColor="rgba(31, 117, 203, 0.2)",t.style.borderColor="rgba(31, 117, 203, 0.6)"}),500);const e=document.getElementById("comment-status");e&&(e.textContent="Could not extract issue data from this card. Try another one.",e.style.color="#dc3545")}}syncSelectionWithBulkCommentsView(){try{if(this.uiManager&&this.uiManager.bulkCommentsView)this.uiManager.bulkCommentsView.setSelectedIssues([...this.selectedIssues]);else if(e.uiManager&&e.uiManager.bulkCommentsView)e.uiManager.bulkCommentsView.setSelectedIssues([...this.selectedIssues]);else{const e=document.querySelector(".bulk-comments-view");e&&e.__vue__&&e.__vue__.setSelectedIssues?e.__vue__.setSelectedIssues([...this.selectedIssues]):console.warn("BulkCommentsView not found for synchronization")}}catch(e){console.error("Error syncing selection with bulk comments view:",e)}}repositionOverlays(){this.isSelectingIssue&&(this.helpText&&(this.helpText.style.top="10px",this.helpText.style.left="50%"),this.selectionCounter&&(this.selectionCounter.style.top="50px",this.selectionCounter.style.left="50%"),this.selectionOverlays.forEach((e=>{if(e&&"card-selection-overlay"===e.className&&e.originalCard){const t=e.originalCard,s=e.parentNode;t&&s&&this.positionOverlay(e,t,s)}})))}setSelectedIssues(e){this.selectedIssues=Array.isArray(e)?[...e]:[],this.isSelectingIssue&&this.selectionOverlays.length>0&&this.updateOverlaysFromSelection();const t=document.getElementById("comment-status");if(t&&!this.isSelectingIssue){const e=this.selectedIssues.length;e>0?(t.textContent=`${e} issue${1!==e?"s":""} selected.`,t.style.color="green"):(t.textContent='No issues selected. Click "Select" to choose issues.',t.style.color="#666")}this.syncSelectionWithBulkCommentsView()}positionOverlay(e,t,s){try{const n=t.getBoundingClientRect(),i=s.getBoundingClientRect(),o=n.top-i.top+s.scrollTop,a=n.left-i.left+s.scrollLeft;e.style.top=`${o}px`,e.style.left=`${a}px`,e.style.width=`${n.width}px`,e.style.height=`${n.height}px`}catch(e){console.error("Error positioning overlay:",e)}}updateOverlaysFromSelection(){if(this.isSelectingIssue)try{const e=this.selectionOverlays.filter((e=>"card-selection-overlay"===e.className));e.forEach((e=>{e.dataset&&e.originalCard&&(e.dataset.selected="false",e.style.backgroundColor="rgba(31, 117, 203, 0.2)",e.style.borderColor="rgba(31, 117, 203, 0.6)",e.style.boxShadow="none",e.querySelectorAll(".selection-badge").forEach((e=>e.remove())))})),this.selectedOverlays=[],this.selectedIssues.forEach(((t,s)=>{if(!t)return;const n=e.find((e=>!(!e.dataset||!e.dataset.issueId)&&e.dataset.issueId===`${t.iid}-${t.referencePath}`));if(n){n.dataset.selected="true",n.style.backgroundColor="rgba(0, 177, 106, 0.3)",n.style.borderColor="rgba(0, 177, 106, 0.8)",n.style.boxShadow="0 0 12px rgba(0, 177, 106, 0.3)";const e=s+1,t=document.createElement("div");t.className="selection-badge",t.textContent=e,t.style.position="absolute",t.style.top="-10px",t.style.right="-10px",t.style.width="20px",t.style.height="20px",t.style.borderRadius="50%",t.style.backgroundColor="rgba(0, 177, 106, 1)",t.style.color="white",t.style.display="flex",t.style.alignItems="center",t.style.justifyContent="center",t.style.fontWeight="bold",t.style.fontSize="12px",t.style.boxShadow="0 2px 5px rgba(0, 0, 0, 0.2)",n.appendChild(t),this.selectedOverlays.push(n)}})),this.updateSelectionCounter()}catch(e){console.error("Error updating overlays from selection:",e)}}createFixedControls(){const e=document.createElement("div");e.id="selection-help-text",e.textContent="Click on issues to select/deselect them • Press ESC or click button when finished",e.style.position="fixed",e.style.top="10px",e.style.left="50%",e.style.transform="translateX(-50%)",e.style.backgroundColor="rgba(0, 0, 0, 0.7)",e.style.color="white",e.style.padding="8px 16px",e.style.borderRadius="20px",e.style.fontSize="14px",e.style.zIndex="999",e.style.boxShadow="0 2px 10px rgba(0, 0, 0, 0.3)",this.helpText=e,document.body.appendChild(e),this.selectionOverlays.push(e);const t=document.createElement("div");t.id="selection-counter",t.textContent=`${this.selectedIssues.length} issues selected`,t.style.position="fixed",t.style.top="50px",t.style.left="50%",t.style.transform="translateX(-50%)",t.style.backgroundColor=this.selectedIssues.length>0?"rgba(40, 167, 69, 0.9)":"rgba(0, 0, 0, 0.8)",t.style.color="white",t.style.padding="8px 16px",t.style.borderRadius="20px",t.style.fontSize="14px",t.style.zIndex="999",t.style.boxShadow="0 4px 12px rgba(0, 0, 0, 0.4)",this.selectionCounter=t,document.body.appendChild(t),this.selectionOverlays.push(t)}handleScroll=()=>{this.repositionOverlays()};handleResize=()=>{this.repositionOverlays()};setupMutationObserver(){this.boardObserver&&this.boardObserver.disconnect(),this.boardObserver=new MutationObserver((t=>{if(!this.isSelectingIssue)return;let s=!1,n=!1;t.forEach((t=>{if("childList"===t.type&&t.addedNodes.length>0){Array.from(t.addedNodes).some((e=>e.classList&&e.classList.contains("board-card")))&&(s=!0)}if("attributes"===t.type&&"style"===t.attributeName){const s=t.target;if(s.matches('[data-testid="board-list-cards-area"]')||s.matches(".board-list ul")){const t=e.getComputedStyle(s);s.matches('[data-testid="board-list-cards-area"]')&&"auto"!==t.overflow&&(n=!0),s.matches(".board-list ul")&&"unset"!==t.overflowX&&(n=!0)}}})),n&&(clearTimeout(this.overflowFixTimeout),this.overflowFixTimeout=setTimeout((()=>{this.applyOverflowFixes()}),50)),s&&(clearTimeout(this.updateTimeout),this.updateTimeout=setTimeout((()=>{this.createCardOverlays(this.selectedIssues)}),100))}));document.querySelectorAll('.board-list, [data-testid="board-list"], .boards-list').forEach((e=>{this.boardObserver.observe(e,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["style","class"]})}))}},e.LinkedItemsManager=class LinkedItemsManager{constructor(t={}){this.initialized=!1,this.dropdowns=[],this.cardLinks=new Map,this.uiManager=t.uiManager||e.uiManager,this.gitlabApi=t.gitlabApi||e.gitlabApi,this.cache={issues:new Map,mergeRequests:new Map,relatedIssues:new Map},this.loadCacheFromLocalStorage(),this.handleScroll=this.handleScroll.bind(this),this.handleResize=this.handleResize.bind(this),this.refreshDropdowns=this.refreshDropdowns.bind(this),e.addEventListener("scroll",this.handleScroll),e.addEventListener("resize",this.handleResize),this.setupMutationObserver(),this.checkEnabled()}checkEnabled(){try{const e=localStorage.getItem("gitLabHelperLinkedItemsEnabled");return null===e||"true"===e}catch(e){return console.error("Error checking linked items enabled state:",e),!0}}loadCacheFromLocalStorage(){try{const e=localStorage.getItem("gitlabHelperLinkedItemsCache");if(e){const t=JSON.parse(e);t.timestamp&&Date.now()-t.timestamp<288e5?(t.issues&&Object.entries(t.issues).forEach((([e,t])=>{this.cache.issues.set(e,t)})),t.mergeRequests&&Object.entries(t.mergeRequests).forEach((([e,t])=>{this.cache.mergeRequests.set(e,t)})),t.relatedIssues&&Object.entries(t.relatedIssues).forEach((([e,t])=>{this.cache.relatedIssues.set(e,t)}))):localStorage.removeItem("gitlabHelperLinkedItemsCache")}}catch(e){console.warn("Error loading cache from localStorage:",e),localStorage.removeItem("gitlabHelperLinkedItemsCache")}}saveCacheToLocalStorage(){try{const e={issues:{},mergeRequests:{},relatedIssues:{}};this.cache.issues.forEach(((t,s)=>{e.issues[s]=t})),this.cache.mergeRequests.forEach(((t,s)=>{e.mergeRequests[s]=t})),this.cache.relatedIssues.forEach(((t,s)=>{e.relatedIssues[s]=t}));const t={timestamp:Date.now(),issues:e.issues,mergeRequests:e.mergeRequests,relatedIssues:e.relatedIssues};localStorage.setItem("gitlabHelperLinkedItemsCache",JSON.stringify(t))}catch(e){console.warn("Error saving cache to localStorage:",e)}}initialize(){this.checkEnabled()&&(this.initialized||(this.initialized=!0,this.applyOverflowFixes(),this.createCardDropdowns(),this.refreshInterval=setInterval(this.refreshDropdowns,2e3),this.setupCardsMutationObserver(),this.cacheSaveInterval=setInterval((()=>{this.saveCacheToLocalStorage()}),6e4)))}getEnhancedMRStatus(e){if(!e||!e.state)return"Unknown";if("merged"===e.state.toLowerCase())return"Merged";if("closed"===e.state.toLowerCase())return"Closed";if("opened"===e.state.toLowerCase()||"open"===e.state.toLowerCase()){if(e.title&&(e.title.toLowerCase().startsWith("draft:")||e.title.toLowerCase().startsWith("wip:")||e.title.toLowerCase().includes("[wip]")||e.title.toLowerCase().includes("[draft]")))return"Draft";if(!0===e.has_conflicts)return"Conflicts";if(!1===e.blocking_discussions_resolved)return"Changes Needed";if(!0===e.has_discussions||void 0!==e.user_notes_count&&e.user_notes_count>0)return"Reviewing";if(void 0!==e.approvals_required&&void 0!==e.approved_by&&e.approvals_required>0&&(!e.approved_by||e.approved_by.length<e.approvals_required))return"Reviewing";if(e.pipeline_status&&e.pipeline_status.status&&"failed"===e.pipeline_status.status)return"Pipeline Failed"}return e.state.charAt(0).toUpperCase()+e.state.slice(1).toLowerCase()}applyOverflowFixes(){this.originalStyles=[];document.querySelectorAll("ul.board-list").forEach((e=>{this.originalStyles.push({element:e,property:"overflow-x",value:e.style.overflowX}),e.style.setProperty("overflow-x","unset","important"),e.style.setProperty("overflow-y","unset","important")}));const e=document.querySelectorAll('[data-testid="board-list-cards-area"]');return e.forEach((e=>{this.originalStyles.push({element:e,property:"overflow",value:e.style.overflow}),this.originalStyles.push({element:e,property:"position",value:e.style.position}),e.style.overflow="auto",e.style.position="relative"})),e}createCardDropdowns(){this.dropdowns.forEach((e=>{e&&e.parentNode&&e.parentNode.removeChild(e)})),this.dropdowns=[];document.querySelectorAll('[data-testid="board-list-cards-area"]').forEach((e=>{try{e.querySelectorAll(".board-card").forEach(((t,s)=>{try{const s=this.createPlaceholderDropdown(t,e);s&&(this.dropdowns.push(s),this.fetchAndUpdateDropdown(s,t))}catch(e){console.error("Error creating dropdown for card:",e)}}))}catch(e){console.error("Error processing card area:",e)}}))}async fetchAndUpdateDropdown(t,s){try{if(!t||!s)return;const n=await this.getIssueItemFromCard(s);if(!n)return;const i=this.extractRepositoryPath(n.referencePath||e.location.pathname),o=n.iid?n.iid.toString().split("#").pop():null,a=o?`${i}/${o}`:null;if(a&&this.cache.issues.has(a)){const e=this.cache.issues.get(a),s=t.dataset.cardId;return this.cardLinks.set(s,e),t.isLoading=!1,void this.updateDropdownWithLinkedItems(t,e)}const r=[],l=e.location.origin;if(this.addLinkedItemsFromProps(n,r,l,i),r.length>0){const e=t.dataset.cardId;this.cardLinks.set(e,r),t.isLoading=!1,this.updateDropdownWithLinkedItems(t,r)}const c=await this.getLinkedItemsFromIssue(n),d=t.dataset.cardId;this.cardLinks.set(d,c),t.isLoading=!1,this.updateDropdownWithLinkedItems(t,c)}catch(e){console.error("Error fetching and updating dropdown:",e),this.updateDropdownWithError(t)}}updateDropdownEmpty(t){const s=t.querySelector(".linked-items-toggle"),n=t.querySelector(".linked-items-content");if(!s||!n)return;s.style.backgroundColor="#6c757d",s.title="No linked items found",n.innerHTML="";const i=document.createElement("div");i.textContent="No linked items found",i.style.padding="10px 12px",i.style.color="#666",i.style.fontStyle="italic",i.style.fontSize="13px",i.style.textAlign="center",n.appendChild(i);const o=t.originalCard,a=this.getIssueItemFromCard(o);if(a&&a.iid){const t=this.extractRepositoryPath(e.location.pathname),s={type:"issue_detail",title:"View Issue Details",url:`${e.location.origin}/${t}/-/issues/${a.iid}`};n.appendChild(document.createElement("hr")),n.appendChild(this.createLinkItem(s))}}updateDropdownWithError(e){const t=e.querySelector(".linked-items-toggle"),s=e.querySelector(".linked-items-content");if(!t||!s)return;t.style.backgroundColor="#dc3545",t.title="Error loading linked items",s.innerHTML="";const n=document.createElement("div");n.textContent="Error loading linked items",n.style.padding="10px 12px",n.style.color="#dc3545",n.style.fontStyle="italic",n.style.fontSize="13px",n.style.textAlign="center",s.appendChild(n)}updateDropdownWithLinkedItems(e,t){if(!t||0===t.length)return void this.updateDropdownEmpty(e);const s=e.querySelector(".linked-items-toggle"),n=e.querySelector(".linked-items-content");if(!s||!n)return;s.title=`${t.length} linked item${1!==t.length?"s":""}`;const i=t.filter((e=>"merge_request"===e.type)).length,o=t.filter((e=>"branch"===e.type)).length,a=t.filter((e=>"issue"===e.type)).length;(i>0||o>0)&&(s.title=`${i?i+" MR"+(i>1?"s":""):""}${i&&o?", ":""}${o?o+" branch"+(o>1?"es":""):""}${a?(i||o?", ":"")+a+" issue"+(a>1?"s":""):""}`),n.innerHTML="";const r={merge_request:[],branch:[],issue:[],other:[]};t.forEach((e=>{r[e.type]?r[e.type].push(e):r.other.push(e)}));const createSectionHeader=e=>{const t=document.createElement("div");return t.style.backgroundColor="#f8f9fa",t.style.padding="5px 12px",t.style.fontSize="11px",t.style.fontWeight="bold",t.style.color="#6c757d",t.style.textTransform="uppercase",t.style.borderBottom="1px solid #eee",t.textContent=e,t};r.merge_request.length>0&&(n.appendChild(createSectionHeader("Merge Requests")),r.merge_request.forEach((e=>{n.appendChild(this.createLinkItem(e))}))),r.branch.length>0&&(n.appendChild(createSectionHeader("Branches")),r.branch.forEach((e=>{n.appendChild(this.createLinkItem(e))}))),r.issue.length>0&&(n.appendChild(createSectionHeader("Related Issues")),r.issue.forEach((e=>{n.appendChild(this.createLinkItem(e))}))),r.other.length>0&&(n.appendChild(createSectionHeader("Actions")),r.other.forEach((e=>{n.appendChild(this.createLinkItem(e))})))}createPlaceholderDropdown(e,t){const s=e.id||`card-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,n=document.createElement("div");n.className="linked-items-dropdown",n.style.position="absolute",n.style.zIndex="99",n.style.cursor="pointer",n.style.transition="all 0.2s ease",n.dataset.cardId=s,n.originalCard=e,n.isLoading=!0,this.positionDropdown(n,e,t);const i=document.createElement("div");i.className="linked-items-toggle",i.style.backgroundColor="#1f75cb",i.style.color="white",i.style.borderRadius="50%",i.style.width="22px",i.style.height="22px",i.style.display="flex",i.style.alignItems="center",i.style.justifyContent="center",i.style.fontSize="12px",i.style.fontWeight="bold",i.style.boxShadow="0 2px 5px rgba(0, 0, 0, 0.2)",i.style.border="2px solid white",i.title="Loading linked items...";const o=document.createElementNS("http://www.w3.org/2000/svg","svg");o.setAttribute("role","img"),o.setAttribute("aria-hidden","true"),o.classList.add("gl-icon"),o.style.width="12px",o.style.height="12px",o.style.fill="white";const a=document.createElementNS("http://www.w3.org/2000/svg","use");a.setAttribute("href","/assets/icons-aa2c8ddf99d22b77153ca2bb092a23889c12c597fc8b8de94b0f730eb53513f6.svg#issue-type-issue"),o.appendChild(a),i.appendChild(o),i.addEventListener("mouseenter",(function(){this.style.backgroundColor="#0056b3",this.style.transform="scale(1.1)"})),i.addEventListener("mouseleave",(function(){this.style.backgroundColor="#1f75cb",this.style.transform="scale(1)"}));const r=document.createElement("div");r.className="linked-items-content",r.style.display="none",r.style.position="absolute",r.style.backgroundColor="white",r.style.width=`${$(e).width()+1}px`,r.style.boxShadow="    box-shadow: rgba(0, 0, 0, 0.6) 0px 0px 6px;",r.style.zIndex="100",r.style.borderRadius="4px",r.style.border="1px solid #ddd",r.style.left="9px",r.style.top=`${$(e).height()}px`;const l=document.createElement("div");return l.textContent="Loading linked items...",l.style.padding="10px 12px",l.style.color="#666",l.style.fontStyle="italic",l.style.fontSize="13px",l.style.textAlign="center",r.appendChild(l),i.addEventListener("click",(t=>{t.stopPropagation();const s=document.querySelectorAll(".board-card"),i=document.querySelectorAll(".linked-items-dropdown"),o="block"===r.style.display;document.querySelectorAll(".linked-items-content").forEach((e=>{if(e!==r){e.style.display="none";const t=e.closest(".linked-items-dropdown");t&&(t.style.zIndex="99")}})),o?(n.style.zIndex="99",r.style.display="none",s.forEach((e=>{e.style.opacity="1",e.style.removeProperty("z-index")})),i.forEach((e=>{e.style.opacity="1"}))):(n.style.zIndex="100",r.style.display="block",s.forEach((t=>{t!==e&&(t.style.transition="opacity 0.2s ease",t.style.opacity="0.25")})),i.forEach((e=>{e!==n&&(e.style.transition="opacity 0.2s ease",e.style.opacity="0.25")})),e.style.opacity="1",e.style.zIndex="10",n.style.opacity="1")})),document.addEventListener("click",(()=>{if("block"===r.style.display){r.style.display="none",n.style.zIndex="99";const e=document.querySelectorAll(".board-card"),t=document.querySelectorAll(".linked-items-dropdown");e.forEach((e=>{e.style.opacity="1",e.style.removeProperty("z-index")})),t.forEach((e=>{e.style.opacity="1"}))}})),n.appendChild(i),n.appendChild(r),t.appendChild(n),n}getIssueItemFromCard(t){try{if(t.__vue__){if(t.__vue__.$children&&t.__vue__.$children.length>0){const e=t.__vue__.$children.find((e=>e.$props&&e.$props.item));if(e&&e.$props&&e.$props.item)return e.$props.item}if(t.__vue__.$options&&t.__vue__.$options.children&&t.__vue__.$options.children.length>0){const e=t.__vue__.$options.children.find((e=>e.$props&&e.$props.item));if(e&&e.$props&&e.$props.item)return e.$props.item}if(t.__vue__.$props&&t.__vue__.$props.item)return t.__vue__.$props.item}const s=t.querySelector("[data-issue-id]")?.dataset?.issueId,n=t.querySelector(".board-card-title");if(s&&n)return{iid:s,title:n.textContent.trim(),referencePath:e.location.pathname.split("/boards")[0]}}catch(e){console.error("Error getting issue item from card:",e)}return null}async getLinkedItemsFromIssue(t){const s=[];try{let n=this.extractRepositoryPath(t.referencePath||e.location.pathname);const i=e.location.origin;if(t.iid){let o=t.iid;"string"==typeof o&&o.includes("#")&&(o=o.split("#").pop()),n.includes("#")&&(n=n.split("#")[0]);const a=`${n}/${o}`;if(this.cache.issues.has(a))return this.cache.issues.get(a);this.addLinkedItemsFromProps(t,s,i,n);const gitlabApi=e.gitlabApi||this.uiManager?.gitlabApi;if(gitlabApi&&"function"==typeof gitlabApi.callGitLabApiWithCache)try{const e=encodeURIComponent(n);try{const t=await gitlabApi.callGitLabApiWithCache(`projects/${e}/issues/${o}/related_merge_requests`,{params:{with_discussions_to_resolve:!0,with_merge_status_recheck:!0}},6e4);if(Array.isArray(t)&&t.length>0){for(let e=s.length-1;e>=0;e--)"merge_request"===s[e].type&&s.splice(e,1);for(const o of t){let t=o;if(!o.blocking_discussions_resolved||!o.has_conflicts)try{const s=await gitlabApi.callGitLabApiWithCache(`projects/${e}/merge_requests/${o.iid}`,{},6e4);s&&(t={...o,...s})}catch(e){console.warn(`Couldn't fetch detailed info for MR #${o.iid}:`,e)}s.push({type:"merge_request",title:t.title||`Merge Request !${t.iid}`,state:t.state,url:t.web_url||`${i}/${n}/-/merge_requests/${t.iid}`,has_conflicts:t.has_conflicts,blocking_discussions_resolved:t.blocking_discussions_resolved,has_discussions:void 0!==t.discussion_locked?!t.discussion_locked:!!t.user_notes_count,approvals_required:t.approvals_required,approved_by:t.approved_by,pipeline_status:t.pipeline_status})}this.cache.mergeRequests.set(a,[...t])}}catch(e){console.warn("Error fetching related merge requests:",e)}try{const t=await gitlabApi.callGitLabApiWithCache(`projects/${e}/issues/${o}/links`,{},6e4);if(Array.isArray(t)){for(let e=s.length-1;e>=0;e--)"issue"===s[e].type&&s.splice(e,1);t.forEach((e=>{s.push({type:"issue",title:e.title||`Issue #${e.iid}`,state:e.state,url:e.web_url||`${i}/${n}/-/issues/${e.iid}`})})),this.cache.relatedIssues.set(a,[...t])}}catch(e){console.warn("Error fetching related issues:",e)}}catch(e){console.warn("Error fetching issue details via API:",e),0===s.length&&this.addLinkedItemsFromProps(t,s,i,n)}else 0===s.length&&this.addLinkedItemsFromProps(t,s,i,n)}else this.addLinkedItemsFromProps(t,s,i,n);if(t.iid){let e=t.iid;"string"==typeof e&&e.includes("#")&&(e=e.split("#").pop());s.some((e=>"issue_detail"===e.type))||s.push({type:"issue_detail",title:"View Issue Details",url:`${i}/${n}/-/issues/${e}`})}if(t.iid){const e=`${n}/${t.iid.toString().split("#").pop()}`;this.cache.issues.set(e,[...s]),Math.random()<.1&&this.saveCacheToLocalStorage()}}catch(e){console.error("Error extracting linked items:",e)}return s}createLinkItem(e){const t=document.createElement("a");t.href=e.url,t.target="_blank",t.style.padding="8px 12px",t.style.display="flex",t.style.alignItems="center",t.style.textDecoration="none",t.style.color="#333",t.style.borderBottom="1px solid #eee";const s=document.createElement("span");switch(e.type){case"merge_request":s.textContent="🔀",s.title="Merge Request";const t=this.getEnhancedMRStatus(e);"Merged"===t?s.style.color="#6f42c1":"Reviewing"===t?s.style.color="#28a745":"Changes Needed"===t?s.style.color="#f9bc00":"Open"===t?s.style.color="#1f75cb":"Closed"===t?s.style.color="#dc3545":"Draft"===t?s.style.color="#6c757d":"Conflicts"===t&&(s.style.color="#dc3545");break;case"branch":s.textContent="🌿",s.title="Branch",s.style.color="#f9bc00";break;case"issue":s.textContent="📝",s.title="Issue",e.state&&("closed"===e.state.toLowerCase()?s.style.color="#dc3545":"opened"!==e.state.toLowerCase()&&"open"!==e.state.toLowerCase()||(s.style.color="#1f75cb"));break;case"issue_detail":s.textContent="👁️",s.title="View Issue",s.style.color="#17a2b8";break;default:s.textContent="🔗",s.style.color="#6c757d"}s.style.marginRight="8px",s.style.fontSize="16px";const n=document.createElement("span");if(n.textContent=this.truncateText(e.title,30),n.style.flex="1",n.style.overflow="hidden",n.style.textOverflow="ellipsis",n.style.whiteSpace="nowrap",e.state){const s=document.createElement("span");if(s.style.borderRadius="10px",s.style.padding="2px 6px",s.style.fontSize="10px",s.style.marginRight="4px","merge_request"===e.type){const t=this.getEnhancedMRStatus(e);s.textContent=t,"Merged"===t?(s.style.backgroundColor="#6f42c1",s.style.color="white"):"Reviewing"===t?(s.style.backgroundColor="#28a745",s.style.color="white"):"Changes Needed"===t?(s.style.backgroundColor="#f9bc00",s.style.color="black"):"Draft"===t?(s.style.backgroundColor="#6c757d",s.style.color="white"):"Conflicts"===t?(s.style.backgroundColor="#dc3545",s.style.color="white"):"opened"===t?(s.style.backgroundColor="#1f75cb",s.style.color="white"):"Closed"===t?(s.style.backgroundColor="#000000",s.style.color="white"):"Pipeline Failed"===t&&(s.style.backgroundColor="#dc3545",s.style.color="white")}else if("issue"===e.type){const t=this.getEnhancedIssueStatus(e);s.textContent=t,"Open"===t?(s.style.backgroundColor="#1f75cb",s.style.color="white"):"In Progress"===t?(s.style.backgroundColor="#28a745",s.style.color="white"):"Draft"===t?(s.style.backgroundColor="#6c757d",s.style.color="white"):"Active"===t?(s.style.backgroundColor="#17a2b8",s.style.color="white"):"Overdue"===t?(s.style.backgroundColor="#dc3545",s.style.color="white"):"Due Soon"===t?(s.style.backgroundColor="#f9bc00",s.style.color="black"):"Resolved"===t?(s.style.backgroundColor="#6f42c1",s.style.color="white"):"Closed"===t?(s.style.backgroundColor="#dc3545",s.style.color="white"):(s.style.backgroundColor="#6c757d",s.style.color="white")}else s.textContent=e.state,"open"===e.state.toLowerCase()||"opened"===e.state.toLowerCase()?(s.style.backgroundColor="#1f75cb",s.style.color="white"):"closed"===e.state.toLowerCase()?(s.style.backgroundColor="#dc3545",s.style.color="white"):"merged"===e.state.toLowerCase()&&(s.style.backgroundColor="#6f42c1",s.style.color="white");t.appendChild(s)}return t.prepend(s),t.appendChild(n),t.addEventListener("mouseenter",(function(){this.style.backgroundColor="#f8f9fa"})),t.addEventListener("mouseleave",(function(){this.style.backgroundColor="white"})),t}getEnhancedIssueStatus(e){if(!e||!e.state)return"Unknown";const t=e.state.toLowerCase();if("closed"===t)return e.closed_at&&e.updated_at&&new Date(e.closed_at).getTime()===new Date(e.updated_at).getTime()?"Resolved":"Closed";if("open"===t||"opened"===t){if(e.title&&(e.title.toLowerCase().startsWith("draft:")||e.title.toLowerCase().startsWith("wip:")||e.title.toLowerCase().includes("[wip]")||e.title.toLowerCase().includes("[draft]")))return"Draft";if(e.assignees&&e.assignees.length>0)return"In Progress";if(e.due_date){const t=new Date(e.due_date),s=new Date;if(t<s)return"Overdue";const n=1728e5;if(t.getTime()-s.getTime()<n)return"Due Soon"}return void 0!==e.user_notes_count&&e.user_notes_count>3?"Active":"Open"}return e.state.charAt(0).toUpperCase()+e.state.slice(1).toLowerCase()}positionDropdown(e,t,s){try{const n=t.getBoundingClientRect(),i=s.getBoundingClientRect(),o=n.top-i.top+s.scrollTop,a=n.left-i.left+s.scrollLeft+5-13;e.style.top=`${o}px`,e.style.left=`${a}px`}catch(e){console.error("Error positioning dropdown:",e)}}refreshDropdowns(){this.initialized&&(this.repositionDropdowns(),this.checkForNewCards())}repositionDropdowns(){this.dropdowns.forEach((e=>{if(e&&"linked-items-dropdown"===e.className&&e.originalCard){const t=e.originalCard,s=e.parentNode;t&&s&&this.positionDropdown(e,t,s)}}))}checkForNewCards(){const e=document.querySelectorAll('[data-testid="board-list-cards-area"]');let t=!1;return e.forEach((e=>{e.querySelectorAll(".board-card").forEach((s=>{const n=s.id||"";if(!this.dropdowns.some((e=>e.dataset.cardId===n||e.originalCard===s)))try{const n=this.createPlaceholderDropdown(s,e);n&&(this.dropdowns.push(n),t=!0,this.fetchAndUpdateDropdown(n,s))}catch(e){console.error("Error creating dropdown for new card:",e)}}))})),t}truncateText(e,t){return e?e.length>t?e.substring(0,t)+"...":e:""}handleScroll(){this.repositionDropdowns()}handleResize(){this.repositionDropdowns()}setupMutationObserver(){this.boardObserver&&this.boardObserver.disconnect(),this.boardObserver=new MutationObserver((e=>{let t=!1;e.forEach((e=>{if("childList"===e.type&&e.addedNodes.length>0){Array.from(e.addedNodes).some((e=>e.classList&&e.classList.contains("board-card")))&&(t=!0)}})),t&&this.initialized&&(clearTimeout(this.updateTimeout),this.updateTimeout=setTimeout((()=>{this.refreshDropdowns()}),100))}));document.querySelectorAll('.board-list, [data-testid="board-list"], .boards-list').forEach((e=>{this.boardObserver.observe(e,{childList:!0,subtree:!0})}))}cleanup(){this.saveCacheToLocalStorage(),this.dropdowns.forEach((e=>{e&&e.parentNode&&e.parentNode.removeChild(e)})),this.refreshInterval&&(clearInterval(this.refreshInterval),this.refreshInterval=null),this.cacheSaveInterval&&(clearInterval(this.cacheSaveInterval),this.cacheSaveInterval=null),this.boardObserver&&(this.boardObserver.disconnect(),this.boardObserver=null),this.cardsObserver&&(this.cardsObserver.disconnect(),this.cardsObserver=null),this.dropdowns=[],this.cardLinks.clear(),this.cache.issues.clear(),this.cache.mergeRequests.clear(),this.cache.relatedIssues.clear(),this.initialized=!1}setupCardsMutationObserver(){this.cardsObserver&&this.cardsObserver.disconnect(),this.cardsObserver=new MutationObserver((e=>{let t=!1;e.forEach((e=>{"childList"===e.type&&e.addedNodes.length>0&&(t=!0)})),t&&this.checkForNewCards()})),document.body.querySelectorAll(".boards-app, .boards-list").forEach((e=>{this.cardsObserver.observe(e,{childList:!0,subtree:!0})})),document.querySelector(".boards-app, .boards-list")||this.cardsObserver.observe(document.body,{childList:!0,subtree:!0})}extractRepositoryPath(t){if(!t)return e.location.pathname.split("/boards")[0].replace(/^\//,"");if(!t.includes("/")&&!t.includes("#"))return t;let s=t;s.includes("#")&&(s=s.split("#")[0]);const n=s.match(/\/boards\/([^\/]+\/[^\/]+)/);if(n&&n[1])return n[1];const i=s.match(/^\/([^\/]+\/[^\/]+)/);if(i&&i[1])return i[1];const o=s.match(/^\/([^\/]+\/[^\/]+)\/?$/);if(o&&o[1])return o[1];const a=s.replace(/^\//,"").split("/boards")[0];return a.includes("/")?a:e.location.pathname.split("/boards")[0].replace(/^\//,"")}addLinkedItemsFromProps(e,t,s,n){e.mergeRequests&&e.mergeRequests.nodes&&e.mergeRequests.nodes.forEach((e=>{const i=e.webUrl||`${s}/${n}/-/merge_requests/${e.iid}`;t.push({type:"merge_request",title:e.title||`Merge Request !${e.iid}`,state:e.state,url:i,mrData:e})})),e.relatedIssues&&e.relatedIssues.nodes&&e.relatedIssues.nodes.forEach((e=>{const i=e.referencePath||n,o=e.webUrl||`${s}/${i}/-/issues/${e.iid}`;t.push({type:"issue",title:e.title||`Issue #${e.iid}`,state:e.state,url:o})}))}async preloadMergeRequests(t){if(t)try{const gitlabApi=e.gitlabApi||this.uiManager?.gitlabApi;if(!gitlabApi||"function"!=typeof gitlabApi.callGitLabApiWithCache)return;encodeURIComponent(t)}catch(e){console.warn("Error preloading merge requests:",e)}}},e.LabelDisplayManager=class LabelDisplayManager{constructor(t={}){this.initialized=!1,this.uiManager=t.uiManager||e.uiManager,this.priorityLabels=["priority","Priority","high","High","medium","Medium","low","Low","critical","Critical"],this.indicatorElements=[],this.processedCards=new WeakMap,this.isUpdating=!1,this.handleScroll=function(){this.initialized&&this.checkEnabled()&&this.updatePositions()},this.handleResize=function(){this.initialized&&this.checkEnabled()&&this.updatePositions()},this.refreshCards=function(){if(!this.isUpdating){this.isUpdating=!0;try{document.querySelectorAll(".board-card").forEach((e=>{this.processedCards.has(e)||(this.processCard(e),this.processedCards.set(e,!0))})),this.updatePositions()}finally{this.isUpdating=!1}}},this.updatePositions=function(){if(this.initialized&&this.checkEnabled()&&!this.isUpdating){this.isUpdating=!0;try{this.indicatorElements.forEach((({element:e,card:t})=>{if(e&&t&&e.parentNode){const s=t.closest('[data-testid="board-list-cards-area"]');if(s){const n=t.getBoundingClientRect(),i=s.getBoundingClientRect(),o=n.top-i.top+s.scrollTop,a=n.left-i.left+s.scrollLeft+2;e.style.top=`${o}px`,e.style.left=`${a}px`,e.style.width=n.width-4+"px"}}}))}finally{this.isUpdating=!1}}},this.handleScroll=this.handleScroll.bind(this),this.handleResize=this.handleResize.bind(this),this.refreshCards=this.refreshCards.bind(this),this.updatePositions=this.updatePositions.bind(this),e.addEventListener("scroll",this.handleScroll),e.addEventListener("resize",this.handleResize),this.setupMutationObserver(),this.checkEnabled()}setupMutationObserver(){this.boardObserver&&this.boardObserver.disconnect(),this.boardObserver=new MutationObserver((e=>{if(!this.initialized||!this.checkEnabled())return;let t=!1;e.forEach((e=>{if("childList"===e.type){Array.from(e.addedNodes).filter((e=>e.nodeType===Node.ELEMENT_NODE&&(e.classList?.contains("board-card")||e.querySelector?.(".board-card")))).length>0&&(t=!0)}})),t&&this.refreshCards()}));document.querySelectorAll('.board-list, [data-testid="board-list"], .boards-list').forEach((e=>{this.boardObserver.observe(e,{childList:!0,subtree:!0,attributes:!1,characterData:!1})}))}initialize(){this.checkEnabled()&&(this.initialized||(this.initialized=!0,this.applyOverflowFixes(),this.processCards(),this.refreshInterval=setInterval((()=>{this.isUpdating||(this.checkForNewCards(),this.updatePositions())}),500)))}checkEnabled(){try{const e=localStorage.getItem("gitLabHelperHideLabelsEnabled");return null===localStorage.getItem("gitLabHelperHideLabelsEnabled")||"true"===e}catch(e){return console.error("Error checking hide labels enabled state:",e),!0}}applyOverflowFixes(){this.originalStyles=[];document.querySelectorAll("ul.board-list").forEach((e=>{this.originalStyles.push({element:e,property:"overflow-x",value:e.style.overflowX}),e.style.setProperty("overflow-x","unset","important"),e.style.setProperty("overflow-y","unset","important")}));const e=document.querySelectorAll('[data-testid="board-list-cards-area"]');return e.forEach((e=>{this.originalStyles.push({element:e,property:"overflow",value:e.style.overflow}),this.originalStyles.push({element:e,property:"position",value:e.style.position}),e.style.overflow="auto",e.style.position="relative"})),e}processCards(){if(!this.isUpdating){this.isUpdating=!0;try{document.querySelectorAll(".board-card").forEach((e=>{this.processedCards.has(e)||(this.processCard(e),this.processedCards.set(e,!0))}))}finally{this.isUpdating=!1}}}processCard(t){const s=t.querySelector(".board-card-labels");if(!s)return;s.style.display="none";const n=Array.from(s.querySelectorAll(".gl-label")).find((e=>{const t=e.textContent.trim();return this.priorityLabels.some((e=>t.includes(e)))}));if(n){const s=e.getComputedStyle(n).backgroundColor;t.id||(t.id=`card-${Date.now()}-${Math.random().toString(36).substring(2,9)}`);const i=t.closest('[data-testid="board-list-cards-area"]');if(!i)return;const o=document.createElement("div");o.className="priority-indicator",o.dataset.cardId=t.id;const a=t.getBoundingClientRect(),r=i.getBoundingClientRect(),l=a.top-r.top+i.scrollTop,c=a.left-r.left+i.scrollLeft+2;o.style.position="absolute",o.style.top=`${l}px`,o.style.left=`${c}px`,o.style.width=a.width-4+"px",o.style.height="4px",o.style.backgroundColor=s,o.style.zIndex="98",o.style.borderRadius="2px",i.appendChild(o),this.indicatorElements.push({element:o,card:t})}}checkForNewCards(){if(!this.initialized||!this.checkEnabled()||this.isUpdating)return;const e=document.querySelectorAll(".board-card");let t=!1;e.forEach((e=>{this.processedCards.has(e)||(t=!0)})),t&&this.processCards()}updatePositions(){if(this.initialized&&this.checkEnabled()&&!this.isUpdating){this.isUpdating=!0;try{this.indicatorElements.forEach((({element:e,card:t})=>{if(e&&t&&e.parentNode){const s=t.closest('[data-testid="board-list-cards-area"]');if(s){const n=t.getBoundingClientRect(),i=s.getBoundingClientRect(),o=n.top-i.top+s.scrollTop,a=n.left-i.left+s.scrollLeft+2;e.style.top=`${o}px`,e.style.left=`${a}px`,e.style.width=n.width-4+"px"}}}))}finally{this.isUpdating=!1}}}handleScroll(){this.initialized&&this.checkEnabled()&&(clearTimeout(this.scrollTimeout),this.scrollTimeout=setTimeout((()=>{this.updatePositions()}),100))}handleResize(){this.initialized&&this.checkEnabled()&&(clearTimeout(this.resizeTimeout),this.resizeTimeout=setTimeout((()=>{this.updatePositions()}),100))}cleanup(){this.refreshInterval&&(clearInterval(this.refreshInterval),this.refreshInterval=null),this.boardObserver&&(this.boardObserver.disconnect(),this.boardObserver=null),this.updateTimeout&&(clearTimeout(this.updateTimeout),this.updateTimeout=null),this.scrollTimeout&&(clearTimeout(this.scrollTimeout),this.scrollTimeout=null),this.resizeTimeout&&(clearTimeout(this.resizeTimeout),this.resizeTimeout=null),document.querySelectorAll(".board-card-labels").forEach((e=>{e.style.display=""})),this.indicatorElements.forEach((({element:e})=>{e&&e.parentNode&&e.parentNode.removeChild(e)})),this.indicatorElements=[],this.processedCards=new WeakMap,this.initialized=!1,this.isUpdating=!1}},e.TabManager=class TabManager{constructor(uiManager){this.uiManager=uiManager,this.tabContainer=null,this.tabs={},this.contentAreas={};try{let e=getLastActiveTab()||"summary";"history"===e&&(e="summary"),this.currentTab=e}catch(e){console.warn("Error loading last active tab:",e),this.currentTab="summary"}}initialize(e){this.tabContainer=document.createElement("div"),this.tabContainer.style.display="flex",this.tabContainer.style.marginBottom="10px",this.tabContainer.style.borderBottom="1px solid #ddd",this.createTab("summary","Summary","summary"===this.currentTab),this.createTab("boards","Boards","boards"===this.currentTab),this.createTab("bulkcomments","Issues","bulkcomments"===this.currentTab),this.createTab("sprintmanagement","Sprint","sprintmanagement"===this.currentTab),this.createTab("stats","Stats","stats"===this.currentTab),e.appendChild(this.tabContainer),this.createContentAreas(e)}createTab(e,t,s=!1){const n=document.createElement("div");n.textContent=t,n.dataset.tab=e,n.style.padding="5px 10px",n.style.cursor="pointer",s&&(n.style.borderBottom="2px solid #1f75cb",n.style.fontWeight="bold",this.currentTab=e),n.addEventListener("click",(()=>{this.switchToTab(e)})),this.tabs[e]=n,this.tabContainer.appendChild(n)}createContentAreas(e){const t=document.createElement("div");t.id="assignee-time-summary-content",t.style.display="summary"===this.currentTab?"block":"none",t.style.position="relative",t.style.height="530px",t.style.overflowY="auto",t.style.maxHeight="60vh",e.appendChild(t),this.contentAreas.summary=t,this.uiManager&&this.uiManager.addLoadingScreen&&this.uiManager.addLoadingScreen(t,"summary-tab","Loading summary data...");const s=document.createElement("div");s.id="boards-time-summary-content",s.style.display="boards"===this.currentTab?"block":"none",s.style.position="relative",s.style.height="530px",s.style.overflowY="auto",s.style.maxHeight="60vh",e.appendChild(s),this.contentAreas.boards=s,this.uiManager&&this.uiManager.addLoadingScreen&&this.uiManager.addLoadingScreen(s,"boards-tab","Loading board data...");const n=document.createElement("div");n.id="bulk-comments-content",n.style.display="bulkcomments"===this.currentTab?"block":"none",n.style.position="relative",n.style.height="530px",n.style.overflowY="auto",n.style.maxHeight="60vh",e.appendChild(n),this.contentAreas.bulkcomments=n,this.uiManager&&this.uiManager.addLoadingScreen&&this.uiManager.addLoadingScreen(n,"bulkcomments-tab","Loading comment tools...");const i=document.createElement("div");i.id="sprint-management-content",i.style.display="sprintmanagement"===this.currentTab?"block":"none",i.style.position="relative",i.style.height="530px",i.style.overflowY="auto",i.style.maxHeight="60vh",e.appendChild(i),this.contentAreas.sprintmanagement=i,this.uiManager&&this.uiManager.addLoadingScreen&&this.uiManager.addLoadingScreen(i,"sprintmanagement-tab","Loading sprint management tools...");const o=document.createElement("div");o.id="stats-content",o.style.display="stats"===this.currentTab?"block":"none",o.style.position="relative",o.style.height="530px",o.style.overflowY="auto",o.style.maxHeight="60vh",e.appendChild(o),this.contentAreas.stats=o,this.uiManager&&this.uiManager.addLoadingScreen&&this.uiManager.addLoadingScreen(o,"stats-tab","Loading statistics...")}switchToTab(e){Object.keys(this.tabs).forEach((e=>{this.tabs[e].style.borderBottom="none",this.tabs[e].style.fontWeight="normal",this.contentAreas[e].style.display="none"})),this.tabs[e].style.borderBottom="2px solid #1f75cb",this.tabs[e].style.fontWeight="bold",this.contentAreas[e].style.display="block",this.currentTab=e;try{saveLastActiveTab(e)}catch(e){console.warn("Error saving tab selection:",e)}"bulkcomments"===e&&this.uiManager.bulkCommentsView&&(this.uiManager.bulkCommentsView.render(),this.uiManager&&this.uiManager.removeLoadingScreen&&this.uiManager.removeLoadingScreen("bulkcomments-tab")),"sprintmanagement"===e&&this.uiManager.sprintManagementView&&(this.uiManager.sprintManagementView.render(),this.uiManager&&this.uiManager.removeLoadingScreen&&this.uiManager.removeLoadingScreen("sprintmanagement-tab")),"stats"===e&&this.uiManager.statsView&&(this.uiManager.statsView.render(),this.uiManager&&this.uiManager.removeLoadingScreen&&this.uiManager.removeLoadingScreen("stats-tab")),uiManager.issueSelector.applyOverflowFixes()}},e.CommandManager=class CommandManager{constructor(e={}){this.targetElement=e.targetElement,this.gitlabApi=e.gitlabApi,this.labelManager=e.labelManager,this.onCommandInsert=e.onCommandInsert||null,this.notification=new Notification({position:"bottom-right",duration:3e3}),this.assigneeWhitelist=getAssigneeWhitelist(),this.shortcutContainer=null,this.commandShortcut=null}initialize(e){this.shortcutContainer=e,this.commandShortcut=new CommandShortcut({targetElement:this.targetElement,onShortcutInsert:(e,t)=>{"function"==typeof this.onCommandInsert&&this.onCommandInsert(e,t)}}),this.commandShortcut.initialize(e),this.addCustomShortcuts()}addCustomShortcuts(){this.commandShortcut&&(this.addMilestoneShortcut(),this.addAssignShortcut(),this.addDueDateShortcut(),this.addWeightShortcut())}addMilestoneShortcut(){this.commandShortcut.addCustomShortcut({type:"milestone",label:"/milestone",items:[{value:"",label:"Set Milestone"},{value:"%current",label:"Current Sprint"},{value:"%next",label:"Next Sprint"},{value:"%upcoming",label:"Upcoming"},{value:"%backlog",label:"Backlog"},{value:"none",label:"Remove Milestone"}],onSelect:e=>{if(!this.targetElement)return;let t="/milestone ";"none"===e?t+='%""':e.startsWith("%")?t+=e:t+=`%"${e}"`;this.replaceOrInsertCommand("milestone",t,/\/milestone\s+%[^\n]+/g,(()=>this.insertTextAtCursor(t))),this.notification.info(`Milestone command added: ${e}`)}})}addAssignShortcut(){if(this.commandShortcuts)try{let t=[{value:"",label:"Assign to..."},{value:"@me",label:"Myself"},{value:"none",label:"Unassign"}];if(this.assigneeManager&&"function"==typeof this.assigneeManager.getAssigneeWhitelist)try{const e=this.assigneeManager.getAssigneeWhitelist();if(Array.isArray(e)&&e.length>0){t.push({value:"separator",label:"────── Favorites ──────"});const s=e.map((e=>({value:e.username,label:e.name||e.username})));t=t.concat(s)}}catch(e){console.error("Error getting assignee whitelist from manager:",e);try{const e=getAssigneeWhitelist();if(Array.isArray(e)&&e.length>0){t.push({value:"separator",label:"────── Favorites ──────"});const s=e.map((e=>({value:e.username,label:e.name||e.username})));t=t.concat(s)}}catch(e){console.error("Error accessing assignee whitelist from storage:",e)}}else try{let s=[];if("function"==typeof getAssigneeWhitelist?s=getAssigneeWhitelist():e.getAssigneeWhitelist?s=e.getAssigneeWhitelist():console.warn("getAssigneeWhitelist function not available, no assignees will be loaded"),Array.isArray(s)&&s.length>0){t.push({value:"separator",label:"────── Favorites ──────"});const e=s.map((e=>({value:e.username,label:e.name||e.username})));t=t.concat(e)}}catch(e){console.error("Error directly accessing assignee whitelist:",e)}this.fetchGroupMembers().then((e=>{if(e&&e.length>0){t.push({value:"separator2",label:"────── Group Members ──────"});const s=e.map((e=>({value:e.username,label:e.name||e.username})));t=t.concat(s),this.updateAssignShortcut(t)}})).catch((e=>{console.error("Error fetching group members:",e)})),t.push({value:"custom",label:"Custom..."}),t.push({value:"manage",label:"✏️ Manage Assignees..."}),this.updateAssignShortcut(t)}catch(e){console.error("Error adding assign shortcut:",e)}}addDueDateShortcut(){const e=new Date,t=new Date(e);t.setDate(t.getDate()+1);const s=new Date(e);s.setDate(s.getDate()+7);const n=new Date(e);n.setMonth(n.getMonth()+1);const formatDate=e=>e.toISOString().substring(0,10);this.commandShortcut.addCustomShortcut({type:"due",label:"/due",items:[{value:"",label:"Set Due Date"},{value:formatDate(e),label:"Today"},{value:formatDate(t),label:"Tomorrow"},{value:formatDate(s),label:"Next Week"},{value:formatDate(n),label:"Next Month"},{value:"custom",label:"Custom Date..."},{value:"none",label:"Remove Due Date"}],onSelect:t=>{if(!this.targetElement)return;if("custom"===t){const s=prompt("Enter due date (YYYY-MM-DD):",formatDate(e));if(!s)return;if(!/^\d{4}-\d{2}-\d{2}$/.test(s))return void this.notification.error("Invalid date format. Please use YYYY-MM-DD");t=s}let s="/due ";s+="none"===t?"none":t;this.replaceOrInsertCommand("due",s,/\/due\s+[^\n]+/g,(()=>this.insertTextAtCursor(s))),"none"===t?this.notification.info("Due date will be removed"):this.notification.info(`Due date set to ${t}`)}})}addWeightShortcut(){this.commandShortcut.addCustomShortcut({type:"weight",label:"/weight",items:[{value:"",label:"Set Weight"},{value:"1",label:"1 (Trivial)"},{value:"2",label:"2 (Small)"},{value:"3",label:"3 (Medium)"},{value:"5",label:"5 (Large)"},{value:"8",label:"8 (Very Large)"},{value:"custom",label:"Custom Weight..."},{value:"none",label:"Remove Weight"}],onSelect:e=>{if(!this.targetElement)return;if("custom"===e){const t=prompt("Enter weight (number):","");if(!t)return;const s=parseInt(t,10);if(isNaN(s)||s<0)return void this.notification.error("Invalid weight. Please enter a positive number");e=t}let t="/weight ";t+="none"===e?"none":e;this.replaceOrInsertCommand("weight",t,/\/weight\s+[^\n]+/g,(()=>this.insertTextAtCursor(t))),"none"===e?this.notification.info("Weight will be removed"):this.notification.info(`Weight set to ${e}`)}})}openAssigneeManager(){const e=document.createElement("div");e.id="assignee-manager-overlay",e.style.position="fixed",e.style.top="0",e.style.left="0",e.style.width="100%",e.style.height="100%",e.style.backgroundColor="rgba(0, 0, 0, 0.5)",e.style.zIndex="110",e.style.display="flex",e.style.justifyContent="center",e.style.alignItems="center";const t=document.createElement("div");t.style.backgroundColor="white",t.style.borderRadius="6px",t.style.padding="20px",t.style.width="500px",t.style.maxWidth="90%",t.style.maxHeight="80vh",t.style.overflow="auto",t.style.boxShadow="0 4px 8px rgba(0, 0, 0, 0.2)";const s=document.createElement("div");s.style.display="flex",s.style.justifyContent="space-between",s.style.alignItems="center",s.style.marginBottom="15px";const n=document.createElement("h3");n.textContent="Manage Assignees",n.style.margin="0";const i=document.createElement("button");i.innerHTML="&times;",i.style.backgroundColor="transparent",i.style.border="none",i.style.fontSize="24px",i.style.cursor="pointer",i.style.padding="0 5px",i.onclick=()=>e.remove(),s.appendChild(n),s.appendChild(i);const o=document.createElement("div"),a=document.createElement("p");a.textContent="Add usernames to quickly assign issues. These will appear in your /assign dropdown.",a.style.marginBottom="15px";const r=document.createElement("div");r.style.marginBottom="15px",r.style.maxHeight="200px",r.style.overflowY="auto";const createEmptyMessage=()=>{const e=document.createElement("div");return e.textContent="No assignees added yet. Add some below.",e.style.color="#666",e.style.fontStyle="italic",e.style.padding="10px 0",e};this.assigneeWhitelist.forEach(((e,t)=>{const s=document.createElement("div");s.style.display="flex",s.style.justifyContent="space-between",s.style.alignItems="center",s.style.padding="8px",s.style.borderBottom="1px solid #eee";const n=document.createElement("div");n.style.display="flex",n.style.alignItems="center";const i=document.createElement("div");i.textContent=e.name||e.username,i.style.fontWeight="bold",i.style.marginRight="5px";const o=document.createElement("div");o.textContent=`@${e.username}`,o.style.color="#666",o.style.fontSize="13px",n.appendChild(i),n.appendChild(o);const a=document.createElement("button");a.textContent="Remove",a.style.padding="3px 8px",a.style.backgroundColor="#dc3545",a.style.color="white",a.style.border="none",a.style.borderRadius="3px",a.style.cursor="pointer",a.onclick=()=>{this.assigneeWhitelist.splice(t,1),saveAssigneeWhitelist(this.assigneeWhitelist),s.remove(),0===this.assigneeWhitelist.length&&r.appendChild(createEmptyMessage())},s.appendChild(n),s.appendChild(a),r.appendChild(s)})),0===this.assigneeWhitelist.length&&r.appendChild(createEmptyMessage());const l=document.createElement("div");l.style.marginTop="20px",l.style.marginBottom="20px",l.style.padding="15px",l.style.backgroundColor="#f8f9fa",l.style.borderRadius="4px";const c=document.createElement("div");c.textContent="Add New Assignee",c.style.fontWeight="bold",c.style.marginBottom="10px";const d=document.createElement("div");d.style.marginBottom="10px";const h=document.createElement("label");h.textContent="Display Name:",h.style.display="block",h.style.marginBottom="5px";const u=document.createElement("input");u.type="text",u.placeholder="John Doe",u.style.width="100%",u.style.padding="8px",u.style.borderRadius="4px",u.style.border="1px solid #ccc",d.appendChild(h),d.appendChild(u);const p=document.createElement("div");p.style.marginBottom="15px";const m=document.createElement("label");m.textContent="GitLab Username:",m.style.display="block",m.style.marginBottom="5px";const g=document.createElement("input");g.type="text",g.placeholder="username (without @)",g.style.width="100%",g.style.padding="8px",g.style.borderRadius="4px",g.style.border="1px solid #ccc",p.appendChild(m),p.appendChild(g);const y=document.createElement("button");y.textContent="Add Assignee",y.style.padding="8px 16px",y.style.backgroundColor="#28a745",y.style.color="white",y.style.border="none",y.style.borderRadius="4px",y.style.cursor="pointer",y.onclick=()=>{const e=u.value.trim(),t=g.value.trim();if(!t)return void alert("Username is required");const s={name:e||t,username:t},n=this.assigneeWhitelist.findIndex((e=>e.username===t));n>=0?this.assigneeWhitelist[n]=s:this.assigneeWhitelist.push(s),saveAssigneeWhitelist(this.assigneeWhitelist);const i=r.querySelector('div[style*="italic"]');i&&i.remove();const o=document.createElement("div");o.style.display="flex",o.style.justifyContent="space-between",o.style.alignItems="center",o.style.padding="8px",o.style.borderBottom="1px solid #eee";const a=document.createElement("div");a.style.display="flex",a.style.alignItems="center";const l=document.createElement("div");l.textContent=s.name,l.style.fontWeight="bold",l.style.marginRight="5px";const c=document.createElement("div");c.textContent=`@${s.username}`,c.style.color="#666",c.style.fontSize="13px",a.appendChild(l),a.appendChild(c);const d=document.createElement("button");d.textContent="Remove",d.style.padding="3px 8px",d.style.backgroundColor="#dc3545",d.style.color="white",d.style.border="none",d.style.borderRadius="3px",d.style.cursor="pointer",d.onclick=()=>{const e=this.assigneeWhitelist.findIndex((e=>e.username===s.username));e>=0&&(this.assigneeWhitelist.splice(e,1),saveAssigneeWhitelist(this.assigneeWhitelist),o.remove(),0===this.assigneeWhitelist.length&&r.appendChild(createEmptyMessage()))},o.appendChild(a),o.appendChild(d),r.appendChild(o),u.value="",g.value="",this.notification.success(`Added assignee: ${s.name}`)},l.appendChild(c),l.appendChild(d),l.appendChild(p),l.appendChild(y);const b=document.createElement("button");b.textContent="Close",b.style.padding="8px 16px",b.style.backgroundColor="#6c757d",b.style.color="white",b.style.border="none",b.style.borderRadius="4px",b.style.cursor="pointer",b.style.marginTop="10px",b.onclick=()=>{e.remove(),this.addAssignShortcut()},o.appendChild(a),o.appendChild(r),o.appendChild(l),o.appendChild(b),t.appendChild(s),t.appendChild(o),e.appendChild(t),document.body.appendChild(e),e.addEventListener("click",(t=>{t.target===e&&(e.remove(),this.addAssignShortcut())}))}insertTextAtCursor(e){if(!this.targetElement)return;const t=this.targetElement.selectionStart,s=this.targetElement.selectionEnd,n=this.targetElement.value;let i=e;t>0&&"\n"!==n.charAt(t-1)&&n.length>0&&(i="\n"+i),this.targetElement.value=n.substring(0,t)+i+n.substring(s);const o=t+i.length;this.targetElement.setSelectionRange(o,o),this.targetElement.focus()}replaceOrInsertCommand(e,t,s,n){if(!this.targetElement)return;const i=this.targetElement.value;if(s.test(i)){const e=i.replace(s,t);this.targetElement.value=e,this.targetElement.focus()}else n();"function"==typeof this.onCommandInsert&&this.onCommandInsert(e,t)}},e.LabelManager=class LabelManager{constructor(t={}){this.gitlabApi=t.gitlabApi||e.gitlabApi,this.onLabelsLoaded=t.onLabelsLoaded||null,this.labelWhitelist=[];try{this.labelWhitelist=getLabelWhitelist(),Array.isArray(this.labelWhitelist)||(console.warn("Loaded whitelist is not an array, using default"),this.labelWhitelist=this.getDefaultWhitelist())}catch(e){console.warn("Error loading label whitelist, using default",e),this.labelWhitelist=this.getDefaultWhitelist()}this.availableLabels=[],this.filteredLabels=[],this.isLoading=!1}getDefaultWhitelist(){return["bug","feature","documentation","enhancement","security","priority","high","medium","low","critical","frontend","backend","ui","ux","api","wontfix","duplicate","invalid","question","ready","in progress","review","blocked"]}saveWhitelist(e){Array.isArray(e)||(e=[]),this.labelWhitelist=e;try{saveLabelWhitelist(e)}catch(e){console.error("Error saving label whitelist",e)}this.filterLabels()}resetToDefaultWhitelist(){try{this.labelWhitelist=this.getDefaultWhitelist(),saveLabelWhitelist(this.labelWhitelist)}catch(e){console.error("Error resetting label whitelist",e)}return this.filterLabels(),this.labelWhitelist}isLabelInWhitelist(e,t=null){const s=t||this.labelWhitelist;if(!Array.isArray(s)||"string"!=typeof e)return!1;const n=e.toLowerCase();return s.some((e=>"string"==typeof e&&n.includes(e.toLowerCase())))}filterLabels(){this.availableLabels&&0!==this.availableLabels.length?(this.filteredLabels=this.availableLabels.filter((e=>!(!e||"string"!=typeof e.name)&&this.isLabelInWhitelist(e.name))),this.filteredLabels.sort(((e,t)=>e.name.localeCompare(t.name))),"function"==typeof this.onLabelsLoaded&&this.onLabelsLoaded(this.filteredLabels)):this.filteredLabels=[]}async fetchAllLabels(){try{if(this.isLoading=!0,this.gitlabApi||(this.gitlabApi=e.gitlabApi),!this.gitlabApi)return console.warn("GitLab API instance not available, using fallback labels"),this.isLoading=!1,this.addFallbackLabels();const t=getPathFromUrl();if(!t||!t.apiUrl)return console.warn("Path info not found or invalid, returning fallback labels"),this.isLoading=!1,this.addFallbackLabels();try{const e=await this.gitlabApi.callGitLabApiWithCache(t.apiUrl,{params:{per_page:100}});return Array.isArray(e)?(this.availableLabels=e,this.filterLabels(),this.isLoading=!1,this.filteredLabels):(console.warn("API did not return an array of labels, using fallback"),this.isLoading=!1,this.addFallbackLabels())}catch(e){return console.error(`Error fetching ${t.type} labels from API:`,e),this.isLoading=!1,this.addFallbackLabels()}}catch(e){return console.error("Error in fetchAllLabels:",e),this.isLoading=!1,this.addFallbackLabels()}}addFallbackLabels(){return this.availableLabels=[{name:"bug",color:"#ff0000"},{name:"feature",color:"#1f75cb"},{name:"enhancement",color:"#7057ff"},{name:"documentation",color:"#0075ca"},{name:"priority",color:"#d73a4a"},{name:"blocked",color:"#b60205"}],this.filterLabels(),"function"==typeof this.onLabelsLoaded&&this.onLabelsLoaded(this.filteredLabels),this.filteredLabels}getLabelOptions(e=!0){if(!this.filteredLabels||0===this.filteredLabels.length){const t=[];return e&&t.push({value:"",label:"Add Label"}),t.concat([{value:"bug",label:"Bug"},{value:"feature",label:"Feature"},{value:"enhancement",label:"Enhancement"},{value:"custom",label:"Custom..."}])}const t=this.filteredLabels.map((e=>({value:e.name,label:e.name,color:e.color})));return e&&t.unshift({value:"",label:"Add Label"}),t.push({value:"custom",label:"Custom..."}),t}createStyledLabel(e){const t=document.createElement("span");t.textContent=e.label||e.name||"";const s=e.label||e.name||"label",n=e.color||generateColorFromString(s),i=getContrastColor(n);return t.style.backgroundColor=n,t.style.color=i,t.style.padding="4px 8px",t.style.borderRadius="100px",t.style.fontSize="12px",t.style.fontWeight="500",t.style.display="inline-block",t.style.margin="2px",t.style.maxWidth="100%",t.style.overflow="hidden",t.style.textOverflow="ellipsis",t.style.whiteSpace="nowrap",t}insertLabelCommand(e,t){if(!e||"string"!=typeof t)return;const s=`/label ~"${t}"`,n=/\/label\s+~[^\n]+/g,i=e.value;if(n.test(i))e.value=i.replace(n,s);else{const t=e.selectionStart,n=e.selectionEnd;let o=s;t>0&&"\n"!==i.charAt(t-1)&&i.length>0&&(o="\n"+o),e.value=i.substring(0,t)+o+i.substring(n);const a=t+o.length;e.setSelectionRange(a,a)}e.focus()}async initLabelDropdown(e,t={}){const s=e({items:[{value:"",label:"Loading labels..."}],disabled:!0,...t});try{await this.fetchAllLabels(),s.updateItems(this.getLabelOptions()),s.enable()}catch(e){console.error("Error initializing label dropdown:",e),s.updateItems([{value:"",label:"Error loading labels"},{value:"bug",label:"Bug"},{value:"feature",label:"Feature"},{value:"custom",label:"Custom..."}]),s.enable()}return s}},e.AssigneeManager=class AssigneeManager{constructor(e={}){this.gitlabApi=e.gitlabApi,this.onAssigneesChange=e.onAssigneesChange||null,this.notification=new Notification({position:"bottom-right",duration:3e3}),this.assigneeWhitelist=getAssigneeWhitelist(),this.currentUsers=[]}getAssigneeWhitelist(){return[...this.assigneeWhitelist]}saveWhitelist(e){this.assigneeWhitelist=e,saveAssigneeWhitelist(e),"function"==typeof this.onAssigneesChange&&this.onAssigneesChange(this.assigneeWhitelist)}addAssignee(e){if(!e||!e.username)return!1;const t=this.assigneeWhitelist.findIndex((t=>t.username.toLowerCase()===e.username.toLowerCase()));return t>=0?this.assigneeWhitelist[t]={...this.assigneeWhitelist[t],...e}:this.assigneeWhitelist.push(e),saveAssigneeWhitelist(this.assigneeWhitelist),"function"==typeof this.onAssigneesChange&&this.onAssigneesChange(this.assigneeWhitelist),!0}removeAssignee(e){if(!e)return!1;const t=this.assigneeWhitelist.length;return this.assigneeWhitelist=this.assigneeWhitelist.filter((t=>t.username.toLowerCase()!==e.toLowerCase())),this.assigneeWhitelist.length!==t&&(saveAssigneeWhitelist(this.assigneeWhitelist),"function"==typeof this.onAssigneesChange&&this.onAssigneesChange(this.assigneeWhitelist),!0)}async fetchCurrentUser(){if(!this.gitlabApi)throw new Error("GitLab API instance not provided");try{const e=await this.gitlabApi.getCurrentUser();return this.addAssignee({name:e.name,username:e.username}),e}catch(e){throw console.error("Error fetching current user:",e),e}}openAssigneeManager(){const e=document.createElement("div");e.style.position="fixed",e.style.top="0",e.style.left="0",e.style.width="100%",e.style.height="100%",e.style.backgroundColor="rgba(0, 0, 0, 0.5)",e.style.zIndex="110",e.style.display="flex",e.style.justifyContent="center",e.style.alignItems="center";const t=document.createElement("div");t.style.backgroundColor="white",t.style.borderRadius="6px",t.style.padding="20px",t.style.width="600px",t.style.maxWidth="90%",t.style.maxHeight="80vh",t.style.overflow="auto",t.style.boxShadow="0 4px 8px rgba(0, 0, 0, 0.2)";const s=document.createElement("div");s.style.display="flex",s.style.justifyContent="space-between",s.style.alignItems="center",s.style.marginBottom="15px",s.style.borderBottom="1px solid #eee",s.style.paddingBottom="10px";const n=document.createElement("h3");n.textContent="Manage Assignees",n.style.margin="0";const i=document.createElement("button");i.innerHTML="&times;",i.style.backgroundColor="transparent",i.style.border="none",i.style.fontSize="24px",i.style.cursor="pointer",i.style.padding="0 5px",i.onclick=()=>e.remove(),s.appendChild(n),s.appendChild(i);const o=document.createElement("div"),a=document.createElement("p");a.textContent="Manage assignees that appear in the assignee dropdown. These users will be available for quick assignment to issues.",a.style.marginBottom="20px";const r=document.createElement("div");r.style.marginBottom="20px";const l=document.createElement("h4");l.textContent="Current Assignees",l.style.marginBottom="10px",l.style.fontSize="16px",r.appendChild(l);const c=document.createElement("div");if(c.style.height="300px",c.style.overflowY="auto",c.style.border="1px solid #eee",c.style.borderRadius="4px",this.assigneeWhitelist.length>0)this.assigneeWhitelist.forEach(((e,t)=>{const s=document.createElement("div");s.style.display="flex",s.style.justifyContent="space-between",s.style.alignItems="center",s.style.padding="10px",s.style.borderBottom=t<this.assigneeWhitelist.length-1?"1px solid #eee":"none";const n=document.createElement("div");n.style.display="flex",n.style.alignItems="center";const i=document.createElement("div");i.style.width="32px",i.style.height="32px",i.style.borderRadius="50%",i.style.backgroundColor="#e0e0e0",i.style.display="flex",i.style.alignItems="center",i.style.justifyContent="center",i.style.marginRight="10px",i.style.fontSize="14px",i.style.fontWeight="bold",i.style.color="#666";const o=e.name||e.username||"";i.textContent=o.split(" ").map((e=>e.charAt(0))).slice(0,2).join("").toUpperCase(),n.appendChild(i);const a=document.createElement("div"),r=document.createElement("div");r.textContent=e.name||e.username,r.style.fontWeight="bold";const l=document.createElement("div");l.textContent=`@${e.username}`,l.style.fontSize="12px",l.style.color="#666",a.appendChild(r),a.appendChild(l),n.appendChild(a);const d=document.createElement("button");d.textContent="Remove",d.style.padding="4px 8px",d.style.backgroundColor="#dc3545",d.style.color="white",d.style.border="none",d.style.borderRadius="4px",d.style.cursor="pointer",d.onclick=()=>{if(this.removeAssignee(e.username),s.remove(),this.notification.info(`Removed assignee: ${e.name||e.username}`),0===this.assigneeWhitelist.length){const e=document.createElement("div");e.textContent="No assignees added yet. Add some below.",e.style.padding="10px",e.style.color="#666",e.style.fontStyle="italic",c.appendChild(e)}},s.appendChild(n),s.appendChild(d),c.appendChild(s)}));else{const e=document.createElement("div");e.textContent="No assignees added yet. Add some below.",e.style.padding="10px",e.style.color="#666",e.style.fontStyle="italic",c.appendChild(e)}r.appendChild(c);const d=document.createElement("div");d.style.marginTop="20px",d.style.padding="15px",d.style.backgroundColor="#f8f9fa",d.style.borderRadius="4px";const h=document.createElement("h4");h.textContent="Add New Assignee",h.style.marginBottom="15px",h.style.fontSize="16px";const u=document.createElement("div");u.style.marginBottom="10px";const p=document.createElement("label");p.textContent="Display Name:",p.style.display="block",p.style.marginBottom="5px";const m=document.createElement("input");m.type="text",m.placeholder="John Doe",m.style.width="100%",m.style.padding="8px",m.style.borderRadius="4px",m.style.border="1px solid #ccc",u.appendChild(p),u.appendChild(m);const g=document.createElement("div");g.style.marginBottom="15px";const y=document.createElement("label");y.textContent="GitLab Username:",y.style.display="block",y.style.marginBottom="5px";const b=document.createElement("input");b.type="text",b.placeholder="username (without @)",b.style.width="100%",b.style.padding="8px",b.style.borderRadius="4px",b.style.border="1px solid #ccc",g.appendChild(y),g.appendChild(b);const f=document.createElement("div");f.style.display="flex",f.style.justifyContent="space-between";const C=document.createElement("button");C.textContent="Add Assignee",C.style.padding="8px 16px",C.style.backgroundColor="#28a745",C.style.color="white",C.style.border="none",C.style.borderRadius="4px",C.style.cursor="pointer",C.onclick=()=>{const t=m.value.trim(),s=b.value.trim();if(!s)return void this.notification.error("Username is required");const n={name:t||s,username:s};this.addAssignee(n),this.notification.success(`Added assignee: ${n.name}`),e.remove(),this.openAssigneeManager()};const x=document.createElement("button");x.textContent="Add Current User",x.style.padding="8px 16px",x.style.backgroundColor="#17a2b8",x.style.color="white",x.style.border="none",x.style.borderRadius="4px",x.style.cursor="pointer",x.style.marginRight="10px",x.onclick=async()=>{x.disabled=!0,x.textContent="Loading...";try{const t=await this.fetchCurrentUser();this.notification.success(`Added current user: ${t.name}`),e.remove(),this.openAssigneeManager()}catch(e){this.notification.error("Failed to fetch current user"),x.disabled=!1,x.textContent="Add Current User"}},f.appendChild(x),f.appendChild(C),d.appendChild(h),d.appendChild(u),d.appendChild(g),d.appendChild(f);const v=document.createElement("div");v.style.marginTop="20px",v.style.display="flex",v.style.justifyContent="flex-end";const S=document.createElement("button");S.textContent="Close",S.style.padding="8px 16px",S.style.backgroundColor="#6c757d",S.style.color="white",S.style.border="none",S.style.borderRadius="4px",S.style.cursor="pointer",S.onclick=()=>{e.remove()},v.appendChild(S),o.appendChild(a),o.appendChild(r),o.appendChild(d),o.appendChild(v),t.appendChild(s),t.appendChild(o),e.appendChild(t),document.body.appendChild(e),e.addEventListener("click",(t=>{t.target===e&&e.remove()}))}},e.MilestoneManager=class MilestoneManager{constructor(e={}){this.gitlabApi=e.gitlabApi,this.onMilestonesLoaded=e.onMilestonesLoaded||null,this.notification=new Notification({position:"bottom-right",duration:3e3}),this.milestones=[],this.currentMilestone=null,this.isLoading=!1}},e.SettingsManager=class SettingsManager{constructor(t={}){this.labelManager=t.labelManager,this.assigneeManager=t.assigneeManager,this.gitlabApi=t.gitlabApi||e.gitlabApi,this.uiManager=t.uiManager||e.uiManager,this.onSettingsChanged=t.onSettingsChanged||null,this.notification=new Notification({position:"bottom-right",duration:3e3}),this.availableAssignees=[],this.isLoadingAssignees=!1}openSettingsModal(){const e=document.createElement("div");e.id="git-helper-settings-overlay",e.style.position="fixed",e.style.top="0",e.style.left="0",e.style.width="100%",e.style.height="100%",e.style.backgroundColor="rgba(0, 0, 0, 0.5)",e.style.zIndex="1000",e.style.display="flex",e.style.justifyContent="center",e.style.alignItems="center",e.style.cursor="pointer",this.currentModal=e;const t=document.createElement("div");t.style.backgroundColor="white",t.style.borderRadius="6px",t.style.padding="20px",t.style.width="700px",t.style.maxWidth="90%",t.style.maxHeight="80vh",t.style.overflow="auto",t.style.boxShadow="0 4px 8px rgba(0, 0, 0, 0.2)";const s=document.createElement("div");s.style.display="flex",s.style.justifyContent="space-between",s.style.alignItems="center",s.style.marginBottom="15px",s.style.borderBottom="1px solid #eee",s.style.paddingBottom="10px";const n=document.createElement("h3");n.textContent="Settings",n.style.margin="0";const i=document.createElement("button");i.innerHTML="&times;",i.style.backgroundColor="transparent",i.style.border="none",i.style.fontSize="24px",i.style.cursor="pointer",i.style.padding="0 5px",i.onclick=()=>e.remove(),s.appendChild(n),s.appendChild(i);const o=document.createElement("div");this.createCollapsibleSection(o,"General","Configure application-wide settings",(e=>this.createGeneralSettings(e)),!0),this.createCollapsibleSection(o,"Assignees","Manage assignees for quick access in comments",(e=>this.createAssigneeSettings(e)),!1),this.createCollapsibleSection(o,"Labels","Manage which labels appear in the dropdown menus",(e=>this.createLabelWhitelistSettings(e)),!1),this.createCollapsibleSection(o,"Appearance","Customize the appearance of GitLab Sprint Helper",(e=>this.createAppearanceSettings(e)),!1);const a=document.createElement("div");a.style.marginTop="20px",a.style.display="flex",a.style.justifyContent="space-between",a.style.alignItems="center",a.style.borderTop="1px solid #eee",a.style.paddingTop="15px";const r=document.createElement("button");r.textContent="Reset to Defaults",r.style.padding="8px 16px",r.style.backgroundColor="#6c757d",r.style.color="white",r.style.border="none",r.style.borderRadius="4px",r.style.cursor="pointer",r.onclick=()=>{confirm("Are you sure you want to reset all settings to default values?")&&(this.resetAllSettings(),e.remove(),this.notification.success("Settings reset to defaults"))};const l=document.createElement("button");l.textContent="Close",l.onclick=()=>{this.currentModal&&(this.currentModal.remove(),this.currentModal=null)},a.appendChild(r),a.appendChild(l),t.appendChild(s),t.appendChild(o),t.appendChild(a),e.appendChild(t),document.body.appendChild(e),e.addEventListener("click",(t=>{t.target===e&&e.remove()}))}createCollapsibleSection(e,t,s,n,i=!1){const o=document.createElement("div");o.className="gitlab-helper-settings-section",o.style.marginBottom="15px",o.style.border="1px solid #ddd",o.style.borderRadius="6px",o.style.overflow="hidden";const a=document.createElement("div");a.className="gitlab-helper-settings-header",a.style.padding="12px 15px",a.style.backgroundColor="#f8f9fa",a.style.borderBottom="none",a.style.display="flex",a.style.justifyContent="space-between",a.style.alignItems="center",a.style.cursor="pointer",a.style.transition="background-color 0.2s ease",a.addEventListener("mouseenter",(()=>{a.style.backgroundColor="#e9ecef"})),a.addEventListener("mouseleave",(()=>{a.style.backgroundColor="#f8f9fa"}));const r=document.createElement("div"),l=document.createElement("h4");l.textContent=t,l.style.margin="0",l.style.fontSize="16px";const c=document.createElement("div");c.textContent=s,c.style.fontSize="13px",c.style.color="#6c757d",c.style.marginTop="4px",r.appendChild(l),r.appendChild(c);const d=document.createElement("span");d.textContent="▶",d.style.fontSize="14px",d.style.transition="transform 0.3s ease",a.appendChild(r),a.appendChild(d);const h=document.createElement("div");h.className="gitlab-helper-settings-content",h.style.padding="5px",h.style.display="none",h.style.backgroundColor="white";let u=!1;return a.addEventListener("click",(()=>{const e="block"===h.style.display;h.style.display=e?"none":"block",d.textContent=e?"▶":"▼",a.style.borderBottom=e?"none":"1px solid #ddd",u||e||(n(h),u=!0)})),o.appendChild(a),o.appendChild(h),e.appendChild(o),o}createAssigneeSettings(e){const t=document.createElement("div"),s=document.createElement("div");s.style.display="flex",s.style.justifyContent="space-between",s.style.marginBottom="15px",s.style.gap="10px";const n=document.createElement("div");n.style.flex="1";const i=document.createElement("input");i.type="text",i.placeholder="Search assignees...",i.style.width="100%",i.style.padding="8px 10px",i.style.borderRadius="4px",i.style.border="1px solid #ccc",n.appendChild(i);const o=document.createElement("button");o.textContent="Fetch GitLab Users",o.style.padding="8px 12px",o.style.backgroundColor="#1f75cb",o.style.color="white",o.style.border="none",o.style.borderRadius="4px",o.style.cursor="pointer",o.onclick=()=>this.fetchGitLabUsers(m),s.appendChild(n),s.appendChild(o),t.appendChild(s);const a=document.createElement("div");a.style.display="flex",a.style.borderBottom="1px solid #dee2e6",a.style.marginBottom="15px";const r=[{id:"whitelisted",label:"My Assignees",active:!0},{id:"available",label:"Available Users",active:!1}],l={},c={};r.forEach((e=>{const t=document.createElement("div");t.textContent=e.label,t.style.padding="8px 15px",t.style.cursor="pointer",t.style.transition="all 0.2s ease",e.active&&(t.style.borderBottom="2px solid #1f75cb",t.style.fontWeight="bold"),t.addEventListener("mouseenter",(()=>{e.active||(t.style.backgroundColor="#f5f5f5")})),t.addEventListener("mouseleave",(()=>{e.active||(t.style.backgroundColor="")})),t.addEventListener("click",(()=>{r.forEach((e=>{e.active=!1,l[e.id].style.borderBottom="none",l[e.id].style.fontWeight="normal",l[e.id].style.backgroundColor="",c[e.id].style.display="none"})),e.active=!0,t.style.borderBottom="2px solid #1f75cb",t.style.fontWeight="bold",c[e.id].style.display="block","whitelisted"===e.id?this.refreshAssigneeList(u):"available"===e.id&&this.fetchGitLabUsers(m)})),l[e.id]=t,a.appendChild(t)})),t.appendChild(a);const d=document.createElement("div");d.style.display="block";const h=document.createElement("div");h.style.display="none";const u=document.createElement("div");u.style.height="300px",u.style.overflowY="auto",u.style.border="1px solid #eee",u.style.borderRadius="4px";const createEmptyMessage=()=>{const e=document.createElement("div");return e.textContent="No assignees added yet. Add from Available Users or add manually below.",e.style.padding="15px",e.style.color="#666",e.style.fontStyle="italic",e.style.textAlign="center",e};let p=[];p=this.assigneeManager?this.assigneeManager.getAssigneeWhitelist():getAssigneeWhitelist(),p.length>0?p.forEach(((e,t)=>{u.appendChild(this.createAssigneeListItem(e,t,u,createEmptyMessage))})):u.appendChild(createEmptyMessage()),d.appendChild(u);const m=document.createElement("div");m.className="available-assignees-list",m.style.height="300px",m.style.overflowY="auto",m.style.border="1px solid #eee",m.style.borderRadius="4px";const g=document.createElement("div");g.textContent='Click "Fetch GitLab Users" to load available assignees.',g.style.padding="15px",g.style.color="#666",g.style.fontStyle="italic",g.style.textAlign="center",m.appendChild(g),h.appendChild(m),c.whitelisted=d,c.available=h,t.appendChild(d),t.appendChild(h),i.addEventListener("input",(()=>{const e=i.value.toLowerCase();("whitelisted"===r.find((e=>e.active)).id?u:m).querySelectorAll(".assignee-item").forEach((t=>{const s=t.querySelector(".assignee-name"),n=t.querySelector(".assignee-username");if(!s||!n)return;const i=s.textContent.toLowerCase(),o=n.textContent.toLowerCase();i.includes(e)||o.includes(e)?t.style.display="":t.style.display="none"}))})),e.appendChild(t)}createAddAssigneeForm(e,t){const s=document.createElement("div");s.style.marginTop="15px",s.style.padding="15px",s.style.backgroundColor="#f8f9fa",s.style.borderRadius="4px";const n=document.createElement("h5");n.textContent="Add New Assignee",n.style.marginTop="0",n.style.marginBottom="10px";const i=document.createElement("div");i.style.marginBottom="10px";const o=document.createElement("label");o.textContent="Display Name:",o.style.display="block",o.style.marginBottom="5px";const a=document.createElement("input");a.type="text",a.placeholder="John Doe",a.style.width="100%",a.style.padding="6px 10px",a.style.borderRadius="4px",a.style.border="1px solid #ccc",i.appendChild(o),i.appendChild(a);const r=document.createElement("div");r.style.marginBottom="15px";const l=document.createElement("label");l.textContent="GitLab Username:",l.style.display="block",l.style.marginBottom="5px";const c=document.createElement("input");c.type="text",c.placeholder="username (without @)",c.style.width="100%",c.style.padding="6px 10px",c.style.borderRadius="4px",c.style.border="1px solid #ccc",r.appendChild(l),r.appendChild(c);const d=document.createElement("div");d.style.display="flex",d.style.justifyContent="flex-end";const h=document.createElement("button");return h.textContent="Add Assignee",h.style.padding="6px 12px",h.style.backgroundColor="#28a745",h.style.color="white",h.style.border="none",h.style.borderRadius="4px",h.style.cursor="pointer",h.onclick=()=>{const s=a.value.trim(),n=c.value.trim();if(!n)return void this.notification.error("Username is required");const i={name:s||n,username:n};if(this.assigneeManager)this.assigneeManager.addAssignee(i);else{const e=getAssigneeWhitelist(),t=e.findIndex((e=>e.username===n));t>=0?e[t]=i:e.push(i),saveAssigneeWhitelist(e)}const o=e.querySelector('div[style*="italic"]');o&&o.remove();const r=getAssigneeWhitelist();e.appendChild(this.createAssigneeListItem(i,r.length-1,e,t)),a.value="",c.value="",this.notification.success(`Added assignee: ${i.name}`),this.onSettingsChanged&&this.onSettingsChanged("assignees")},d.appendChild(h),s.appendChild(n),s.appendChild(i),s.appendChild(r),s.appendChild(d),s}async fetchGitLabUsers(e){try{if(!this.gitlabApi)return void this.notification.error("GitLab API not available");this.isLoadingAssignees=!0,e.innerHTML="";const t=document.createElement("div");t.textContent="Loading users from GitLab...",t.style.padding="15px",t.style.textAlign="center",e.appendChild(t);try{const t=getPathFromUrl();if(!t)throw new Error("Could not determine project/group path");let s=[];"project"===t.type?s=await this.gitlabApi.callGitLabApi(`projects/${t.encodedPath}/members/all`,{params:{per_page:100,all_available:!0}}):"group"===t.type&&(s=await this.gitlabApi.callGitLabApi(`groups/${t.encodedPath}/members/all`,{params:{per_page:100,all_available:!0}})),this.availableAssignees=s.map((e=>({id:e.id,name:e.name,username:e.username,avatar_url:e.avatar_url}))),this.renderAvailableUsers(e)}catch(t){console.error("Error fetching GitLab users:",t),e.innerHTML="";const s=document.createElement("div");s.textContent=`Error loading users: ${t.message}`,s.style.padding="15px",s.style.color="#dc3545",s.style.textAlign="center",e.appendChild(s),this.notification.error("Failed to load GitLab users")}finally{this.isLoadingAssignees=!1}}catch(e){}}renderAvailableUsers(e){e.innerHTML="";const t=getAssigneeWhitelist().map((e=>e.username.toLowerCase()));if(0===this.availableAssignees.length){const t=document.createElement("div");return t.textContent="No users found. Try fetching again.",t.style.padding="15px",t.style.color="#666",t.style.fontStyle="italic",t.style.textAlign="center",void e.appendChild(t)}this.availableAssignees.sort(((e,t)=>e.name.localeCompare(t.name))),this.availableAssignees.forEach((s=>{const n=t.includes(s.username.toLowerCase()),i=document.createElement("div");i.className="assignee-item",i.style.display="flex",i.style.justifyContent="space-between",i.style.alignItems="center",i.style.padding="10px 15px",i.style.borderBottom="1px solid #eee",i.style.backgroundColor=n?"rgba(40, 167, 69, 0.05)":"";const o=document.createElement("div");if(o.style.display="flex",o.style.alignItems="center",s.avatar_url){const e=document.createElement("img");e.src=s.avatar_url,e.style.width="30px",e.style.height="30px",e.style.borderRadius="50%",e.style.marginRight="10px",o.appendChild(e)}else{const e=document.createElement("div");e.style.width="30px",e.style.height="30px",e.style.borderRadius="50%",e.style.backgroundColor="#e0e0e0",e.style.display="flex",e.style.alignItems="center",e.style.justifyContent="center",e.style.marginRight="10px",e.style.fontWeight="bold",e.style.color="#666";const t=(s.name||s.username).split(" ").map((e=>e.charAt(0))).slice(0,2).join("").toUpperCase();e.textContent=t,o.appendChild(e)}const a=document.createElement("div"),r=document.createElement("div");r.className="assignee-name",r.textContent=s.name,r.style.fontWeight="bold";const l=document.createElement("div");l.className="assignee-username",l.textContent=`@${s.username}`,l.style.fontSize="12px",l.style.color="#666",a.appendChild(r),a.appendChild(l),o.appendChild(a);const c=document.createElement("button");n?(c.textContent="Added ✓",c.style.backgroundColor="#e9ecef",c.style.color="#28a745",c.style.cursor="default"):(c.textContent="Add",c.style.backgroundColor="#28a745",c.style.color="white",c.style.cursor="pointer",c.addEventListener("click",(()=>{const e={name:s.name,username:s.username};if(this.assigneeManager)this.assigneeManager.addAssignee(e);else{const t=getAssigneeWhitelist();t.push(e),saveAssigneeWhitelist(t)}c.textContent="Added ✓",c.style.backgroundColor="#e9ecef",c.style.color="#28a745",c.style.cursor="default",i.style.backgroundColor="rgba(40, 167, 69, 0.05)",this.notification.success(`Added ${s.name} to assignees`),"function"==typeof this.onSettingsChanged&&this.onSettingsChanged("assignees"),this.refreshWhitelistedTab()}))),c.style.padding="5px 10px",c.style.border="none",c.style.borderRadius="4px",c.style.fontSize="12px",i.appendChild(o),i.appendChild(c),e.appendChild(i)}))}refreshWhitelistedTab(){const e=document.querySelector('div[style*="display: block"]');if(!e)return;const t=e.querySelector('div[style*="overflowY: auto"]');if(!t)return;const createEmptyMessage=()=>{const e=document.createElement("div");return e.textContent="No assignees added yet. Add from Available Users or add manually below.",e.style.padding="15px",e.style.color="#666",e.style.fontStyle="italic",e.style.textAlign="center",e};t.innerHTML="";const s=document.createElement("div");s.textContent="Refreshing assignees...",s.style.padding="15px",s.style.textAlign="center",s.style.color="#666",t.appendChild(s),setTimeout((()=>{let e=[];e=this.assigneeManager?this.assigneeManager.getAssigneeWhitelist():getAssigneeWhitelist(),t.innerHTML="",e.length>0?e.forEach(((e,s)=>{t.appendChild(this.createAssigneeListItem(e,s,t,createEmptyMessage))})):t.appendChild(createEmptyMessage())}),300)}createAssigneeListItem(e,t,s,n){const i=document.createElement("div");i.className="assignee-item",i.style.display="flex",i.style.justifyContent="space-between",i.style.alignItems="center",i.style.padding="10px 15px",i.style.borderBottom="1px solid #eee";const o=document.createElement("div");o.style.display="flex",o.style.alignItems="center";const a=document.createElement("div");a.style.width="30px",a.style.height="30px",a.style.borderRadius="50%",a.style.backgroundColor="#e0e0e0",a.style.display="flex",a.style.alignItems="center",a.style.justifyContent="center",a.style.marginRight="10px",a.style.fontWeight="bold",a.style.color="#666";const r=(e.name||e.username).split(" ").map((e=>e.charAt(0))).slice(0,2).join("").toUpperCase();a.textContent=r,o.appendChild(a);const l=document.createElement("div"),c=document.createElement("div");c.className="assignee-name",c.textContent=e.name||e.username,c.style.fontWeight="bold";const d=document.createElement("div");d.className="assignee-username",d.textContent=`@${e.username}`,d.style.fontSize="12px",d.style.color="#666",l.appendChild(c),l.appendChild(d),o.appendChild(l);const h=document.createElement("div"),u=document.createElement("button");return u.textContent="Remove",u.style.padding="5px 10px",u.style.backgroundColor="#dc3545",u.style.color="white",u.style.border="none",u.style.borderRadius="4px",u.style.cursor="pointer",u.style.fontSize="12px",u.onclick=()=>{let t=[];if(this.assigneeManager)this.assigneeManager.removeAssignee(e.username),t=this.assigneeManager.getAssigneeWhitelist();else{t=getAssigneeWhitelist();const s=t.filter((t=>t.username.toLowerCase()!==e.username.toLowerCase()));saveAssigneeWhitelist(s),t=s}i.remove(),0===t.length&&s.appendChild(n()),this.notification.info(`Removed assignee: ${e.name||e.username}`),this.onSettingsChanged&&this.onSettingsChanged("assignees")},h.appendChild(u),i.appendChild(o),i.appendChild(h),i}createLabelWhitelistSettings(e){const t=document.createElement("div");t.style.marginBottom="20px";const s=document.createElement("h4");s.textContent="Label Whitelist",s.style.marginBottom="10px";const n=document.createElement("p");n.textContent="Select which labels should appear in the dropdown. The system will show any label that contains these terms.",n.style.marginBottom="15px",n.style.fontSize="14px",n.style.color="#666",t.appendChild(s),t.appendChild(n);const i=document.createElement("div");i.id="whitelist-loading-message",i.textContent="Loading all labels from GitLab...",i.style.fontStyle="italic",i.style.color="#666",t.appendChild(i);const o=document.createElement("div");o.id="whitelist-container",o.style.display="flex",o.style.flexWrap="wrap",o.style.gap="10px",o.style.marginTop="15px",o.style.height="300px",o.style.overflowY="auto",o.style.border="1px solid #eee",o.style.borderRadius="4px",o.style.padding="10px",t.appendChild(o);const a=getLabelWhitelist(),r=Array.isArray(a)?a:[],displayLabels=e=>{if(i.remove(),!e||0===e.length){const e=document.createElement("div");return e.textContent="No labels found in this project.",e.style.width="100%",e.style.textAlign="center",e.style.marginBottom="15px",e.style.color="#666",void o.appendChild(e)}e.sort(((e,t)=>e.name.localeCompare(t.name)));const t=new Set;e.forEach((e=>{if(t.has(e.name.toLowerCase()))return;t.add(e.name.toLowerCase());const s=document.createElement("div");s.style.display="flex",s.style.alignItems="center",s.style.marginBottom="10px",s.style.width="calc(33.33% - 10px)";const n=document.createElement("input");n.type="checkbox",n.id=`label-${e.name}`,n.dataset.label=e.name.toLowerCase(),n.style.marginRight="8px";const i=r.some((t=>e.name.toLowerCase().includes(t.toLowerCase())));n.checked=i;const a=this.createGitLabStyleLabel(e);a.style.cursor="pointer",a.onclick=()=>{n.checked=!n.checked,this.autoSaveWhitelist(o)},n.addEventListener("change",(()=>{this.autoSaveWhitelist(o)})),s.appendChild(n),s.appendChild(a),o.appendChild(s)}))};(async()=>{try{if(!this.gitlabApi)throw new Error("GitLab API not available");const e=getPathFromUrl();if(!e||!e.apiUrl)throw new Error("Could not determine project/group path");const t=await this.gitlabApi.callGitLabApi(e.apiUrl,{params:{per_page:100}});displayLabels(t)}catch(e){console.error("Error fetching ALL labels:",e),i.textContent="Error loading labels. "+e.message,i.style.color="#dc3545"}})(),e.appendChild(t)}refreshAssigneeList(e){if(!e)return;const t=document.createElement("div");t.textContent="Refreshing assignees...",t.style.padding="15px",t.style.textAlign="center",t.style.color="#666",e.innerHTML="",e.appendChild(t);const createEmptyMessage=()=>{const e=document.createElement("div");return e.textContent="No assignees added yet. Add from Available Users or add manually below.",e.style.padding="15px",e.style.color="#666",e.style.fontStyle="italic",e.style.textAlign="center",e};setTimeout((()=>{let t=[];t=this.assigneeManager?this.assigneeManager.getAssigneeWhitelist():getAssigneeWhitelist(),e.innerHTML="",t.length>0?t.forEach(((t,s)=>{e.appendChild(this.createAssigneeListItem(t,s,e,createEmptyMessage))})):e.appendChild(createEmptyMessage())}),300)}createGitLabStyleLabel(e){const t=document.createElement("span");t.textContent=e.name;const s=e.color||generateColorFromString(e.name),n=getContrastColor(s);return t.style.backgroundColor=s,t.style.color=n,t.style.padding="4px 8px",t.style.borderRadius="100px",t.style.fontSize="12px",t.style.fontWeight="500",t.style.display="inline-block",t.style.margin="2px",t.style.maxWidth="100%",t.style.overflow="hidden",t.style.textOverflow="ellipsis",t.style.whiteSpace="nowrap",t}resetLabelWhitelist(){resetLabelWhitelist(),this.labelManager&&this.labelManager.resetToDefaultWhitelist(),this.onSettingsChanged&&this.onSettingsChanged("labels")}resetAllSettings(){this.resetLabelWhitelist(),saveAssigneeWhitelist([]);const t=s.toggleShortcut;saveToggleShortcut(t),e.uiManager&&"function"==typeof e.uiManager.updateKeyboardShortcut?e.uiManager.updateKeyboardShortcut(t):this.uiManager&&"function"==typeof this.uiManager.updateKeyboardShortcut&&this.uiManager.updateKeyboardShortcut(t),this.onSettingsChanged&&this.onSettingsChanged("all")}autoSaveWhitelist(e){const t=[],s=new Set;e.querySelectorAll('input[type="checkbox"]').forEach((e=>{if(e.checked){const n=e.dataset.label.toLowerCase();s.has(n)||(t.push(n),s.add(n))}})),saveLabelWhitelist(t),this.labelManager&&this.labelManager.saveWhitelist(t),this.notification&&this.notification.success("Label whitelist updated"),this.onSettingsChanged&&this.onSettingsChanged("labels")}createGeneralSettings(t){const s=document.createElement("div"),n=document.createElement("h4");n.textContent="General Settings",n.style.marginBottom="10px";const i=document.createElement("p");i.textContent="Configure general behavior of the GitLab Sprint Helper.",i.style.marginBottom="15px",i.style.fontSize="14px",i.style.color="#666",s.appendChild(n),s.appendChild(i);const o=document.createElement("div");o.style.marginBottom="20px",o.style.padding="15px",o.style.backgroundColor="#f8f9fa",o.style.borderRadius="4px";const a=document.createElement("h5");a.textContent="Toggle Visibility Shortcut",a.style.marginTop="0",a.style.marginBottom="10px",a.style.fontSize="16px";const r=document.createElement("p");r.textContent="Set a keyboard shortcut to toggle the visibility of GitLab Sprint Helper. The shortcut will only work when not typing in an input field.",r.style.marginBottom="15px",r.style.fontSize="14px",r.style.color="#666";const l=document.createElement("div");l.style.display="flex",l.style.alignItems="center",l.style.gap="10px";const c=document.createElement("label");c.textContent="Shortcut Key:",c.style.fontWeight="bold",c.style.minWidth="100px";const d=document.createElement("input");d.type="text",d.maxLength=1,d.style.padding="8px",d.style.width="60px",d.style.textAlign="center",d.style.fontSize="16px",d.style.border="1px solid #ccc",d.style.borderRadius="4px";const h=getToggleShortcut();d.value=h;const u=document.createElement("div");u.style.marginLeft="10px",u.style.color="#666",u.textContent=`Current: Press '${h}' to toggle`,d.addEventListener("input",(()=>{if(0===d.value.length)return;const t=d.value.charAt(0).toLowerCase();t&&(saveToggleShortcut(t),u.textContent=`Current: Press '${t}' to toggle`,this.notification.success(`Shortcut changed to '${t}'`),e.uiManager&&"function"==typeof e.uiManager.updateKeyboardShortcut?e.uiManager.updateKeyboardShortcut(t):this.uiManager&&"function"==typeof this.uiManager.updateKeyboardShortcut&&this.uiManager.updateKeyboardShortcut(t),this.onSettingsChanged&&this.onSettingsChanged("general"))})),d.addEventListener("keyup",(()=>{d.value=d.value.toLowerCase()})),l.appendChild(c),l.appendChild(d),l.appendChild(u),o.appendChild(a),o.appendChild(r),o.appendChild(l),s.appendChild(o);const p=document.createElement("div");p.style.marginTop="20px",p.style.padding="15px",p.style.backgroundColor="#fff0f0",p.style.borderRadius="4px",p.style.border="1px solid #ffcccc";const m=document.createElement("h5");m.textContent="Data Management",m.style.marginTop="0",m.style.marginBottom="10px",m.style.fontSize="16px",m.style.color="#dc3545";const g=document.createElement("p");g.textContent="Reset various data stored by GitLab Sprint Helper. Warning: These actions cannot be undone!",g.style.marginBottom="15px",g.style.fontSize="14px",g.style.color="#666";const y=document.createElement("div");y.style.display="flex",y.style.gap="10px",y.style.flexWrap="wrap";const b=document.createElement("button");b.textContent="Reset All Data",b.style.backgroundColor="#dc3545",b.style.color="white",b.style.border="none",b.style.borderRadius="4px",b.style.padding="8px 16px",b.style.cursor="pointer",b.style.fontWeight="bold",b.addEventListener("click",(()=>{confirm("Are you sure you want to reset ALL data? This will remove all settings, history, and sprint data. This action cannot be undone!")&&(this.resetAllSettings(),e.historyManager&&"function"==typeof e.historyManager.clearAllHistory&&e.historyManager.clearAllHistory(),localStorage.removeItem("gitLabHelperSprintState"),localStorage.removeItem("gitLabHelperSprintHistory"),this.notification.success("All data has been reset"),this.currentModal&&(this.currentModal.remove(),this.currentModal=null))}));const f=document.createElement("button");f.textContent="Reset History",f.style.backgroundColor="#dc3545",f.style.color="white",f.style.border="none",f.style.borderRadius="4px",f.style.padding="8px 16px",f.style.cursor="pointer",f.style.fontWeight="bold",f.addEventListener("click",(()=>{confirm("Are you sure you want to reset all history data? This action cannot be undone!")&&(e.historyManager&&"function"==typeof e.historyManager.clearAllHistory?(e.historyManager.clearAllHistory(),this.notification.success("History data has been reset")):this.notification.error("History manager not available"))})),y.appendChild(b),y.appendChild(f),p.appendChild(m),p.appendChild(g),p.appendChild(y),s.appendChild(p),t.appendChild(s)}createAppearanceSettings(t){const s=document.createElement("div"),n=document.createElement("h4");n.textContent="Appearance Settings",n.style.marginBottom="10px";const i=document.createElement("p");i.textContent="Customize the appearance of the GitLab Sprint Helper.",i.style.marginBottom="15px",i.style.fontSize="14px",i.style.color="#666",s.appendChild(n),s.appendChild(i);const o=document.createElement("div");o.style.marginBottom="20px",o.style.padding="15px",o.style.backgroundColor="#f8f9fa",o.style.borderRadius="4px";const a=document.createElement("h5");a.textContent="Linked Items Feature",a.style.marginTop="0",a.style.marginBottom="10px",a.style.fontSize="16px";const r=document.createElement("p");r.textContent="Show linked items button on cards to quickly access branches, merge requests, and other related items.",r.style.marginBottom="15px",r.style.fontSize="14px",r.style.color="#666";const l=document.createElement("div");l.style.display="flex",l.style.alignItems="center",l.style.justifyContent="space-between";const c=document.createElement("label");c.textContent="Enable Linked Items",c.style.fontWeight="bold";const d=document.createElement("div");d.style.position="relative",d.style.display="inline-block",d.style.width="50px",d.style.height="24px";const h=document.createElement("input");h.type="checkbox",h.style.opacity="0",h.style.width="0",h.style.height="0";try{const e=localStorage.getItem("gitLabHelperLinkedItemsEnabled");h.checked=null===e||"true"===e}catch(e){console.error("Error loading linked items state:",e),h.checked=!0}const u=document.createElement("span");u.style.position="absolute",u.style.cursor="pointer",u.style.top="0",u.style.left="0",u.style.right="0",u.style.bottom="0",u.style.backgroundColor=h.checked?"#1f75cb":"#ccc",u.style.transition=".4s",u.style.borderRadius="34px";const p=document.createElement("span");p.style.position="absolute",p.style.content='""',p.style.height="16px",p.style.width="16px",p.style.left=h.checked?"30px":"4px",p.style.bottom="4px",p.style.backgroundColor="white",p.style.transition=".4s",p.style.borderRadius="50%",u.appendChild(p),d.appendChild(h),d.appendChild(u),h.addEventListener("change",(()=>{u.style.backgroundColor=h.checked?"#1f75cb":"#ccc",p.style.left=h.checked?"30px":"4px",localStorage.setItem("gitLabHelperLinkedItemsEnabled",h.checked),e.toggleLinkedItems&&e.toggleLinkedItems(),this.notification&&(h.checked?this.notification.success("Linked Items feature enabled"):this.notification.info("Linked Items feature disabled"))})),u.addEventListener("click",(e=>{e.preventDefault(),h.checked=!h.checked;const t=new Event("change");h.dispatchEvent(t)})),l.appendChild(c),l.appendChild(d),o.appendChild(a),o.appendChild(r),o.appendChild(l),s.appendChild(o);const m=document.createElement("div");m.style.marginBottom="20px",m.style.padding="15px",m.style.backgroundColor="#f8f9fa",m.style.borderRadius="4px";const g=document.createElement("h5");g.textContent="Hide Labels Feature",g.style.marginTop="0",g.style.marginBottom="10px",g.style.fontSize="16px";const y=document.createElement("p");y.textContent="Hide all labels on cards but show priority label colors as a small indicator line at the top of cards.",y.style.marginBottom="15px",y.style.fontSize="14px",y.style.color="#666";const b=document.createElement("div");b.style.display="flex",b.style.alignItems="center",b.style.justifyContent="space-between";const f=document.createElement("label");f.textContent="Hide Labels",f.style.fontWeight="bold";const C=document.createElement("div");C.style.position="relative",C.style.display="inline-block",C.style.width="50px",C.style.height="24px";const x=document.createElement("input");x.type="checkbox",x.style.opacity="0",x.style.width="0",x.style.height="0";try{const e=localStorage.getItem("gitLabHelperHideLabelsEnabled");x.checked="true"===e}catch(e){console.error("Error loading hide labels state:",e),x.checked=!1}const v=document.createElement("span");v.style.position="absolute",v.style.cursor="pointer",v.style.top="0",v.style.left="0",v.style.right="0",v.style.bottom="0",v.style.backgroundColor=x.checked?"#1f75cb":"#ccc",v.style.transition=".4s",v.style.borderRadius="34px";const S=document.createElement("span");S.style.position="absolute",S.style.content='""',S.style.height="16px",S.style.width="16px",S.style.left=x.checked?"30px":"4px",S.style.bottom="4px",S.style.backgroundColor="white",S.style.transition=".4s",S.style.borderRadius="50%",v.appendChild(S),C.appendChild(x),C.appendChild(v),x.addEventListener("change",(()=>{v.style.backgroundColor=x.checked?"#1f75cb":"#ccc",S.style.left=x.checked?"30px":"4px",localStorage.setItem("gitLabHelperHideLabelsEnabled",x.checked),e.toggleHideLabels&&e.toggleHideLabels(),this.notification&&(x.checked?this.notification.success("Hide Labels feature enabled"):this.notification.info("Hide Labels feature disabled"))})),v.addEventListener("click",(e=>{e.preventDefault(),x.checked=!x.checked;const t=new Event("change");x.dispatchEvent(t)})),b.appendChild(f),b.appendChild(C),m.appendChild(g),m.appendChild(y),m.appendChild(b),s.appendChild(m),t.appendChild(s)}},e.SummaryView=class SummaryView{constructor(uiManager){this.uiManager=uiManager,this.membersList=[],this.potentialAssignees=[],this.gitlabApi=uiManager?.gitlabApi||e.gitlabApi,this.gitlabApi&&this.fetchMembers(),this.isRendering=!1,this.pendingRender=!1}addCopySummaryButton(e,t,s){if(!this.notification)try{"function"==typeof Notification&&(this.notification=new Notification({position:"bottom-right",duration:3e3}))}catch(e){console.error("Error initializing notification:",e)}const n=document.createElement("div");n.style.marginTop="15px",n.style.textAlign="center";const i=document.createElement("button");i.textContent="Copy Summary Data",i.style.padding="8px 16px",i.style.backgroundColor="#1f75cb",i.style.color="white",i.style.border="none",i.style.borderRadius="4px",i.className="copySummaryBtn",i.style.cursor="pointer",i.style.fontWeight="bold",i.style.transition="background-color 0.2s ease",i.addEventListener("mouseenter",(()=>{i.style.backgroundColor="#1a63ac"})),i.addEventListener("mouseleave",(()=>{i.style.backgroundColor="#1f75cb"})),i.onclick=()=>{try{let e="";Object.keys(t).sort(((e,s)=>t[s]-t[e])).forEach((s=>{const n=t[s]/3600;e+=`${s}\t${n}\n`})),e+=`Issues\t${s}`,navigator.clipboard.writeText(e).then((()=>{this.notification?this.notification.success("Summary data copied to clipboard"):this.uiManager&&this.uiManager.notification&&this.uiManager.notification.success("Summary data copied to clipboard")})).catch((e=>{console.error("Failed to copy data:",e),this.notification?this.notification.error("Failed to copy data to clipboard"):this.uiManager&&this.uiManager.notification?this.uiManager.notification.error("Failed to copy data to clipboard"):console.error("Failed to copy data to clipboard")}));const n=i.textContent;i.textContent="✓ Copied!",i.style.backgroundColor="#28a745",setTimeout((()=>{i.textContent=n,i.style.backgroundColor="#1f75cb"}),1500)}catch(e){console.error("Error formatting or copying data:",e),this.notification?this.notification.error("Error preparing data for clipboard"):this.uiManager&&this.uiManager.notification?this.uiManager.notification.error("Error preparing data for clipboard"):console.error("Error preparing data for clipboard")}},n.appendChild(i),e.appendChild(n)}async render(e,t,s,n,i,o,a){if(this.isRendering)this.pendingRender=!0;else try{this.isRendering=!0;const r=document.getElementById("assignee-time-summary-content");if(!r)return;if(!this.membersList||0===this.membersList.length){r.innerHTML='<div style="text-align: center; padding: 20px;">Loading team members...</div>';try{await this.fetchMembers()}catch(e){console.error("Error fetching members:",e)}}if(r.innerHTML="",this.uiManager&&this.uiManager.updateBoardStats({totalCards:s,withTimeCards:n,closedCards:this.getClosedBoardCount()}),0===n)return this.renderNoDataMessage(r),void(this.uiManager&&this.uiManager.removeLoadingScreen&&this.uiManager.removeLoadingScreen("summary-tab"));const l=formatHours(t);let c=0;for(const e in o){const t=e.toLowerCase();(t.includes("done")||t.includes("closed")||t.includes("complete")||t.includes("finished"))&&(c+=o[e].timeEstimate||0)}const d=formatHours(c);this.uiManager&&this.uiManager.updateHeader(`Summary ${l}h - <span style="color:#28a745">${d}h</span>`),i&&this.renderMilestoneInfo(r,i);let h=this;await this.renderDataTableWithDistribution(r,e,l,o,a),h.addCopySummaryButton(r,e,n),h.uiManager&&h.uiManager.removeLoadingScreen&&h.uiManager.removeLoadingScreen("summary-tab")}finally{this.isRendering=!1,this.pendingRender&&(this.pendingRender=!1)}}getWhitelistedAssignees(){let e=[];try{if(this.uiManager&&this.uiManager.assigneeManager&&"function"==typeof this.uiManager.assigneeManager.getAssigneeWhitelist)e=this.uiManager.assigneeManager.getAssigneeWhitelist();else if("function"==typeof getAssigneeWhitelist)e=getAssigneeWhitelist();else try{const t=localStorage.getItem("gitLabHelperAssigneeWhitelist");t&&(e=JSON.parse(t))}catch(e){console.warn("Error reading assignee whitelist from localStorage:",e)}}catch(e){console.error("Error getting whitelist:",e)}return Array.isArray(e)?e:[]}getHistoryAssignees(){let e=[];try{const t=localStorage.getItem("gitLabHelperHistory");if(t){const s=JSON.parse(t),n="2478181?milestone_title=Started";if(s[n]){const t=Object.keys(s[n]).sort().reverse();if(t.length>0){const i=s[n][t[0]];if(i&&i.assigneeTimeMap){const t=i.userData||{},s=Object.entries(i.assigneeTimeMap).map((([e,s])=>({name:e,username:t[e]?.username||this.getUsernameFromName(e),avatar_url:t[e]?.avatar_url||"",stats:{totalHours:formatHours(s),closedHours:0,fromHistory:!0},userDistribution:i.userDistributions[e].distribution,boardAssigneeData:i.boardAssigneeData})));e=[...e,...s]}}}}}catch(e){console.error("Error getting history assignees:",e)}return e}getBoardKey(){try{const t=e.location.href.split("/boards/");return t.length<2?"unknown-board":t[1]}catch(e){return console.error("Error generating board key:",e),"unknown-board"}}getUsernameFromName(e){if(!e)return"";if(this.membersList&&this.membersList.length){const t=this.membersList.find((t=>t.name===e));if(t&&t.username)return t.username}return e.includes(" ")?e.toLowerCase().replace(/\s+/g,".").replace(/[^a-z0-9._-]/g,""):e.toLowerCase()}getClosedBoardCount(){let e=0;return document.querySelectorAll(".board-list").forEach((t=>{let s="";try{if(t.__vue__&&t.__vue__.$children&&t.__vue__.$children.length>0){const e=t.__vue__.$children.find((e=>e.$props&&e.$props.list&&e.$props.list.title));e&&e.$props.list.title&&(s=e.$props.list.title.toLowerCase())}if(!s){const e=t.querySelector(".board-title-text");e&&(s=e.textContent.trim().toLowerCase())}}catch(e){console.error("Error getting board title:",e);const n=t.querySelector(".board-title-text");n&&(s=n.textContent.trim().toLowerCase())}if(s.includes("done")||s.includes("closed")||s.includes("complete")||s.includes("finished")){const s=t.querySelectorAll(".board-card");e+=s.length}})),e}renderNoDataMessage(e){const t=document.createElement("p");t.textContent="No time estimate data found. Make sure the board is fully loaded and try again.",t.style.color="#666",e.appendChild(t);const s=document.createElement("p");s.style.fontSize="12px",s.style.fontStyle="italic",s.innerHTML="Tip: Try scrolling through all cards to ensure they are loaded before clicking Recalculate.",e.appendChild(s),this.uiManager.updateHeader("Summary 0.0h")}renderMilestoneInfo(e,t){const s=document.createElement("div");s.style.marginBottom="10px",s.style.fontSize="13px",s.style.color="#555",s.textContent=`Current Milestone: ${t}`,e.appendChild(s)}async renderDataTableWithDistribution(t,s,n,i,o){const a=document.createElement("table");a.style.width="100%",a.style.borderCollapse="collapse",a.style.tableLayout="fixed";const r=document.createElement("div");r.textContent="Loading board configuration...",r.style.padding="15px",r.style.textAlign="center",r.style.color="#666",t.appendChild(r);const l=await fetchAllBoards();try{r.parentNode===t&&t.removeChild(r)}catch(e){}try{const e=t.querySelector("table");e&&t.removeChild(e)}catch(e){}try{const e=t.querySelector(".copySummaryBtn");e&&$(e).remove()}catch(e){}t.appendChild(a);const c=l&&l.length>0?l:Object.keys(i||{});a.style.tableLayout="fixed";const d=document.createElement("tr");d.style.borderBottom="2px solid #ddd",d.style.fontWeight="bold";const h=document.createElement("td"),u=document.createElement("a");u.textContent="Total",u.href=e.location.pathname+"?milestone_title=Started",u.style.color="#1f75cb",u.style.textDecoration="none",u.style.cursor="pointer",u.addEventListener("mouseenter",(()=>{u.style.textDecoration="underline"})),u.addEventListener("mouseleave",(()=>{u.style.textDecoration="none"})),h.appendChild(u),h.style.padding="8px 0",h.style.paddingLeft="32px";const p=document.createElement("td");p.textContent=`${n}h`,p.style.textAlign="right",p.style.padding="8px 0";const m=document.createElement("td");if(m.style.textAlign="right",m.style.padding="8px 0 8px 15px",m.style.color="#666",m.style.fontSize="12px",c.length>0&&i){const e=c.map((e=>{const t=i[e]||{timeEstimate:0},s=parseFloat(formatHours(t.timeEstimate||0));return Math.round(s)})),t=e.map(((t,s)=>{let n='<span style="';return 0===t&&(n+="color:#aaa;"),s===e.length-1&&t>0&&(n+="color:#28a745;"),n+=`">${t}h</span>`,n})).join("/");m.innerHTML=t}d.appendChild(h),d.appendChild(p),d.appendChild(m),a.appendChild(d);const g=new Set;Object.keys(s||{}).sort(((e,t)=>(s[t]||0)-(s[e]||0))).forEach((e=>{if(!e)return;const t=formatHours(s[e]||0);this.addAssigneeRow(a,e,`${t}h`,c,o),g.add(e.toLowerCase())}));const y=this.getHistoryAssignees(),b=[];y&&y.length>0&&y.forEach((e=>{if(!e||!e.name)return;const t=e.name.toLowerCase();g.has(t)||b.push(e)}));const f=[];if(this.membersList&&this.membersList.length>0&&this.membersList.forEach((e=>{if(!e)return;const t=e.name||e.username;if(!t)return;const s=t.toLowerCase();g.has(s)||b.some((e=>(e.name||"").toLowerCase()===s||(e.username||"").toLowerCase()===s))||f.push(e)})),b.length>0){const e=document.createElement("tr"),t=document.createElement("td");t.colSpan=3,t.style.padding="10px 0 5px 32px",t.style.fontSize="12px",t.style.color="#666",t.style.fontStyle="italic",t.style.borderTop="1px solid #eee",t.textContent="Previously Active Members:",e.appendChild(t),a.appendChild(e),b.sort(((e,t)=>{const s=e.stats?.totalHours||0;return(t.stats?.totalHours||0)-s})),b.forEach((e=>{const t=e.name||e.username;if(!t)return;const s=e.stats?`${e.stats.totalHours}h`:"0h";this.addAssigneeRow(a,t,s,c,{},!0,e,e.boardAssigneeData)}))}if(f.length>0){const e=document.createElement("tr"),t=document.createElement("td");t.colSpan=3,t.style.padding="10px 0 5px 32px",t.style.fontSize="12px",t.style.color="#666",t.style.fontStyle="italic",t.style.borderTop="1px solid #eee";const s=document.createElement("div");s.style.display="flex",s.style.alignItems="center",s.style.cursor="pointer";const n=document.createElement("span");n.textContent="Other Team Members:",s.appendChild(n);const i=document.createElement("span");i.textContent="▶",i.style.marginLeft="5px",i.style.fontSize="10px",i.style.transition="transform 0.3s",s.appendChild(i),t.appendChild(s),e.appendChild(t),a.appendChild(e);const o=document.createElement("tbody");o.style.display="none",o.id="other-team-members-container",s.addEventListener("click",(()=>{const e="none"===o.style.display;o.style.display=e?"table-row-group":"none",i.textContent=e?"▼":"▶"})),f.sort(((e,t)=>{const s=(e.name||e.username||"").toLowerCase(),n=(t.name||t.username||"").toLowerCase();return s.localeCompare(n)})),f.forEach((e=>{const t=e.name||e.username;if(!t)return;const s=document.createElement("tr");this.addAssigneeRowToElement(s,t,"0h",c,{},!0),o.appendChild(s)})),a.appendChild(o)}a.querySelectorAll("tr").forEach((e=>{const t=e.querySelectorAll("td");t.length>=3&&(t[1]&&(t[1].style.width="30px",t[1].style.minWidth="30px",t[1].style.maxWidth="30px"),t[2]&&(t[2].style.width="120px",t[2].style.minWidth="120px",t[2].style.maxWidth="120px"),t[0]&&(t[0].style.width="auto"))})),t.appendChild(a)}addAssigneeRow(e,t,s,n,i,o=!1,a=null,r=null){t||(t="Unknown User");const l=document.createElement("tr");return this.addAssigneeRowToElement(l,t,s,n,i,o,a,r),e.appendChild(l),l}async fetchMembers(){try{const t=this.getWhitelistedAssignees();let s=[];if(t&&t.length>0&&(s=[...t]),!this.gitlabApi&&(this.gitlabApi=e.gitlabApi,!this.gitlabApi))return console.warn("GitLab API not available for fetching members, using whitelist only"),this.membersList=s,s;const n=getPathFromUrl?.()||{};if(!n||!n.type||!n.encodedPath)return console.warn("Could not determine project/group path, using whitelist only"),this.membersList=s,s;let i;if("project"===n.type)i=`projects/${n.encodedPath}/members/all`;else{if("group"!==n.type)return console.warn("Unsupported path type, using whitelist only:",n.type),this.membersList=s,s;i=`groups/${n.encodedPath}/members/all`}const o=await this.gitlabApi.callGitLabApiWithCache(i,{params:{per_page:100,all_available:!0}});if(!Array.isArray(o))return console.warn("API did not return an array of members, using whitelist only"),this.membersList=s,s;s.push(...o);const a=new Map;s.forEach((e=>{if(!e||!e.username)return;const t=e.username.toLowerCase();if(a.has(t)){const s=a.get(t);(!s.id||e.id&&void 0===s.name&&e.name)&&a.set(t,{id:e.id,name:e.name||s.name,username:e.username,avatar_url:e.avatar_url||s.avatar_url,stats:s.stats})}else a.set(t,{id:e.id,name:e.name,username:e.username,avatar_url:e.avatar_url})}));return this.getHistoryAssignees().forEach((e=>{if(!e||!e.username)return;const s=e.username.toLowerCase();if(a.has(s)){const t=a.get(s);a.set(s,{...t,stats:e.stats})}else{t.some((e=>e.username&&e.username.toLowerCase()===s))&&a.set(s,e)}})),this.membersList=Array.from(a.values()),this.membersList}catch(e){return console.error("Error fetching members:",e),allMembers&&allMembers.length>0?(this.membersList=allMembers,allMembers):(this.membersList=[],[])}}findMemberByName(e){if(!e)return null;const t=e.toLowerCase();if(this.membersList&&this.membersList.length){const e=this.membersList.find((e=>!!e&&(!(!e.name||e.name.toLowerCase()!==t)||!(!e.username||e.username.toLowerCase()!==t))));if(e)return e}try{const t=localStorage.getItem("gitLabHelperSprintHistory");if(t){const s=JSON.parse(t);if(Array.isArray(s)&&s.length>0){const t=s[0];if(t.userPerformance&&t.userPerformance[e]){const s=t.userPerformance[e];if(s.username||s.avatar_url)return{name:e,username:s.username||"",avatar_url:s.avatar_url||"",fromHistory:!0}}if(t.userDistributions&&t.userDistributions[e]){const s=t.userDistributions[e];if(s.username||s.avatar_url)return{name:e,username:s.username||"",avatar_url:s.avatar_url||"",fromHistory:!0}}if(t.userData&&t.userData[e]){const s=t.userData[e];return{name:e,username:s.username||"",avatar_url:s.avatar_url||"",fromHistory:!0}}}}const s=localStorage.getItem("gitLabHelperHistory");if(s){const t=JSON.parse(s),n=this.getBoardKey();if(t[n]){const s=Object.keys(t[n]).sort().reverse();for(const i of s){const s=t[n][i];if(s.userData&&s.userData[e]){const t=s.userData[e];return{name:e,username:t.username||"",avatar_url:t.avatar_url||"",fromHistory:!0}}if(s.userDistributions&&s.userDistributions[e]){const t=s.userDistributions[e];if(t.username||t.avatar_url)return{name:e,username:t.username||"",avatar_url:t.avatar_url||"",fromHistory:!0}}}}}}catch(e){console.warn("Error searching history for member:",e)}return null}addAssigneeRowToElement(t,s,n,i,o,a=!1,r=null,l=null){s||(s="Unknown User"),t.style.borderBottom="1px solid #eee",a&&(t.style.opacity="0.75",t.style.fontStyle="italic");const c=document.createElement("td");c.style.display="flex",c.style.alignItems="center",c.style.padding="8px 0",c.style.width="auto";const d=this.findMemberByName(s),h=document.createElement("div");h.style.width="24px",h.style.height="24px",h.style.borderRadius="50%",h.style.marginRight="8px",h.style.overflow="hidden",h.style.flexShrink="0";let u="";if(d&&d.avatar_url?u=d.avatar_url:r&&r.avatar_url&&(u=r.avatar_url),u){const e=document.createElement("img");e.src=u,e.style.width="100%",e.style.height="100%",e.style.objectFit="cover",h.appendChild(e)}else{h.style.backgroundColor="#e0e0e0",h.style.display="flex",h.style.alignItems="center",h.style.justifyContent="center",h.style.fontSize="10px",h.style.fontWeight="bold",h.style.color="#666";const e=s.split(" ").map((e=>e.charAt(0))).slice(0,2).join("").toUpperCase();h.textContent=e||"?"}c.appendChild(h);const p=document.createElement("div");p.style.overflow="hidden",p.style.textOverflow="ellipsis";const m=document.createElement("a");let g="";g=d&&d.username?d.username:r&&r.username?r.username:this.getUsernameFromName(s),m.href=g?e.location.pathname+`?milestone_title=Started&assignee_username=${g}`:e.location.pathname+"?milestone_title=Started",m.textContent=s+(0==Object.keys(o).length?" ?":""),m.title=g?`@${g}`:s,m.style.color="#1f75cb",m.style.textDecoration="none",m.style.cursor="pointer",m.style.display="block",m.style.overflow="hidden",m.style.textOverflow="ellipsis",m.style.whiteSpace="nowrap",m.addEventListener("mouseenter",(()=>{m.style.textDecoration="underline"})),m.addEventListener("mouseleave",(()=>{m.style.textDecoration="none"})),p.appendChild(m),c.appendChild(p);const y=document.createElement("td");y.textContent=`${n}`,y.style.textAlign="center",y.style.padding="8px 0",y.style.width="80px",y.style.minWidth="80px",y.style.maxWidth="80px";const b=document.createElement("td");if(b.style.textAlign="right",b.style.padding="8px 0 8px 15px",b.style.color="#666",b.style.fontSize="12px",b.style.width="180px",b.style.minWidth="180px",b.style.maxWidth="180px",!a&&i.length>0&&o){const e=i.map((e=>{const t=(o[e]||{})[s]||{timeEstimate:0},n=parseFloat(formatHours(t.timeEstimate||0));return Math.round(n)})),t=e.map(((t,s)=>{let n='<span style="';return 0===t&&(n+="color:#aaa;"),s===e.length-1&&t>0&&(n+="color:#28a745;"),n+=`">${t}h</span>`,n})).join("/");b.innerHTML=t}else if(l){const e=i.map((e=>{const t=(l[e]||{})[s]||{timeEstimate:0},n=parseFloat(formatHours(t.timeEstimate||0));return Math.round(n)})),t=e.map(((t,s)=>{let n='<span style="';return 0===t&&(n+="color:#aaa;"),s===e.length-1&&t>0&&(n+="color:#28a745;"),n+=`">${t}h</span>`,n})).join("/");b.innerHTML=t}else{const e=i.map((()=>'<span style="color:#aaa;">0h</span>')).join("/");b.innerHTML=e}t.appendChild(c),t.appendChild(y),t.appendChild(b)}},e.BoardsView=class BoardsView{constructor(uiManager){this.uiManager=uiManager}render(e,t){const s=document.getElementById("boards-time-summary-content");if(!s)return;s.innerHTML="";const n=document.createElement("div");n.className="boards-list-summary";const i=Object.keys(e).filter((t=>e[t].tickets>0&&e[t].timeEstimate>0)).sort(((t,s)=>e[s].timeEstimate-e[t].timeEstimate));if(0===i.length){const e=document.createElement("div");e.textContent="No boards with time estimates found.",e.style.padding="15px",e.style.color="#666",e.style.fontStyle="italic",e.style.textAlign="center",n.appendChild(e)}else i.forEach((s=>{const i=this.createBoardSection(s,e[s],t[s]);n.appendChild(i)}));s.appendChild(n),this.uiManager&&this.uiManager.removeLoadingScreen&&this.uiManager.removeLoadingScreen("boards-tab")}createBoardSection(e,t,s){const n=formatHours(t.timeEstimate),i=document.createElement("div");i.className="board-section",i.style.marginBottom="15px";const o=document.createElement("div");o.className="board-header",o.style.display="flex",o.style.justifyContent="space-between",o.style.padding="5px",o.style.backgroundColor="#f5f5f5",o.style.borderRadius="3px",o.style.cursor="pointer",o.style.fontWeight="bold";const a=document.createElement("div");a.className="board-details",a.style.display="none",a.style.marginTop="5px",a.style.marginLeft="10px",o.addEventListener("click",(()=>{"none"===a.style.display?(a.style.display="block",l.textContent="▼"):(a.style.display="none",l.textContent="▶")}));const r=document.createElement("div");r.textContent=`${e} (${t.tickets} tickets, ${n}h)`;const l=document.createElement("span");if(l.textContent="▶",l.style.marginLeft="5px",o.appendChild(r),o.appendChild(l),s&&Object.keys(s).length>0)a.appendChild(this.createAssigneeTable(s));else{const e=document.createElement("div");e.textContent="No assignee data available for this board.",e.style.padding="8px 0",e.style.color="#666",e.style.fontStyle="italic",a.appendChild(e)}return i.appendChild(o),i.appendChild(a),i}createAssigneeTable(e){const t=document.createElement("table");t.style.width="100%",t.style.borderCollapse="collapse",t.style.marginTop="5px";const s=document.createElement("tr");s.style.borderBottom="1px solid #ddd";const n=document.createElement("th");n.textContent="Assignee",n.style.textAlign="left",n.style.padding="3px 0";const i=document.createElement("th");i.textContent="Tickets",i.style.textAlign="right",i.style.padding="3px 5px";const o=document.createElement("th");o.textContent="Hours",o.style.textAlign="right",o.style.padding="3px 0",s.appendChild(n),s.appendChild(i),s.appendChild(o),t.appendChild(s);return Object.keys(e).sort(((t,s)=>e[s].timeEstimate-e[t].timeEstimate)).forEach((s=>{const n=e[s],i=formatHours(n.timeEstimate),o=document.createElement("tr");o.style.borderBottom="1px solid #eee";const a=document.createElement("td");a.textContent=s,a.style.padding="3px 0";const r=document.createElement("td");r.textContent=n.tickets,r.style.textAlign="right",r.style.padding="3px 5px";const l=document.createElement("td");l.textContent=`${i}h`,l.style.textAlign="right",l.style.padding="3px 0",o.appendChild(a),o.appendChild(r),o.appendChild(l),t.appendChild(o)})),t}},e.SprintManagementView=class SprintManagementView{constructor(uiManager){this.uiManager=uiManager,this.notification=null;try{"function"==typeof Notification&&(this.notification=new Notification({position:"bottom-right",duration:3e3}))}catch(e){console.error("Error initializing notification:",e)}this.sprintState={endSprint:!1,preparedForNext:!1,currentMilestone:null,userPerformance:{}},this.sprintHistory=[],this.loadSprintState(),this.loadSprintHistory()}render(){const t=document.getElementById("sprint-management-content");if(!t)return;t.innerHTML="";const s=new URLSearchParams(e.location.search);let n=!1;if(s.has("milestone_title")&&"Started"===s.get("milestone_title")){let e=0;s.forEach((()=>{e++})),n=1===e}if(!n)return void this.renderLockedState(t);this.getCurrentMilestone();const i=document.createElement("div");i.style.padding="10px",i.style.margin="0 10px",i.style.backgroundColor="#f8f9fa",i.style.borderRadius="6px",i.style.fontWeight="bold",this.sprintState.currentMilestone?i.textContent=`Current Milestone: ${this.sprintState.currentMilestone}`:(i.textContent="No milestone detected",i.style.color="#dc3545"),t.appendChild(i);const o=document.createElement("div");o.style.display="flex",o.style.flexDirection="column",o.style.gap="5px",o.style.marginTop="",o.style.padding="15px",o.style.backgroundColor="#f8f9fa",o.style.borderRadius="6px",o.style.border="1px solid #dee2e6",o.style.margin="10px 10px 0",this.createStepButton(o,"1. End Sprint","#1f75cb",(()=>this.endSprint()),!this.sprintState.endSprint),this.createStepButton(o,"2. Ready for next Sprint","#6f42c1",(()=>this.prepareForNextSprint()),this.sprintState.endSprint&&!this.sprintState.preparedForNext),this.createStepButton(o,"3. Copy Sprint Data Summary","#28a745",(()=>this.copySprintData()),this.sprintState.preparedForNext),this.createStepButton(o,"4. Copy Closed Issue Names","#fd7e14",(()=>this.copyClosedTickets()),this.sprintState.preparedForNext);const a=document.createElement("div");a.style.display="flex",a.style.justifyContent="flex-end",a.style.marginTop="10px";const r=document.createElement("button");r.textContent="Edit Data",r.className="edit-sprint-data-button",r.style.padding="10px 16px";const l=this.sprintState.endSprint;r.style.backgroundColor=l?"#17a2b8":"#6c757d",r.style.color="white",r.style.border="none",r.style.borderRadius="4px",r.style.cursor=l?"pointer":"not-allowed",r.style.fontWeight="bold",r.style.opacity=l?"1":"0.7",r.disabled=!l,l&&r.addEventListener("click",(()=>this.editSprintData())),a.appendChild(r),o.appendChild(a),t.appendChild(o),void 0!==this.sprintState.totalTickets&&this.showSprintDataSummary(t),this.renderSprintHistory(t),this.uiManager&&this.uiManager.removeLoadingScreen&&this.uiManager.removeLoadingScreen("sprintmanagement-tab")}renderLockedState(t){const s=document.createElement("div");s.style.display="flex",s.style.flexDirection="column",s.style.alignItems="center",s.style.justifyContent="center",s.style.padding="40px",s.style.backgroundColor="#f8f9fa",s.style.borderRadius="6px",s.style.margin="10px",s.style.textAlign="center";const n=document.createElement("div");n.innerHTML="🔒",n.style.fontSize="48px",n.style.marginBottom="20px";const i=document.createElement("h3");i.textContent="Sprint Management is Locked",i.style.marginBottom="15px",i.style.color="#495057";const o=document.createElement("p");o.innerHTML="Sprint Management is only available when URL contains <strong>exactly</strong> <code>?milestone_title=Started</code> with no other parameters",o.style.color="#6c757d",o.style.marginBottom="20px";const a=document.createElement("a"),r=new URL(e.location.href);r.search="",r.searchParams.set("milestone_title","Started"),a.href=r.toString(),a.textContent="Access Sprint Management",a.style.display="inline-block",a.style.padding="10px 16px",a.style.backgroundColor="#1f75cb",a.style.color="white",a.style.textDecoration="none",a.style.borderRadius="4px",a.style.fontWeight="bold",a.style.marginTop="10px",s.appendChild(n),s.appendChild(i),s.appendChild(o),s.appendChild(a),t.appendChild(s),this.uiManager&&this.uiManager.removeLoadingScreen&&this.uiManager.removeLoadingScreen("sprintmanagement-tab")}copyClosedTickets(){try{const e=this.getClosedTickets();if(0===e.length)return void this.notification.warning("No closed tickets found on the board");const t=`"${e.map((e=>`- ${e.title}`)).join("\n")}"`;navigator.clipboard.writeText(t).then((()=>{this.notification.success(`Copied ${e.length} issue ${1!==e.length?"names":"name"} to clipboard`)})).catch((e=>{console.error("Error copying to clipboard:",e),this.notification.error("Failed to copy to clipboard")}))}catch(e){console.error("Error copying closed tickets:",e),this.notification.error("Error processing issues")}}updateStatus(e,t="info"){this.notification&&this.notification[t](e)}getClosedTickets(){const e=[];return document.querySelectorAll(".board-list").forEach((t=>{let s="";try{if(t.__vue__&&t.__vue__.$children&&t.__vue__.$children.length>0){const e=t.__vue__.$children.find((e=>e.$props&&e.$props.list&&e.$props.list.title));e&&e.$props.list.title&&(s=e.$props.list.title.toLowerCase())}if(!s){const e=t.querySelector(".board-title-text");e&&(s=e.textContent.trim().toLowerCase())}}catch(e){console.error("Error getting board title:",e);const n=t.querySelector(".board-title-text");n&&(s=n.textContent.trim().toLowerCase())}if(s.includes("done")||s.includes("closed")||s.includes("complete")||s.includes("finished")){t.querySelectorAll(".board-card").forEach((t=>{try{if(t.__vue__&&t.__vue__.$children){const s=t.__vue__.$children.find((e=>e.$props&&e.$props.item));if(s&&s.$props&&s.$props.item){const t=s.$props.item,n=t.title,i=t.iid;n&&e.push({id:i||"unknown",title:n})}}else{const s=t.querySelector(".board-card-title");if(s){const n=s.textContent.trim();let i="unknown";const o=t.querySelector("[data-issue-id]");o&&o.dataset.issueId&&(i=o.dataset.issueId),n&&e.push({id:i,title:n})}}}catch(e){console.error("Error processing card:",e)}}))}})),e}copySprintData(){try{const{totalTickets:e,closedTickets:t,totalHours:s,closedHours:n,extraHoursClosed:i=0}=this.sprintState,o=n+i;let a="schlecht";const r=e>0?t/e:0,l=s>0?o/s:0;r>.7||l>.7?a="gut":(r>.5||l>.5)&&(a="mittel");const c=`${e}\n${t}\n${s}\n${o}\n\n${a}`;navigator.clipboard.writeText(c).then((()=>{this.notification.success("Sprint data copied to clipboard")})).catch((e=>{console.error("Error copying sprint data to clipboard:",e),this.notification.error("Failed to copy sprint data")}))}catch(e){console.error("Error copying sprint data:",e),this.notification.error("Error processing sprint data")}}calculateSprintData(){let e=0,t=0,s=0;document.querySelectorAll(".board-list").forEach((n=>{let i="";try{if(n.__vue__&&n.__vue__.$children&&n.__vue__.$children.length>0){const e=n.__vue__.$children.find((e=>e.$props&&e.$props.list&&e.$props.list.title));e&&e.$props.list.title&&(i=e.$props.list.title.toLowerCase())}if(!i){const e=n.querySelector(".board-title-text");e&&(i=e.textContent.trim().toLowerCase())}}catch(e){console.error("Error getting board title:",e);const t=n.querySelector(".board-title-text");t&&(i=t.textContent.trim().toLowerCase())}const o=i.includes("done")||i.includes("closed")||i.includes("complete")||i.includes("finished");n.querySelectorAll(".board-card").forEach((n=>{try{if(n.__vue__&&n.__vue__.$children){const i=n.__vue__.$children.find((e=>e.$props&&e.$props.item));if(i&&i.$props&&i.$props.item){const n=i.$props.item;if(e++,n.timeEstimate){const e=n.timeEstimate/3600;t+=e,o&&(s+=e)}}}}catch(e){console.error("Error processing card:",e)}}))})),t=Math.round(10*t)/10,s=Math.round(10*s)/10;let n="schlecht";const i=this.getClosedTickets().length,o=e>0?i/e:0,a=t>0?s/t:0;return o>.7||a>.7?n="gut":(o>.5||a>.5)&&(n="mittel"),{totalTickets:e,totalHours:t,closedHours:s,prediction:n}}createStepButton(e,t,s,n,i=!0){const o=document.createElement("div");o.style.display="flex",o.style.flexDirection="column",o.style.gap="5px";const a=document.createElement("button");if(a.textContent=t,a.style.padding="12px 16px",a.style.backgroundColor=i?s:"#6c757d",a.style.color="white",a.style.border="none",a.style.borderRadius="4px",a.style.cursor=i?"pointer":"not-allowed",a.style.fontWeight="bold",a.style.opacity=i?"1":"0.7",a.style.transition="all 0.2s ease",a.disabled=!i,i){const e=this.darkenColor(s,10);a.addEventListener("mouseenter",(function(){this.style.backgroundColor=e})),a.addEventListener("mouseleave",(function(){this.style.backgroundColor=s})),a.addEventListener("click",(function(){n()}))}return o.appendChild(a),e.appendChild(o),a}darkenColor(e,t){e=e.replace(/^#/,"");let s=parseInt(e.substr(0,2),16),n=parseInt(e.substr(2,2),16),i=parseInt(e.substr(4,2),16);return s=Math.floor(s*(100-t)/100),n=Math.floor(n*(100-t)/100),i=Math.floor(i*(100-t)/100),s=Math.min(255,Math.max(0,s)),n=Math.min(255,Math.max(0,n)),i=Math.min(255,Math.max(0,i)),`#${s.toString(16).padStart(2,"0")}${n.toString(16).padStart(2,"0")}${i.toString(16).padStart(2,"0")}`}getCurrentMilestone(){try{document.querySelectorAll(".board-list").forEach((e=>{e.querySelectorAll(".board-card").forEach((e=>{try{if(e.__vue__&&e.__vue__.$children){const t=e.__vue__.$children.find((e=>e.$props&&e.$props.item&&e.$props.item.milestone));t&&t.$props.item&&t.$props.item.milestone&&t.$props.item.milestone.title&&(this.sprintState.currentMilestone=t.$props.item.milestone.title)}}catch(e){console.error("Error parsing issue for milestone:",e)}}))})),this.sprintState.currentMilestone&&this.saveSprintState()}catch(e){console.error("Error getting current milestone:",e)}}endSprint(){try{const e=this.calculateSprintData(),t=this.getClosedTickets(),s=this.calculateUserPerformance(),n=Date.now().toString();this.sprintState.id=n,this.sprintState.endSprint=!0,this.sprintState.totalTickets=e.totalTickets,this.sprintState.closedTickets=t.length,this.sprintState.totalHours=e.totalHours,this.sprintState.closedHours=e.closedHours,this.sprintState.userPerformance=s,this.sprintState.timestamp=(new Date).toISOString(),this.saveSprintState(),this.notification.success("Sprint ended. Data captured successfully."),this.uiManager&&this.uiManager.issueSelector&&"function"==typeof this.uiManager.issueSelector.startSelection&&(this.uiManager.tabManager&&"function"==typeof this.uiManager.tabManager.switchToTab&&this.uiManager.tabManager.switchToTab("bulkcomments"),setTimeout((()=>{this.uiManager.issueSelector.startSelection()}),300),this.notification.info("Issue selection started. Please select issues to process.")),this.render()}catch(e){console.error("Error ending sprint:",e),this.notification.error("Failed to end sprint: "+e.message)}}deleteCurrentSprint(){try{if(this.sprintState.id&&this.sprintHistory&&this.sprintHistory.length>0){const e=this.sprintHistory.findIndex((e=>e.id===this.sprintState.id));e>=0&&(this.sprintHistory.splice(e,1),this.saveSprintHistory(),this.notification.info("Sprint removed from history."))}this.sprintState={endSprint:!1,preparedForNext:!1,currentMilestone:this.sprintState.currentMilestone,userPerformance:{}},this.saveSprintState(),this.notification.success("Sprint data has been deleted."),this.render()}catch(e){console.error("Error deleting sprint data:",e),this.notification.error("Failed to delete sprint data: "+e.message)}}prepareForNextSprint(){try{const e=this.calculateSprintData(),t=Math.max(0,this.sprintState.totalHours-e.totalHours);this.archiveCompletedSprint(),this.sprintState.preparedForNext=!0,this.sprintState.extraHoursClosed=t,this.saveSprintState(),this.notification.success(`Sprint preparation complete. ${t}h of carried over work identified.`),this.render()}catch(e){console.error("Error preparing for next sprint:",e),this.notification.error("Failed to prepare for next sprint: "+e.message)}}editSprintData(){try{const e=`\n            <div style="display: flex; flex-direction: column; gap: 10px;">\n                <div>\n                    <label style="display: block; margin-bottom: 5px; font-weight: bold;">Total Tickets:</label>\n                    <input type="number" id="edit-total-tickets" value="${this.sprintState.totalTickets||0}" min="0" style="width: 100%; padding: 8px; border-radius: 4px; border: 1px solid #ccc;">\n                </div>\n                <div>\n                    <label style="display: block; margin-bottom: 5px; font-weight: bold;">Closed Tickets:</label>\n                    <input type="number" id="edit-closed-tickets" value="${this.sprintState.closedTickets||0}" min="0" style="width: 100%; padding: 8px; border-radius: 4px; border: 1px solid #ccc;">\n                </div>\n                <div>\n                    <label style="display: block; margin-bottom: 5px; font-weight: bold;">Total Hours:</label>\n                    <input type="number" id="edit-total-hours" value="${this.sprintState.totalHours||0}" min="0" step="0.1" style="width: 100%; padding: 8px; border-radius: 4px; border: 1px solid #ccc;">\n                </div>\n                <div>\n                    <label style="display: block; margin-bottom: 5px; font-weight: bold;">Closed Hours:</label>\n                    <input type="number" id="edit-closed-hours" value="${this.sprintState.closedHours||0}" min="0" step="0.1" style="width: 100%; padding: 8px; border-radius: 4px; border: 1px solid #ccc;">\n                </div>\n                <div>\n                    <label style="display: block; margin-bottom: 5px; font-weight: bold;">Extra Closed Hours:</label>\n                    <input type="number" id="edit-extra-hours" value="${this.sprintState.extraHoursClosed||0}" min="0" step="0.1" style="width: 100%; padding: 8px; border-radius: 4px; border: 1px solid #ccc;">\n                </div>\n                <div style="margin-top: 10px; padding-top: 10px; border-top: 1px solid #eee;">\n                    <button id="delete-sprint-btn" style="width: 100%; padding: 8px; background-color: #dc3545; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: bold;">Delete Current Sprint Data</button>\n                </div>\n            </div>\n        `;this.showModal("Edit Sprint Data",e,(()=>{if(this.sprintState.totalTickets=parseFloat(document.getElementById("edit-total-tickets").value)||0,this.sprintState.closedTickets=parseFloat(document.getElementById("edit-closed-tickets").value)||0,this.sprintState.totalHours=parseFloat(document.getElementById("edit-total-hours").value)||0,this.sprintState.closedHours=parseFloat(document.getElementById("edit-closed-hours").value)||0,this.sprintState.extraHoursClosed=parseFloat(document.getElementById("edit-extra-hours").value)||0,this.sprintState.totalTickets>0&&!this.sprintState.endSprint&&(this.sprintState.endSprint=!0),this.sprintState.extraHoursClosed>0&&!this.sprintState.survivorsSet&&(this.sprintState.survivorsSet=!0),this.sprintState.id&&this.sprintHistory&&this.sprintHistory.length>0){const e=this.sprintHistory.findIndex((e=>e.id===this.sprintState.id));e>=0&&(this.sprintHistory[e].totalTickets=this.sprintState.totalTickets,this.sprintHistory[e].closedTickets=this.sprintState.closedTickets,this.sprintHistory[e].totalHours=this.sprintState.totalHours,this.sprintHistory[e].closedHours=this.sprintState.closedHours,this.sprintHistory[e].extraHoursClosed=this.sprintState.extraHoursClosed,this.saveSprintHistory(),this.notification.info("Sprint data updated in history as well."))}this.saveSprintState(),this.notification.success("Sprint data updated successfully."),this.render()})),setTimeout((()=>{const e=document.getElementById("delete-sprint-btn");e&&e.addEventListener("click",(e=>{if(e.preventDefault(),e.stopPropagation(),confirm("Are you sure you want to delete the current sprint data? This action cannot be undone.")){this.deleteCurrentSprint();const e=document.querySelector('div[style*="position: fixed"][style*="z-index: 1000"]');e&&e.parentNode&&e.parentNode.removeChild(e)}}))}),100)}catch(e){console.error("Error editing sprint data:",e),this.notification.error("Failed to edit sprint data: "+e.message)}}showModal(e,t,s){const n=document.createElement("div");n.style.position="fixed",n.style.top="0",n.style.left="0",n.style.width="100%",n.style.height="100%",n.style.backgroundColor="rgba(0, 0, 0, 0.5)",n.style.zIndex="1000",n.style.display="flex",n.style.justifyContent="center",n.style.alignItems="center",n.style.cursor="pointer";const i=document.createElement("div");i.style.backgroundColor="white",i.style.borderRadius="6px",i.style.padding="20px",i.style.width="500px",i.style.maxWidth="90%";const o=document.createElement("div");o.style.borderBottom="1px solid #eee",o.style.paddingBottom="10px",o.style.marginBottom="15px",o.style.display="flex",o.style.justifyContent="space-between",o.style.alignItems="center";const a=document.createElement("h3");a.style.margin="0",a.textContent=e;const r=document.createElement("button");r.textContent="×",r.style.background="none",r.style.border="none",r.style.fontSize="24px",r.style.cursor="pointer",r.style.padding="0",r.style.lineHeight="1",r.onclick=()=>{document.body.removeChild(n)},o.appendChild(a),o.appendChild(r);const l=document.createElement("div");l.style.marginBottom="20px","string"==typeof t?l.innerHTML=t:l.appendChild(t);const c=document.createElement("div");c.style.borderTop="1px solid #eee",c.style.paddingTop="15px",c.style.display="flex",c.style.justifyContent="flex-end",c.style.gap="10px";const d=document.createElement("button");d.textContent="Cancel",d.style.padding="8px 16px",d.style.backgroundColor="#6c757d",d.style.color="white",d.style.border="none",d.style.borderRadius="4px",d.style.cursor="pointer",d.onclick=()=>{document.body.removeChild(n)};const h=document.createElement("button");h.textContent="Save",h.style.padding="8px 16px",h.style.backgroundColor="#28a745",h.style.color="white",h.style.border="none",h.style.borderRadius="4px",h.style.cursor="pointer",h.onclick=()=>{"function"==typeof s&&s(),document.body.removeChild(n)},c.appendChild(d),c.appendChild(h),i.appendChild(o),i.appendChild(l),i.appendChild(c),n.appendChild(i),n.addEventListener("click",(e=>{e.target===n&&document.body.removeChild(n)})),document.body.appendChild(n)}showSprintDataSummary(e){const t=document.createElement("div");t.style.margin="10px",t.style.padding="15px",t.style.backgroundColor="#f8f9fa",t.style.borderRadius="6px",t.style.border="1px solid #dee2e6";const s=document.createElement("h3");s.textContent="Current Sprint Data",s.style.margin="0 0 15px 0",s.style.fontSize="16px",t.appendChild(s);const createDataRow=(e,t)=>{const s=document.createElement("div");s.style.display="flex",s.style.justifyContent="space-between",s.style.marginBottom="8px",s.style.padding="5px 0",s.style.borderBottom="1px solid #eee";const n=document.createElement("div");n.textContent=e,n.style.fontWeight="bold";const i=document.createElement("div");return i.textContent=t,s.appendChild(n),s.appendChild(i),s},{totalTickets:n=0,closedTickets:i=0,totalHours:o=0,closedHours:a=0,extraHoursClosed:r=0,timestamp:l}=this.sprintState;if(t.appendChild(createDataRow("Total Tickets:",n)),t.appendChild(createDataRow("Closed Tickets:",i)),t.appendChild(createDataRow("Total Hours:",o+"h")),t.appendChild(createDataRow("Closed Hours:",a+"h")),r>0&&(t.appendChild(createDataRow("Extra Hours Closed:",r+"h")),t.appendChild(createDataRow("Total Hours Closed:",a+r+"h"))),l){const e=new Date(l),s=`${e.toLocaleDateString()} ${e.toLocaleTimeString()}`;t.appendChild(createDataRow("Captured On:",s))}e.appendChild(t)}saveSprintState(){try{localStorage.setItem("gitLabHelperSprintState",JSON.stringify(this.sprintState))}catch(e){console.error("Failed to save sprint state to localStorage:",e),this.notification.error("Failed to save sprint state")}}loadSprintState(){try{const e=localStorage.getItem("gitLabHelperSprintState");e&&(this.sprintState=JSON.parse(e))}catch(e){console.error("Failed to load sprint state from localStorage:",e),this.notification.error("Failed to load sprint state")}}calculateUserPerformance(){const e={};try{document.querySelectorAll(".board-list").forEach((t=>{let s="";try{if(t.__vue__&&t.__vue__.$children&&t.__vue__.$children.length>0){const e=t.__vue__.$children.find((e=>e.$props&&e.$props.list&&e.$props.list.title));e&&e.$props.list.title&&(s=e.$props.list.title.toLowerCase())}if(!s){const e=t.querySelector(".board-title-text");e&&(s=e.textContent.trim().toLowerCase())}}catch(e){console.error("Error getting board title:",e);const n=t.querySelector(".board-title-text");n&&(s=n.textContent.trim().toLowerCase())}const n=s.includes("done")||s.includes("closed")||s.includes("complete")||s.includes("finished");t.querySelectorAll(".board-card").forEach((t=>{try{if(t.__vue__&&t.__vue__.$children){const s=t.__vue__.$children.find((e=>e.$props&&e.$props.item));if(s&&s.$props&&s.$props.item){const t=s.$props.item;let i=[];if(t.assignees&&t.assignees.nodes&&t.assignees.nodes.length?i=t.assignees.nodes:t.assignees&&t.assignees.length>0&&(i=t.assignees),0===i.length)return;const o=(t.timeEstimate||0)/i.length;i.forEach((t=>{const s=t.name||t.username||"Unknown";e[s]||(e[s]={totalTickets:0,closedTickets:0,totalHours:0,closedHours:0}),e[s].totalTickets++,e[s].totalHours+=o/3600,n&&(e[s].closedTickets++,e[s].closedHours+=o/3600)}))}}}catch(e){console.error("Error processing card for user performance:",e)}}))})),Object.keys(e).forEach((t=>{e[t].totalHours=Math.round(10*e[t].totalHours)/10,e[t].closedHours=Math.round(10*e[t].closedHours)/10}))}catch(e){console.error("Error calculating user performance:",e)}return e}archiveCompletedSprint(){try{if(!this.sprintState.endSprint||!this.sprintState.timestamp)return;const e={id:this.sprintState.id||Date.now().toString(),milestone:this.sprintState.currentMilestone,totalTickets:this.sprintState.totalTickets,closedTickets:this.sprintState.closedTickets,totalHours:this.sprintState.totalHours,closedHours:this.sprintState.closedHours,extraHoursClosed:this.sprintState.extraHoursClosed||0,userPerformance:this.sprintState.userPerformance||{},userDistributions:this.sprintState.userDistributions||{},timestamp:this.sprintState.timestamp,completedAt:(new Date).toISOString()};this.sprintHistory.unshift(e),this.sprintHistory.length>10&&(this.sprintHistory=this.sprintHistory.slice(0,10)),this.saveSprintHistory()}catch(e){console.error("Error archiving sprint:",e)}}saveSprintHistory(){try{localStorage.setItem("gitLabHelperSprintHistory",JSON.stringify(this.sprintHistory))}catch(e){console.error("Failed to save sprint history to localStorage:",e),this.notification.error("Failed to save sprint history")}}loadSprintHistory(){try{const e=localStorage.getItem("gitLabHelperSprintHistory");e&&(this.sprintHistory=JSON.parse(e))}catch(e){console.error("Failed to load sprint history from localStorage:",e),this.notification.error("Failed to load sprint history"),this.sprintHistory=[]}}renderSprintHistory(e){if(!this.sprintHistory||0===this.sprintHistory.length)return;const t=document.createElement("div");t.style.margin="10px",t.style.padding="15px",t.style.backgroundColor="#f8f9fa",t.style.borderRadius="6px",t.style.border="1px solid #dee2e6";const s=document.createElement("h3");s.textContent="Sprint History",s.style.margin="0 0 15px 0",s.style.fontSize="16px",t.appendChild(s);const n=document.createElement("table");n.style.width="100%",n.style.borderCollapse="collapse";const i=document.createElement("thead"),o=document.createElement("tr");["Sprint","Tickets","Hours","Completed"].forEach((e=>{const t=document.createElement("th");t.textContent=e,t.style.padding="8px",t.style.textAlign="left",t.style.borderBottom="2px solid #dee2e6",o.appendChild(t)})),i.appendChild(o),n.appendChild(i);const a=document.createElement("tbody");this.sprintHistory.forEach((e=>{const t=document.createElement("tr");t.style.borderBottom="1px solid #dee2e6",t.style.transition="background-color 0.2s",t.style.cursor="pointer",t.addEventListener("mouseenter",(()=>{t.style.backgroundColor="#f1f1f1"})),t.addEventListener("mouseleave",(()=>{t.style.backgroundColor=""})),t.addEventListener("click",(()=>{this.showSprintDetails(e)}));const s=document.createElement("td");s.style.padding="8px",s.textContent=e.milestone||"Unnamed Sprint",s.style.color="#1f75cb",s.style.fontWeight="bold",t.appendChild(s);const n=document.createElement("td");n.style.padding="8px",n.textContent=`${e.closedTickets}/${e.totalTickets}`,t.appendChild(n);const i=(e.closedHours||0)+(e.extraHoursClosed||0),o=document.createElement("td");o.style.padding="8px",o.textContent=`${i}/${e.totalHours}h`,t.appendChild(o);const r=document.createElement("td");r.style.padding="8px";const l=new Date(e.completedAt||e.timestamp);r.textContent=l.toLocaleDateString(),t.appendChild(r),a.appendChild(t)})),n.appendChild(a),t.appendChild(n),e.appendChild(t)}showSprintDetails(e){const t=(e.closedHours||0)+(e.extraHoursClosed||0),s=e.totalTickets>0?e.closedTickets/e.totalTickets*100:0,n=e.totalHours>0?t/e.totalHours*100:0,i=new Date(e.timestamp),o=new Date(e.completedAt||e.timestamp);let a=`\n        <div style="padding: 10px;">\n            <h3 style="margin-top: 0; color: #1f75cb;">${e.milestone||"Unnamed Sprint"}</h3>\n            \n            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin-bottom: 20px;">\n                <div style="padding: 10px; background-color: #e9ecef; border-radius: 4px;">\n                    <h4 style="margin-top: 0; font-size: 14px;">Tickets</h4>\n                    <div style="font-size: 24px; font-weight: bold; margin-bottom: 5px;">\n                        ${e.closedTickets}/${e.totalTickets}\n                    </div>\n                    <div style="font-size: 14px; color: #6c757d;">\n                        ${s.toFixed(2)}% completed\n                    </div>\n                </div>\n                \n                <div style="padding: 10px; background-color: #e9ecef; border-radius: 4px;">\n                    <h4 style="margin-top: 0; font-size: 14px;">Hours</h4>\n                    <div style="font-size: 24px; font-weight: bold; margin-bottom: 5px;">\n                        ${t}/${e.totalHours}h\n                    </div>\n                    <div style="font-size: 14px; color: #6c757d;">\n                        ${n.toFixed(2)}% completed\n                    </div>\n                </div>\n            </div>\n            \n            <div style="margin-bottom: 20px;">\n                <h4 style="margin-bottom: 10px; font-size: 16px;">Sprint Details</h4>\n                <table style="width: 100%; border-collapse: collapse;">\n                    <tr style="border-bottom: 1px solid #dee2e6;">\n                        <td style="padding: 8px; font-weight: bold;">Started:</td>\n                        <td style="padding: 8px;">${i.toLocaleString()}</td>\n                    </tr>\n                    <tr style="border-bottom: 1px solid #dee2e6;">\n                        <td style="padding: 8px; font-weight: bold;">Completed:</td>\n                        <td style="padding: 8px;">${o.toLocaleString()}</td>\n                    </tr>\n                    <tr style="border-bottom: 1px solid #dee2e6;">\n                        <td style="padding: 8px; font-weight: bold;">Carried Over Hours:</td>\n                        <td style="padding: 8px;">${e.extraHoursClosed||0}h</td>\n                    </tr>\n                </table>\n            </div>\n    `;if(e.userPerformance&&Object.keys(e.userPerformance).length>0){a+='\n            <div>\n                <h4 style="margin-bottom: 10px; font-size: 16px;">User Performance</h4>\n                <table style="width: 100%; border-collapse: collapse;">\n                    <thead>\n                        <tr style="background-color: #f8f9fa; border-bottom: 2px solid #dee2e6;">\n                            <th style="padding: 8px; text-align: left;">User</th>\n                            <th style="padding: 8px; text-align: center;">Tickets</th>\n                            <th style="padding: 8px; text-align: center;">Completion</th>\n                            <th style="padding: 8px; text-align: right;">Hours</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n        ';Object.entries(e.userPerformance).sort((([,e],[,t])=>t.closedHours-e.closedHours)).forEach((([e,t])=>{const s=t.totalTickets>0?(t.closedTickets/t.totalTickets*100).toFixed(0):0;a+=`\n                <tr style="border-bottom: 1px solid #dee2e6;">\n                    <td style="padding: 8px;">${e}</td>\n                    <td style="padding: 8px; text-align: center;">${t.closedTickets}/${t.totalTickets}</td>\n                    <td style="padding: 8px; text-align: center;">${s}%</td>\n                    <td style="padding: 8px; text-align: right;">${t.closedHours}/${t.totalHours}h</td>\n                </tr>\n            `})),a+="\n                    </tbody>\n                </table>\n            </div>\n        "}a+="</div>",this.showModal(`Sprint Details: ${e.milestone||"Unnamed Sprint"}`,a)}},e.BulkCommentsView=class BulkCommentsView{constructor(uiManager){this.uiManager=uiManager,this.selectedIssues=[],this.commandShortcuts=null,this.isLoading=!1,this.initializedShortcuts=new Set,this.commentInput=null,this.gitlabApi=e.gitlabApi||uiManager&&uiManager.gitlabApi,this.notification=new Notification({position:"bottom-right",duration:3e3}),this.fetchedMembers=[],uiManager&&uiManager.labelManager?this.labelManager=uiManager.labelManager:"function"==typeof LabelManager?this.labelManager=new LabelManager({gitlabApi:this.gitlabApi,onLabelsLoaded:e=>{this.commandShortcuts&&this.addLabelShortcut()}}):this.labelManager={filteredLabels:[],fetchAllLabels:()=>Promise.resolve([])},this.selectionDisplay=new SelectionDisplay({selectedIssues:this.selectedIssues,onRemoveIssue:e=>this.onRemoveIssue(e)})}updateAssignShortcut(t){if(this.commandShortcuts&&t&&!(t.length<=3))try{let s=null;this.commandShortcuts.shortcuts&&this.commandShortcuts.shortcuts.assign&&this.commandShortcuts.shortcuts.assign.dropdown&&(s=this.commandShortcuts.shortcuts.assign.dropdown.value),this.commandShortcuts.shortcuts&&this.commandShortcuts.shortcuts.assign&&this.commandShortcuts.removeShortcut("assign"),this.commandShortcuts.addCustomShortcut({type:"assign",label:"/assign",items:t,toggleMode:!0,onSelect:(t,s)=>{if(!t||"separator"===t||"separator2"===t)return;if("manage"===t){if(this.assigneeManager&&"function"==typeof this.assigneeManager.openAssigneeManager)this.assigneeManager.openAssigneeManager();else if(e.assigneeManager&&"function"==typeof e.assigneeManager.openAssigneeManager)e.assigneeManager.openAssigneeManager();else{if("function"!=typeof openAssigneeManager)return console.error("No assignee manager found"),void this.notification.error("Assignee manager not available");openAssigneeManager()}return void setTimeout((()=>{this.addAssignShortcut()}),500)}if("custom"===t){const e=prompt("Enter GitLab username (without @):");if(!e)return;t=e}const n=this.commentInput||document.getElementById("issue-comment-input");if(!n)return void console.error("No textarea found for inserting assign command");let i;"remove"===s?(i="/unassign ",i+="none"===t?"@none":"@me"===t?"@me":t.startsWith("@")?t:`@${t}`):(i="/assign ",i+="none"===t?"@none":"@me"===t?"@me":t.startsWith("@")?t:`@${t}`),this.insertTextAtCursor(n,i),"remove"===s?"none"===t?this.notification.info("Issue will be unassigned from everyone"):"@me"===t?this.notification.info("Issue will be unassigned from you"):this.notification.info(`Issue will be unassigned from ${t.replace("@","")}`):"none"===t?this.notification.info("Issue will be unassigned"):"@me"===t?this.notification.info("Issue will be assigned to you"):this.notification.info(`Issue will be assigned to ${t.replace("@","")}`)}}),s&&this.commandShortcuts.shortcuts.assign&&this.commandShortcuts.shortcuts.assign.dropdown&&(this.commandShortcuts.shortcuts.assign.dropdown.value=s)}catch(e){console.error("Error updating assign shortcut:",e)}}initializeAllShortcuts(){if(this.commandShortcuts)try{const e=new Set(Object.keys(this.commandShortcuts.shortcuts||{}));e.has("estimate")||(this.commandShortcuts.initializeEstimateShortcut(),e.add("estimate")),e.has("label")||(this.addLabelShortcut([{value:"",label:"Loading labels..."}]),e.add("label")),e.has("milestone")||(this.addMilestoneShortcut(),e.add("milestone")),e.has("assign")||(this.addAssignShortcut(),e.add("assign"))}catch(e){console.error("Error initializing shortcuts:",e),this.notification.error("Error initializing shortcuts")}}addMilestoneShortcut(){if(this.commandShortcuts)try{this.commandShortcuts.addCustomShortcut({type:"milestone",label:"/milestone",items:[{value:"",label:"Set Milestone"},{value:"%current",label:"Current Sprint"},{value:"%next",label:"Next Sprint"},{value:"%upcoming",label:"Upcoming"},{value:"none",label:"Remove Milestone"},{value:"custom",label:"Custom..."}],onSelect:e=>{if(!e)return;if("custom"===e){const t=prompt("Enter milestone name:");if(!t)return;e=t}if(!this.commentInput)return void console.warn("Comment input not available");let t="/milestone ";"none"===e?t+='%""':e.startsWith("%")?t+=e:t+=`%"${e}"`,this.insertTextAtCursor(this.commentInput,t),this.notification.info(`Milestone set to ${"none"===e?"none":e}`)}})}catch(e){console.error("Error adding milestone shortcut:",e)}}addAssignShortcut(){if(!this.commandShortcuts)return;let t=[{value:"",label:"Assign to..."}],s=null;try{"function"==typeof GM_getValue&&(s=GM_getValue("gitLabHelperAssigneeWhitelist",[]))}catch(e){console.error("Error accessing GM_getValue:",e)}if(Array.isArray(s)&&s.length>0){const e=s.map((e=>({value:e.username,label:e.name||e.username})));t=t.concat(e)}else{let s=[];if(this.assigneeManager&&"function"==typeof this.assigneeManager.getAssigneeWhitelist)try{s=this.assigneeManager.getAssigneeWhitelist()}catch(e){console.error("Error getting assignees from this.assigneeManager:",e)}if((!s||!s.length)&&e.assigneeManager&&"function"==typeof e.assigneeManager.getAssigneeWhitelist)try{s=e.assigneeManager.getAssigneeWhitelist()}catch(e){console.error("Error getting assignees from window.assigneeManager:",e)}if(!(s&&s.length||"function"!=typeof getAssigneeWhitelist))try{s=getAssigneeWhitelist()}catch(e){console.error("Error getting assignees from imported getAssigneeWhitelist:",e)}if(!(s&&s.length||"function"!=typeof e.getAssigneeWhitelist))try{s=e.getAssigneeWhitelist()}catch(e){console.error("Error getting assignees from window.getAssigneeWhitelist:",e)}if(!s||!s.length)try{const e=localStorage.getItem("gitLabHelperAssigneeWhitelist");e&&(s=JSON.parse(e))}catch(e){console.error("Error getting assignees from localStorage:",e)}if(Array.isArray(s)&&s.length>0){const e=s.map((e=>({value:e.username,label:e.name||e.username})));t=t.concat(e)}}this.updateAssignShortcut(t),setTimeout((()=>{this.fetchGroupMembers().then((e=>{if(e&&e.length>0){const s=[...t];s.push({value:"separator2",label:"────── Group Members ──────"});const n=t.filter((e=>e.value&&!["separator","separator2","custom","manage","@me","none",""].includes(e.value))).map((e=>e.value.toLowerCase())),i=e.filter((e=>!n.includes(e.username.toLowerCase()))).map((e=>({value:e.username,label:e.name||e.username})));i.length>0&&(s.push(...i),this.updateAssignShortcut(s))}})).catch((e=>{console.error("Error fetching group members:",e)}))}),100),t.push({value:"separator",label:"────── Other ──────"}),t.push({value:"@me",label:"Myself"}),t.push({value:"none",label:"Unassign"})}async fetchGroupMembers(){try{if(this.gitlabApi||(this.gitlabApi=e.gitlabApi),!this.gitlabApi)throw new Error("GitLab API not available");const t=getPathFromUrl();if(!t)throw new Error("Could not determine project/group path");let s;if("project"===t.type)s=await this.gitlabApi.callGitLabApiWithCache(`projects/${t.encodedPath}/members/all`,{params:{per_page:100,all_available:!0}});else{if("group"!==t.type)throw new Error("Unsupported path type: "+t.type);s=await this.gitlabApi.callGitLabApiWithCache(`groups/${t.encodedPath}/members/all`,{params:{per_page:100,all_available:!0}})}return Array.isArray(s)?(this.fetchedMembers=s.map((e=>({id:e.id,name:e.name,username:e.username,avatar_url:e.avatar_url}))),this.fetchedMembers):(console.warn("API did not return an array of members"),[])}catch(e){return console.error("Error fetching group members:",e),[]}}setSelectedIssues(e){this.selectedIssues=Array.isArray(e)?[...e]:[],this.selectionDisplay&&this.selectionDisplay.setSelectedIssues(this.selectedIssues)}onRemoveIssue(t){if(this.selectedIssues.length>t){this.selectedIssues[t];this.selectedIssues.splice(t,1),this.uiManager&&this.uiManager.issueSelector?this.uiManager.issueSelector.setSelectedIssues([...this.selectedIssues]):e.uiManager&&e.uiManager.issueSelector&&e.uiManager.issueSelector.setSelectedIssues([...this.selectedIssues]);const s=document.getElementById("comment-status");if(s){const e=this.selectedIssues.length;e>0?(s.textContent=`${e} issue${1!==e?"s":""} selected.`,s.style.color="green"):(s.textContent='No issues selected. Click "Select Issues" to choose issues.',s.style.color="#666")}this.selectionDisplay&&this.selectionDisplay.setSelectedIssues([...this.selectedIssues])}}createActionButtons(e){const t=document.createElement("div");t.style.display="flex",t.style.gap="8px",t.style.marginBottom="8px";const s=document.createElement("button");s.id="select-issues-button",s.textContent="Select",s.style.padding="8px 12px",s.style.backgroundColor="#6c757d",s.style.color="white",s.style.border="none",s.style.borderRadius="4px",s.style.cursor="pointer",s.style.fontSize="14px",s.style.transition="background-color 0.2s ease",s.style.display="flex",s.style.alignItems="center",s.style.justifyContent="center",s.style.minWidth="80px",s.addEventListener("mouseenter",(()=>{s.style.backgroundColor="true"===s.dataset.active?"#218838":"#5a6268"})),s.addEventListener("mouseleave",(()=>{s.style.backgroundColor="true"===s.dataset.active?"#28a745":"#6c757d"})),s.onclick=()=>{if(this.uiManager&&this.uiManager.issueSelector)this.uiManager.issueSelector.isSelectingIssue?(this.uiManager.issueSelector.exitSelectionMode(),s.dataset.active="false",s.style.backgroundColor="#6c757d",s.textContent="Select"):(this.uiManager.issueSelector.setSelectedIssues([...this.selectedIssues]),this.uiManager.issueSelector.startSelection(),s.dataset.active="true",s.style.backgroundColor="#28a745",s.textContent="Done");else{console.error("Issue selector not initialized");const e=document.getElementById("comment-status");e&&(e.textContent="Error: Issue selector not initialized.",e.style.color="#dc3545")}},t.appendChild(s);const n=document.createElement("button");n.textContent="Send",n.style.padding="8px 12px",n.style.backgroundColor="#1f75cb",n.style.color="white",n.style.border="none",n.style.borderRadius="4px",n.style.cursor="pointer",n.style.fontSize="14px",n.style.transition="background-color 0.2s ease",n.style.display="flex",n.style.alignItems="center",n.style.justifyContent="center",n.style.flex="1",n.style.minWidth="80px",n.addEventListener("mouseenter",(()=>{n.style.backgroundColor="#1a63ac"})),n.addEventListener("mouseleave",(()=>{n.style.backgroundColor="#1f75cb"})),n.onclick=()=>this.submitComments(),t.appendChild(n),e.appendChild(t)}clearSelectedIssues(){this.selectedIssues.splice(0,this.selectedIssues.length),this.selectedIssues=[],this.selectionDisplay&&"function"==typeof this.selectionDisplay.setSelectedIssues?this.selectionDisplay.setSelectedIssues([]):(console.warn("selectionDisplay not available or missing setSelectedIssues method"),this.uiManager&&this.uiManager.bulkCommentsView&&this.uiManager.bulkCommentsView.selectionDisplay&&this.uiManager.bulkCommentsView.selectionDisplay.setSelectedIssues([]));const e=document.getElementById("comment-status");e&&(e.textContent="Selection cleared.",e.style.color="#666"),this.notification&&this.notification.info("Selection cleared"),this.uiManager&&this.uiManager.issueSelector&&this.uiManager.issueSelector.setSelectedIssues([]),"function"==typeof this.$forceUpdate&&this.$forceUpdate()}render(){const e=document.getElementById("bulk-comments-content");e&&(e.innerHTML="",this.addCommentSection(e),this.commandShortcuts?(this.initializeAllShortcuts(),this.isLoading=!0,this.labelManager&&"function"==typeof this.labelManager.fetchAllLabels?this.labelManager.fetchAllLabels().then((e=>{this.addLabelShortcut(),this.isLoading=!1,this.hideLoadingState(),this.uiManager&&this.uiManager.removeLoadingScreen&&this.uiManager.removeLoadingScreen("bulkcomments-tab")})).catch((e=>{console.error("Error loading labels:",e),this.addLabelShortcut(this.getFallbackLabels()),this.isLoading=!1,this.hideLoadingState(),this.uiManager&&this.uiManager.removeLoadingScreen&&this.uiManager.removeLoadingScreen("bulkcomments-tab")})):(console.warn("Label manager not available, using fallback labels"),this.addLabelShortcut(this.getFallbackLabels()),this.isLoading=!1,this.hideLoadingState(),this.uiManager&&this.uiManager.removeLoadingScreen&&this.uiManager.removeLoadingScreen("bulkcomments-tab"))):(console.error("Command shortcuts not initialized"),this.isLoading=!1,this.hideLoadingState(),this.uiManager&&this.uiManager.removeLoadingScreen&&this.uiManager.removeLoadingScreen("bulkcomments-tab")))}addCommentSection(e){const t=document.createElement("div");t.classList.add("api-section"),t.style.backgroundColor="#f5f5f5",t.style.borderRadius="8px",t.style.border="1px solid #e0e0e0",this.selectionDisplay.createSelectionContainer(t),this.createCommentInput(t),this.createActionButtons(t),this.createStatusElements(document.getElementById("assignee-time-summary")),this.isLoading=!0,this.showLoadingState();try{this.commentInput&&this.commandShortcuts?(this.initializeAllShortcuts(),this.addLabelShortcut([{value:"",label:"Loading labels..."}]),this.labelManager&&"function"==typeof this.labelManager.fetchAllLabels?this.labelManager.fetchAllLabels().then((e=>{this.addLabelShortcut(),this.isLoading=!1,this.hideLoadingState()})).catch((e=>{console.error("Error loading labels:",e),this.addLabelShortcut(this.getFallbackLabels()),this.isLoading=!1,this.hideLoadingState()})):(console.warn("Label manager not available, using fallback labels"),this.addLabelShortcut(this.getFallbackLabels()),this.isLoading=!1,this.hideLoadingState())):(console.error("Textarea or command shortcuts not initialized"),this.isLoading=!1,this.hideLoadingState())}catch(e){console.error("Error initializing shortcuts:",e),this.isLoading=!1,this.hideLoadingState()}e.appendChild(t)}getFallbackLabels(){return[{value:"",label:"Add Label"},{value:"bug",label:"Bug"},{value:"feature",label:"Feature"},{value:"enhancement",label:"Enhancement"},{value:"documentation",label:"Documentation"},{value:"custom",label:"Custom..."}]}createCommentInput(e){const t=document.createElement("div");t.id="shortcuts-wrapper",t.style.width="100%",t.style.marginBottom="15px",t.style.minHeight="120px",t.style.position="relative";const s=document.createElement("div");s.style.opacity="0.4",s.style.pointerEvents="none",["Estimate","Label","Milestone","Assign"].forEach((e=>{const t=document.createElement("div");t.style.display="flex",t.style.alignItems="center",t.style.marginBottom="8px",t.style.height="36px",t.style.border="1px solid #ddd",t.style.borderRadius="4px",t.style.padding="6px 10px";const n=document.createElement("div");n.textContent=`/${e.toLowerCase()}`,n.style.fontWeight="bold",n.style.minWidth="100px";const i=document.createElement("div");i.style.flex="1",i.style.height="24px",i.style.backgroundColor="#eee",i.style.marginLeft="10px",i.style.borderRadius="4px",t.appendChild(n),t.appendChild(i),s.appendChild(t)})),t.appendChild(s),e.appendChild(t);const n=document.createElement("textarea");n.id="issue-comment-input",n.placeholder="Enter your comment here...",n.style.width="100%",n.style.padding="8px",n.style.marginBottom="12px",n.style.borderRadius="4px",n.style.border="1px solid #ccc",n.style.minHeight="60px",n.style.fontSize="14px",n.style.transition="border-color 0.2s ease",n.style.resize="vertical",n.style.boxSizing="border-box",n.addEventListener("focus",(()=>{n.style.borderColor="#1f75cb",n.style.outline="none",n.style.boxShadow="0 0 0 2px rgba(31, 117, 203, 0.2)"})),n.addEventListener("blur",(()=>{n.style.borderColor="#ccc",n.style.boxShadow="none"})),e.appendChild(n),this.commentInput=n;try{"function"==typeof CommandShortcut?(this.commandShortcuts=new CommandShortcut({targetElement:n,onShortcutInsert:(e,t)=>{}}),this.commandShortcuts.initialize(t),s.parentNode===t&&t.removeChild(s)):console.error("CommandShortcut class not available")}catch(e){console.error("Error initializing CommandShortcut:",e)}}insertTextAtCursor(e,t){if(!e)return;const s=e.value,n=e.selectionStart,i=e.selectionEnd;let o=t;n>0&&"\n"!==s.charAt(n-1)&&s.length>0&&(o="\n"+o),e.value=s.substring(0,n)+o+s.substring(i);const a=n+o.length;e.setSelectionRange(a,a),e.focus()}createStatusElements(e){const t=document.createElement("div");t.id="comment-progress-container",t.style.display="none",t.style.marginTop="15px",t.style.color="white";const s=document.createElement("div");s.id="comment-progress-label",s.textContent="Submitting comments...",s.style.fontSize="13px",s.style.marginBottom="8px",s.style.textAlign="center",s.style.fontWeight="bold",t.appendChild(s);const n=document.createElement("div");n.style.height="12px",n.style.backgroundColor="black",n.style.overflow="hidden",n.style.boxShadow="inset 0 1px 3px rgba(255,255,255,0.1)";const i=document.createElement("div");i.id="comment-progress-bar",i.style.height="100%",i.style.width="0%",i.style.backgroundColor="#00ff2ac7",i.style.transition="width 0.3s ease",n.appendChild(i),t.appendChild(n),e.appendChild(t)}showLoadingState(){this.commandShortcuts&&!this.commandShortcuts.shortcuts?.label&&this.addLabelShortcut([{value:"",label:"Loading labels..."}]),this.commandShortcuts&&!this.commandShortcuts.shortcuts?.milestone&&this.addMilestoneShortcut(),this.commandShortcuts&&!this.commandShortcuts.shortcuts?.assign&&this.addAssignShortcut(),this.commentInput&&(this.commentInput.disabled=!0,this.commentInput.style.backgroundColor="#f9f9f9")}hideLoadingState(){const e=document.getElementById("comment-status");if(e){const t=this.selectedIssues.length;t>0?(e.textContent=`${t} issue${1!==t?"s":""} selected.`,e.style.color="#28a745",e.style.backgroundColor="#f8f9fa",e.style.border="1px solid #e9ecef"):(e.textContent="Select issues to add comments.",e.style.color="#666",e.style.backgroundColor="#f8f9fa",e.style.border="1px solid #e9ecef")}const t=document.getElementById("issue-comment-input");t&&(t.disabled=!1,t.style.opacity="1",t.style.cursor="text");document.querySelectorAll(".api-section button").forEach((e=>{e.disabled=!1,e.style.opacity="1",e.style.cursor="pointer"}))}async submitComments(){if(!this.commentInput)return void this.notification.error("Comment input not found");const t=document.getElementById("comment-progress-container"),s=document.getElementById("comment-progress-bar"),n=document.getElementById("comment-progress-label");if(0===this.selectedIssues.length)return void this.notification.error("No issues selected");const i=this.commentInput.value.trim();if(!i)return void this.notification.error("Comment cannot be empty");let o;if(this.uiManager&&this.uiManager.addLoadingScreen){const t=document.getElementById("assignee-time-summary");if(t){const s=e.getComputedStyle(t).position;"static"===s&&(t.style.position="relative",t.dataset.originalPosition=s),o=this.uiManager.addLoadingScreen(t,"comment-submit",`Sending comments to ${this.selectedIssues.length} issues...`)}}t&&(t.style.display="block",t.style.position="absolute",t.style.left=0,t.style.right=0,t.style.bottom=0,t.style.zIndex=102),s&&(s.style.width="0%");const a=Array.from(document.querySelectorAll("button")).find((e=>e.textContent&&e.textContent.includes("Send")));a&&(a.disabled=!0,a.style.opacity="0.7",a.style.cursor="not-allowed");let r=0,l=0;const gitlabApi=this.gitlabApi||e.gitlabApi||this.uiManager&&this.uiManager.gitlabApi;if(!gitlabApi)return this.notification.error("GitLab API not available"),a&&(a.disabled=!1,a.style.opacity="1",a.style.cursor="pointer"),t&&(t.style.display="none"),void(this.uiManager&&this.uiManager.removeLoadingScreen&&o&&this.uiManager.removeLoadingScreen("comment-submit"));for(let e=0;e<this.selectedIssues.length;e++){const t=this.selectedIssues[e];if(!t){l++;continue}const o=Math.round(e/this.selectedIssues.length*100);s&&(s.style.width=`${o}%`),n&&(n.textContent=`Processing ${e+1} of ${this.selectedIssues.length} issues...`),this.uiManager&&this.uiManager.updateLoadingMessage&&this.uiManager.updateLoadingMessage("comment-submit",`Sending comment to issue #${t.iid||e+1} (${e+1}/${this.selectedIssues.length})...`);try{await gitlabApi.addComment(t,i),r++}catch(e){console.error(`Failed to add comment to issue #${t.iid}:`,e),l++}}if(s&&(s.style.width="100%"),a&&(a.disabled=!1,a.style.opacity="1",a.style.cursor="pointer"),r===this.selectedIssues.length){this.notification.success(`Added comment to ${r} issues`),this.commentInput&&(this.commentInput.value="");let e=this;this.refreshBoard().then((function(){t.style.display="none",e.clearSelectedIssues(),e.uiManager.issueSelector.exitSelectionMode(),e.uiManager.removeLoadingScreen("comment-submit")}))}else r>0?(this.notification.warning(`Added comment to ${r} issues, failed for ${l}`),this.refreshBoard().then((function(){t.style.display="none",that.clearSelectedIssues(),that.uiManager.issueSelector.exitSelectionMode(),that.uiManager.removeLoadingScreen("comment-submit")}))):this.notification.error(`Failed to add comments to all ${l} issues`),s&&(s.style.backgroundColor=r>0?"#ff9900":"#dc3545")}addLabelShortcut(e){if(this.commandShortcuts)try{let t,s=null;if(this.commandShortcuts.shortcuts&&this.commandShortcuts.shortcuts.label&&this.commandShortcuts.shortcuts.label.dropdown&&(s=this.commandShortcuts.shortcuts.label.dropdown.value),e)t=e;else if(this.labelManager&&this.labelManager.filteredLabels&&this.labelManager.filteredLabels.length){t=[{value:"",label:"Add Label"}];const e=this.labelManager.filteredLabels.map((e=>({value:e.name,label:e.name})));t=t.concat(e),t.push({value:"custom",label:"Custom..."})}else try{const e=getLabelWhitelist();if(e&&e.length>0){t=[{value:"",label:"Add Label"}];const s=e.map((e=>({value:e,label:e})));t=t.concat(s),t.push({value:"custom",label:"Custom..."})}else t=this.getFallbackLabels()}catch(e){console.error("Error getting label whitelist:",e),t=this.getFallbackLabels()}this.commandShortcuts.shortcuts&&this.commandShortcuts.shortcuts.label&&this.commandShortcuts.removeShortcut("label"),this.commandShortcuts.addCustomShortcut({type:"label",label:"/label",items:t,toggleMode:!0,onSelect:(e,t)=>{if(!e)return;if("custom"===e){const t=prompt("Enter custom label name:");if(!t)return;e=t}const s=document.getElementById("issue-comment-input");if(!s)return;let n;n="remove"===t?`/unlabel ~"${e}"`:`/label ~"${e}"`,this.insertTextAtCursor(s,n),"remove"===t?this.notification.info(`Label removal command added: ${e}`):this.notification.info(`Label added: ${e}`)}}),s&&this.commandShortcuts.shortcuts.label&&this.commandShortcuts.shortcuts.label.dropdown&&(this.commandShortcuts.shortcuts.label.dropdown.value=s)}catch(e){console.error("Error adding label shortcut:",e)}}async refreshBoard(){try{const t=document.querySelectorAll(".board-list-component"),s=[];for(const e of t)if(e.__vue__&&e.__vue__.$apollo&&e.__vue__.$apollo.queries.currentList){const t=e.__vue__.$apollo.queries.currentList.refetch();s.push(t)}return await Promise.all(s),e.uiManager&&e.uiManager.issueSelector&&e.uiManager.issueSelector.applyOverflowFixes(),"function"==typeof e.updateSummary&&e.updateSummary(!0),!0}catch(e){return console.error("Error refreshing boards:",e),!1}}},e.StatsView=class StatsView{constructor(uiManager){this.uiManager=uiManager,this.notification=null;try{"function"==typeof Notification&&(this.notification=new Notification({position:"bottom-right",duration:3e3}))}catch(e){console.error("Error initializing notification:",e)}}render(){const e=document.getElementById("stats-content");if(!e)return;e.innerHTML="";const t=document.createElement("div");t.style.display="flex",t.style.flexDirection="column",t.style.alignItems="center",t.style.justifyContent="center",t.style.height="100%",t.style.padding="40px 20px",t.style.textAlign="center";const s=document.createElement("div");s.innerHTML="🔍",s.style.fontSize="48px",s.style.marginBottom="20px";const n=document.createElement("h3");n.textContent="Statistics Coming Soon",n.style.marginBottom="15px",n.style.color="#1f75cb";const i=document.createElement("p");i.textContent="Detailed team and individual performance statistics will be available here soon.",i.style.color="#666",i.style.maxWidth="500px",t.appendChild(s),t.appendChild(n),t.appendChild(i),e.appendChild(t),this.uiManager&&this.uiManager.removeLoadingScreen&&this.uiManager.removeLoadingScreen("stats-tab")}},e.UIManager=class UIManager{constructor(){this.gitlabApi=e.gitlabApi,this.container=null,this.contentWrapper=null,this.headerDiv=null,this.header=null,this.recalculateBtn=null,this.collapseBtn=null,this.boardStats=null,this.initializeManagers(),this.tabManager=new TabManager(this),this.summaryView=new SummaryView(this),this.boardsView=new BoardsView(this),this.bulkCommentsView=new BulkCommentsView(this),this.sprintManagementView=new SprintManagementView(this),this.statsView=new StatsView(this),this.issueSelector=new IssueSelector({uiManager:this,onSelectionChange:e=>{this.bulkCommentsView&&this.bulkCommentsView.setSelectedIssues(e)}})}initialize(e=document.body){if(document.getElementById("assignee-time-summary"))return this.container=document.getElementById("assignee-time-summary"),this.contentWrapper=document.getElementById("assignee-time-summary-wrapper"),void(this.container.style.position="relative");this.container=document.createElement("div"),this.container.id="assignee-time-summary",this.container.style.position="fixed",this.container.style.bottom="15px",this.container.style.right="15px",this.container.style.backgroundColor="white",this.container.style.border="1px solid #ddd",this.container.style.borderRadius="4px",this.container.style.padding="10px",this.container.style.boxShadow="0 2px 4px rgba(0,0,0,0.1)",this.container.style.zIndex="100",this.container.style.maxHeight="80vh",this.container.style.overflow="hidden",this.container.style.fontSize="14px",this.container.style.width="400px",this.container.style.transition="height 0.3s ease-in-out",this.contentWrapper=document.createElement("div"),this.contentWrapper.id="assignee-time-summary-wrapper",this.contentWrapper.style.display="block",this.contentWrapper.style.maxHeight="70vh",this.contentWrapper.style.minHeight="350px",this.contentWrapper.style.overflowY="auto",this.contentWrapper.style.position="relative",this.createHeader(),this.createBoardStats(),this.tabManager.initialize(this.contentWrapper),this.ensureTabContentHeight(),this.container.appendChild(this.contentWrapper),e.appendChild(this.container),this.attachmentElement=e,this.container.addEventListener("click",(e=>{!this.issueSelector||!this.issueSelector.isSelectingIssue||e.target.classList.contains("card-selection-overlay")||e.target.classList.contains("selection-badge")||e.target.closest("#bulk-comments-content button")||e.target.closest("#issue-comment-input")||e.target.closest("#shortcuts-wrapper")||e.target.closest("#selected-issues-list")||e.target.closest("#selection-cancel-button")||this.issueSelector.exitSelectionMode()})),this.initializeKeyboardShortcuts();try{"true"===loadFromStorage("gitlabTimeSummaryCollapsed","false")&&(this.contentWrapper.style.display="none",this.collapseBtn&&(this.collapseBtn.textContent="▲"),this.container.style.height="auto")}catch(e){console.warn("Error loading collapsed state:",e)}}initializeManagers(){try{this.labelManager=new LabelManager({gitlabApi:this.gitlabApi,onLabelsLoaded:e=>{this.bulkCommentsView&&this.bulkCommentsView.addLabelShortcut&&this.bulkCommentsView.addLabelShortcut()}})}catch(e){console.error("Error initializing LabelManager:",e),this.labelManager={filteredLabels:[],fetchAllLabels:()=>Promise.resolve([]),isLabelInWhitelist:()=>!1}}try{this.assigneeManager=new AssigneeManager({gitlabApi:this.gitlabApi,onAssigneesChange:e=>{this.bulkCommentsView&&this.bulkCommentsView.addAssignShortcut&&this.bulkCommentsView.addAssignShortcut()}})}catch(e){console.error("Error initializing AssigneeManager:",e),this.assigneeManager={getAssigneeWhitelist:()=>[]}}try{this.milestoneManager=new MilestoneManager({gitlabApi:this.gitlabApi,onMilestonesLoaded:e=>{}})}catch(e){console.error("Error initializing MilestoneManager:",e),this.milestoneManager={milestones:[],fetchMilestones:()=>Promise.resolve([])}}}createHeader(){this.headerDiv=document.createElement("div"),this.headerDiv.style.display="flex",this.headerDiv.style.justifyContent="space-between",this.headerDiv.style.alignItems="center",this.headerDiv.style.marginBottom="5px",this.headerDiv.style.cursor="pointer",this.headerDiv.addEventListener("click",(e=>{e.target!==this.recalculateBtn&&e.target!==this.collapseBtn&&e.target!==this.settingsBtn&&this.toggleCollapse()})),this.header=document.createElement("h3"),this.header.id="assignee-time-summary-header",this.header.textContent="Summary",this.header.style.margin="0",this.header.style.fontSize="16px";const t=document.createElement("div");t.style.display="flex",t.style.gap="5px",this.recalculateBtn=document.createElement("button"),this.recalculateBtn.textContent="🔄",this.recalculateBtn.title="Recalculate",this.recalculateBtn.style.padding="3px 6px",this.recalculateBtn.style.fontSize="12px",this.recalculateBtn.style.backgroundColor="#1f75cb",this.recalculateBtn.style.color="white",this.recalculateBtn.style.border="none",this.recalculateBtn.style.borderRadius="3px",this.recalculateBtn.style.cursor="pointer",this.recalculateBtn.onclick=t=>{t.stopPropagation(),"function"==typeof e.updateSummary&&e.updateSummary(!0),this.recalculateBtn.textContent="✓",setTimeout((()=>{this.recalculateBtn.textContent="🔄"}),1e3)},this.settingsBtn=document.createElement("button"),this.settingsBtn.textContent="⚙️",this.settingsBtn.title="Settings",this.settingsBtn.style.padding="3px 6px",this.settingsBtn.style.fontSize="12px",this.settingsBtn.style.backgroundColor="#6c757d",this.settingsBtn.style.color="white",this.settingsBtn.style.border="none",this.settingsBtn.style.borderRadius="3px",this.settingsBtn.style.cursor="pointer",this.settingsBtn.onclick=e=>{e.stopPropagation(),this.openSettings()},this.collapseBtn=document.createElement("button"),this.collapseBtn.textContent="▼",this.collapseBtn.title="Collapse/Expand",this.collapseBtn.style.padding="3px 6px",this.collapseBtn.style.fontSize="12px",this.collapseBtn.style.backgroundColor="#777",this.collapseBtn.style.color="white",this.collapseBtn.style.border="none",this.collapseBtn.style.borderRadius="3px",this.collapseBtn.style.cursor="pointer",this.collapseBtn.onclick=e=>{e.stopPropagation(),this.toggleCollapse()},t.appendChild(this.recalculateBtn),t.appendChild(this.settingsBtn),t.appendChild(this.collapseBtn),this.headerDiv.appendChild(this.header),this.headerDiv.appendChild(t),this.container.appendChild(this.headerDiv)}createBoardStats(){const e=document.getElementById("board-stats-summary");e?this.boardStats=e:(this.boardStats=document.createElement("div"),this.boardStats.id="board-stats-summary",this.boardStats.style.fontSize="13px",this.boardStats.style.color="#555",this.boardStats.style.marginBottom="10px",this.boardStats.style.display="flex",this.boardStats.style.justifyContent="space-between",this.boardStats.textContent="Loading board statistics...",this.container.appendChild(this.boardStats))}updateBoardStats(e){if(!this.boardStats)return;const t=e?.totalCards||0,s=e?.closedCards||0;this.boardStats.innerHTML="";const n=document.createElement("div");n.style.display="flex",n.style.gap="8px";const i=document.createElement("span");i.textContent=`Total: ${t} cards`,n.appendChild(i);const o=document.createElement("div");o.textContent=`Closed: ${s} cards`,o.style.color="#28a745",this.boardStats.appendChild(n),this.boardStats.appendChild(o)}toggleCollapse(){if(this.contentWrapper&&this.collapseBtn)try{"none"===this.contentWrapper.style.display?(this.contentWrapper.style.display="block",this.collapseBtn.textContent="▼",this.container.style.height="",saveToStorage("gitlabTimeSummaryCollapsed","false")):(this.contentWrapper.style.display="none",this.collapseBtn.textContent="▲",this.container.style.height="auto",saveToStorage("gitlabTimeSummaryCollapsed","true"))}catch(e){console.error("Error toggling collapse state:",e)}}openSettings(){try{if("function"==typeof e.SettingsManager){new e.SettingsManager({labelManager:this.labelManager,assigneeManager:this.assigneeManager,gitlabApi:this.gitlabApi,uiManager:this,onSettingsChanged:e=>{"all"!==e&&"labels"!==e||this.bulkCommentsView&&this.bulkCommentsView.addLabelShortcut(),"all"!==e&&"assignees"!==e||this.bulkCommentsView&&this.bulkCommentsView.addAssignShortcut()}}).openSettingsModal()}else console.error("SettingsManager not available")}catch(e){console.error("Error opening settings:",e)}}updateHeader(e){this.header&&(this.header.innerHTML=e)}addLoadingScreen(t,s,n="Loading..."){if("string"==typeof t&&(t=document.getElementById(t)),!t)return console.warn(`Container not found for loading screen: ${s}`),null;const i=document.getElementById(`loading-screen-${s}`);if(i){const e=i.querySelector(".loading-message");return e&&(e.textContent=n),i}const o=document.createElement("div");o.id=`loading-screen-${s}`,o.className="gitlab-helper-loading-screen",o.style.position="absolute",o.style.top="0",o.style.left="0",o.style.width="100%",o.style.height="100%",o.style.backgroundColor="rgba(0, 0, 0, 0.5)",o.style.display="flex",o.style.flexDirection="column",o.style.justifyContent="center",o.style.alignItems="center",o.style.zIndex="101",o.style.transition="opacity 0.3s ease";const a=document.createElement("div");a.className="loading-spinner",a.style.width="40px",a.style.height="40px",a.style.borderRadius="50%",a.style.border="3px solid rgba(255, 255, 255, 0.2)",a.style.borderTopColor="#ffffff",a.style.animation="gitlab-helper-spin 1s linear infinite";const r=document.createElement("div");if(r.className="loading-message",r.textContent=n,r.style.marginTop="15px",r.style.fontWeight="bold",r.style.color="#ffffff",r.style.fontSize="14px",r.style.textAlign="center",r.style.padding="0 20px",r.style.maxWidth="90%",!document.getElementById("gitlab-helper-loading-styles")){const e=document.createElement("style");e.id="gitlab-helper-loading-styles",e.textContent="\n        @keyframes gitlab-helper-spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n        }\n        @keyframes gitlab-helper-pulse {\n            0% { opacity: 0.6; }\n            50% { opacity: 1; }\n            100% { opacity: 0.6; }\n        }\n    ",document.head.appendChild(e)}o.appendChild(a),o.appendChild(r);const l=e.getComputedStyle(t).position;return"static"!==l&&l||(t.style.position="relative",t.dataset.originalPosition=l),t.appendChild(o),r.style.animation="gitlab-helper-pulse 2s ease infinite",o}removeLoadingScreen(e,t=!0){const s=document.getElementById(`loading-screen-${e}`);if(!s)return;const n=s.parentNode;t?(s.style.opacity="0",setTimeout((()=>{s.parentNode&&s.parentNode.removeChild(s),n&&n.dataset.originalPosition&&(n.style.position=n.dataset.originalPosition,delete n.dataset.originalPosition)}),300)):(s.parentNode.removeChild(s),n&&n.dataset.originalPosition&&(n.style.position=n.dataset.originalPosition,delete n.dataset.originalPosition))}updateLoadingMessage(e,t){const s=document.getElementById(`loading-screen-${e}`);if(!s)return;const n=s.querySelector(".loading-message");n&&(n.textContent=t)}ensureTabContentHeight(){const e=[document.getElementById("assignee-time-summary-content"),document.getElementById("boards-time-summary-content"),document.getElementById("bulk-comments-content")],t=document.getElementById("assignee-time-summary-wrapper"),s=this.headerDiv||document.querySelector("#assignee-time-summary > div:first-child");if(!t||!s)return console.warn("Could not find wrapper or header elements for height calculation"),void e.forEach((e=>{e&&(e.style.minHeight="300px",e.style.position="relative")}));const n=s.offsetHeight+36+(this.boardStats?this.boardStats.offsetHeight:0)+20;e.forEach((e=>{e&&(e.style.minHeight=`calc(100% - ${n}px)`,e.style.height=`calc(100% - ${n}px)`,e.style.position="relative")}))}initializeKeyboardShortcuts(){try{this.toggleShortcut=getToggleShortcut(),this.keyboardHandler=this.createKeyboardHandler(),document.addEventListener("keydown",this.keyboardHandler)}catch(e){console.error("Error initializing keyboard shortcuts:",e)}}createKeyboardHandler(){return e=>{isActiveInputElement(e.target)||e.ctrlKey||e.altKey||e.shiftKey||e.metaKey||e.key.toLowerCase()===this.toggleShortcut.toLowerCase()&&(this.toggleCollapse(),e.preventDefault())}}updateKeyboardShortcut(e){if(e&&"string"==typeof e&&1===e.length)try{this.keyboardHandler&&document.removeEventListener("keydown",this.keyboardHandler),this.toggleShortcut=e,this.keyboardHandler=this.createKeyboardHandler(),document.addEventListener("keydown",this.keyboardHandler)}catch(e){console.error("Error updating keyboard shortcut:",e)}else console.warn("Invalid shortcut provided:",e)}},e.uiManager=e.uiManager||new UIManager,e.createSummaryContainer=function createSummaryContainer(){return uiManager.initialize(),uiManager.container},e.updateSummaryTab=async function(e,t,s,n,i,o,a){if("function"==typeof processBoards){const{closedBoardCards:e}=processBoards();uiManager.updateBoardStats({totalCards:s,withTimeCards:n,closedCards:e||0})}await uiManager.summaryView.render(e,t,s,n,i,o,a)},e.updateBoardsTab=function updateBoardsTab(e,t){uiManager.boardsView.render(e,t)},e.updateBulkCommentsTab=function updateBulkCommentsTab(){uiManager.bulkCommentsView.render()},e.renderHistory=function renderHistory(){uiManager.historyView.render()},e.addEventListener("scroll",(()=>{uiManager&&uiManager.issueSelector&&"function"==typeof uiManager.issueSelector.repositionOverlays&&uiManager.issueSelector.repositionOverlays()})),e.addEventListener("resize",(()=>{uiManager&&uiManager.issueSelector&&"function"==typeof uiManager.issueSelector.repositionOverlays&&uiManager.issueSelector.repositionOverlays()})),e.uiManager=uiManager,e.updateSummaryTab=updateSummaryTab,e.updateBoardsTab=updateBoardsTab,e.updateBulkCommentsTab=updateBulkCommentsTab,e.renderHistory=renderHistory,e.createSummaryContainer=createSummaryContainer,e.SettingsManager=SettingsManager,setTimeout((()=>{const t=document.querySelector('#assignee-time-summary button[title="Settings"]');t?t.onclick=t=>{t.stopPropagation();try{new SettingsManager({labelManager:e.uiManager?.labelManager,assigneeManager:e.uiManager?.assigneeManager,gitlabApi:e.gitlabApi,onSettingsChanged:t=>{e.uiManager?.bulkCommentsView&&("all"!==t&&"labels"!==t||e.uiManager.bulkCommentsView.addLabelShortcut(),"all"!==t&&"assignees"!==t||e.uiManager.bulkCommentsView.addAssignShortcut())}}).openSettingsModal()}catch(e){console.error("Error creating settings manager:",e)}}:console.warn("Settings button not found")}),2e3);let n=null,i=null;function initializeLinkedItemsManager(){n||(n=new LinkedItemsManager({uiManager:e.uiManager}),e.linkedItemsManager=n,n.initialize())}function initializeLabelDisplayManager(){i||(i=new LabelDisplayManager({uiManager:e.uiManager}),e.labelDisplayManager=i,i.initialize())}e.toggleLinkedItems=function toggleLinkedItems(){n?n.initialized?n.cleanup():n.initialize():initializeLinkedItemsManager()},e.toggleHideLabels=function toggleHideLabels(){i?i.initialized?(i.cleanup(),n.repositionDropdowns()):(i.initialize(),n.repositionDropdowns()):(initializeLabelDisplayManager(),initializeLinkedItemsManager())};e.gitlabApi||new GitLabAPI;function createUIManager(t=document.body){if(!e.gitlabApi)try{e.gitlabApi=new GitLabAPI}catch(e){console.error("Error creating GitLabAPI instance:",e)}try{if(e.uiManager=e.uiManager||new UIManager,uiManager.initialize(t),e.uiManager=uiManager,!e.settingsManager&&"function"==typeof SettingsManager)try{e.settingsManager=new SettingsManager({labelManager:uiManager?.labelManager,assigneeManager:uiManager?.assigneeManager,gitlabApi:e.gitlabApi,onSettingsChanged:e=>{uiManager?.bulkCommentsView&&("all"!==e&&"labels"!==e||uiManager.bulkCommentsView.addLabelShortcut(),"all"!==e&&"assignees"!==e||uiManager.bulkCommentsView.addAssignShortcut())}})}catch(e){console.error("Error creating SettingsManager:",e)}return uiManager}catch(e){return console.error("Error creating UI Manager:",e),null}}let o=!1;function checkAndInit(){o||e.location.href.includes("/boards")&&function waitForBoardsElement(e=30,t=500){return new Promise(((s,n)=>{let i=0;const checkForElement=()=>{i++;const n=document.querySelector('[data-testid="boards-list"]');if(n)return void s(n);const o=[".boards-list",".board-list-component",".boards-app"];for(const e of o){const t=document.querySelector(e);if(t)return void s(t)}if(i>=e)return console.warn("Maximum attempts reached, attaching to body as fallback"),void s(document.body);setTimeout(checkForElement,t)};checkForElement()}))}().then((t=>{createUIManager(t);if(!e.historyManager)try{e.historyManager=new HistoryManager}catch(e){console.error("Error initializing HistoryManager:",e)}o=!0,initializeLabelDisplayManager(),initializeLinkedItemsManager(),waitForBoards()})).catch((t=>{console.error("Error initializing UI:",t);createUIManager(document.body);if(!e.historyManager)try{e.historyManager=new HistoryManager}catch(e){console.error("Error initializing HistoryManager:",e)}o=!0,initializeLabelDisplayManager(),initializeLinkedItemsManager(),waitForBoards()}))}function updateSummary(t=!1){if(!e.uiManager)return void console.warn("UI Manager not initialized, cannot update summary");let s,n=!1;clearTimeout(s);try{const t=processBoards(),{assigneeTimeMap:i,boardData:o,boardAssigneeData:a,totalEstimate:r,cardsProcessed:l,cardsWithTime:c,currentMilestone:d,closedBoardCards:h}=t;clearTimeout(s),s=setTimeout((()=>{n=!0}),3e3),e.uiManager.updateBoardStats({totalCards:l,withTimeCards:c,closedCards:h||0});const u=r/3600;e.uiManager.updateHeader(`Summary ${u}h`);const p=o||{},m=a||{};e.uiManager.summaryView&&e.uiManager.summaryView.render(i,r,l,c,d,p,m),e.uiManager.boardsView&&e.uiManager.boardsView.render(p,m);const g=document.getElementById("sprint-management-content");g&&"block"===g.style.display&&e.uiManager.sprintManagementView&&e.uiManager.sprintManagementView.render();const y=document.getElementById("bulk-comments-content");y&&"block"===y.style.display&&e.uiManager.bulkCommentsView&&e.uiManager.bulkCommentsView.render()}catch(e){console.error("Error updating summary:",e)}}function addBoardChangeListeners(){try{document.querySelectorAll(".board-list").forEach((e=>{new MutationObserver((()=>{updateSummary()})).observe(e,{childList:!0,subtree:!0})}))}catch(e){console.error("Error adding board change listeners:",e)}}function waitForBoards(){if(e.boardsInitialized)return;let t=document.getElementById("board-stats-summary");if(!t)if(t=document.createElement("div"),t.id="board-stats-summary",t.style.fontSize="13px",t.style.color="#555",t.style.marginBottom="10px",e.uiManager?.container)e.uiManager.container.appendChild(t);else{const e=document.createElement("div");e.id="temp-stats-container",e.appendChild(t),document.body.appendChild(e)}t.textContent="Waiting for boards to load...";let s=0;const n=setInterval((()=>{s++,e.linkedItemsManager&&!e.linkedItemsManager.initialized?initializeLinkedItemsManager():e.linkedItemsManager&&e.linkedItemsManager.initialized&&e.linkedItemsManager.refreshDropdowns();const i=document.querySelectorAll(".board-list");i.length>=3?(clearInterval(n),t&&(t.textContent=`Found ${i.length} boards, initializing...`),setTimeout((()=>{updateSummary(),addBoardChangeListeners(),e.boardsInitialized=!0}),1e3)):s>=30?(clearInterval(n),t&&(t.textContent=`Found ${i.length} boards, continuing anyway...`),setTimeout((()=>{updateSummary(),addBoardChangeListeners(),e.boardsInitialized=!0}),1e3)):i.length>0&&t&&(t.textContent=`Found ${i.length} boards, waiting for more...`)}),500)}checkAndInit();let a=e.location.href;try{new MutationObserver((()=>{e.location.href!==a&&(a=e.location.href,setTimeout(checkAndInit,1e3))})).observe(document,{subtree:!0,childList:!0})}catch(e){console.error("Error setting up URL observer:",e)}e.updateSummary=updateSummary,e.checkAndInit=checkAndInit,e.waitForBoards=waitForBoards,e.SettingsManager=SettingsManager,e.LabelManager=LabelManager,e.AssigneeManager=AssigneeManager,e.addEventListener("scroll",(()=>{e.uiManager?.issueSelector&&"function"==typeof e.uiManager.issueSelector.repositionOverlays&&e.uiManager.issueSelector.repositionOverlays()})),e.addEventListener("resize",(()=>{e.uiManager?.issueSelector&&"function"==typeof e.uiManager.issueSelector.repositionOverlays&&e.uiManager.issueSelector.repositionOverlays()})),function(){"use strict"}()}(window);